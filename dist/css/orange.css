@import url(https://fonts.googleapis.com/css?family=Rubik:300,300i,400,400i,500,500i,700,700i,900,900i|Roboto+Mono&display=swap);

/**
 * Orange
 */
/** Normalize DOM */
/*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */
/* Document
   ========================================================================== */
/**
 * Use a better box model (opinionated).
 */
html {
  box-sizing: border-box; }
*,
*::before,
*::after {
  box-sizing: inherit; }
/**
 * Use a more readable tab size (opinionated).
 */
:root {
  -moz-tab-size: 4;
  tab-size: 4; }
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }
/**
 * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; }
/* Grouping content
   ========================================================================== */
/**
 * Add the correct height in Firefox.
 */
hr {
  height: 0; }
/* Text-level semantics
   ========================================================================== */
/**
 * Add the correct text decoration in Chrome, Edge, and Safari.
 */
abbr[title] {
  text-decoration: underline dotted; }
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }
/**
 * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp,
pre {
  font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }
/**
 * Prevent `sub` and `sup` elements from affecting the line height in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }
sub {
  bottom: -0.25em; }
sup {
  top: -0.5em; }
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }
/**
 * Remove the inheritance of text transform in Edge and Firefox.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }
/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }
/**
 * Remove the padding so developers are not caught out when they zero out `fieldset` elements in all browsers.
 */
legend {
  padding: 0; }
/**
 * Add the correct vertical alignment in Chrome and Firefox.
 */
progress {
  vertical-align: baseline; }
/**
 * Correct the cursor style of increment and decrement buttons in Safari.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }
/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Chrome and Safari.
 */
summary {
  display: list-item; }
/** Orange components */
/**
 * Orange
 */
/** Core
--------------------------------------------------*/
/**
 * Functions
 */
/** Helpers
--------------------------------------------------*/
/** Colors
--------------------------------------------------*/
/** Typography
--------------------------------------------------*/
/** Font sizes */
/** Font weights */
/** Shadows
--------------------------------------------------*/
/** Breakpoints
--------------------------------------------------*/
/** Border radius
--------------------------------------------------*/
/** Display
--------------------------------------------------*/
/** Spacing
--------------------------------------------------*/
/** Components
--------------------------------------------------*/
/**
 * Breadcrumbs
 */
/** Button */
/**
 * Variables
 */
/** Global
--------------------------------------------------*/
/**
 * Variables - Grid
 */
/**
 * Gap
 */
/* Desktop */
/* Mobile */
/**
 * Container
 */
/**
 * Column
 */
/** Includes */
/** Basic */
/** Width */
/**
 * Row
 */
/** Includes */
/** Basic */
/**
 * Variables - Breakpoints
 */
/**
 * Media Query Breakpoint Sizes
 */
/** {breakpoint} and up */
/* XX Small */
/* Micro */
/* Extra Small */
/* Small */
/* Medium */
/* Large */
/* Extra Large */
/**
 * Variables - Media Queries
 */
/*
  Media Queries
*/
/* Screen */
/* XX Small Query */
/* X Small Query */
/* Small Query */
/* Medium Query */
/* Large Query */
/* Large Query */
/* Extra Large Query */
/*
	Media Query Properties
*/
/* Number of Columns */
/* Breakpoints query breakpoint and up */
/* Breakpoints query breakpoint and down */
/* Breakpoints query breakpoint only */
/*----------------------------------*\
  	Variables - Spacings
\*----------------------------------*/
/* Spacings with breakpoints */
/* Base space */
/* Sizes of spacings - Margin and Padding. Just change the numbers for different spacings, or add new ones */
/*
  Margins and paddings
*/
/* Prefix classes for spacings */
/** Sidebar */
/** Typography
--------------------------------------------------*/
/** Include fonts */
/** Colors
--------------------------------------------------*/
/** Shadows
--------------------------------------------------*/
/** Spacings - for others check variables/_spacings
--------------------------------------------------*/
/** Global properties
--------------------------------------------------*/
/**
 * Border radius
 */
/**
 * Display
 */
/** Components properties
--------------------------------------------------*/
/**
 * Button
 */
/** Icon only */
/** Basic */
/** Secondary */
/** Small */
/** Large */
/** Icon only */
/**
 * Navigation
 */
/** Item */
/** Link */
/** Icon */
/** Color */
/** Right */
/**
 * Avatar
 */
/** Small */
/** Large */
/**
 * Breadcrumbs
 */
/** Background */
/** Color */
/** Item */
/** Link */
/** Icon */
/** Button */
/**
 * Callout
 */
/** Shadow */
/** Image */
/** Action */
/** Color */
/**
 * Card
 */
/** Header */
/** Body */
/** Section */
/** Footer */
/**
 * Empty State
 */
/** Description */
/** Buttons */
/**
 * Image
 */
/** Shadow */
/** Action */
/**
 * Message
 */
/** Link */
/** Body */
/**
 * Input
 */
/** Large */
/** Focus */
/** Disabled */
/** Readonly */
/** Label */
/** Action / Extras */
/** Message */
/** Description */
/** Error */
/**
 * Checkbox
 */
/** Group */
/** Label */
/** Disabled */
/** Checked */
/**
 * Dropdown
 */
/** Label */
/** Large */
/** Action */
/** Open */
/** Text */
/** Icon */
/** Action */
/** Open */
/** Disabled */
/** Content */
/** Menu */
/** Item */
/**
 * Label
 */
/** Icon */
/** Small */
/** Dot */
/** Pill */
/** Dismiss */
/**
 * List
 */
/** Item */
/** Divide */
/** Large */
/** Medium */
/** Small */
/** No Gutter */
/** Hover */
/**
 * Radio
 */
/** Label */
/** Disabled */
/** Group */
/**
 * Table
 */
/** Table Head */
/** Table Body*/
/** Celled */
/** Compact */
/** Definition */
/**
 * Toggle
 */
/** Button */
/** Input */
/** Label */
/** Checked */
/** Disabled */
/** Label */
/** Large */
/** Global
--------------------------------------------------*/
/**
 * Typography
 */
/** Global
--------------------------------------------------*/
body {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.5;
  font-size: 16px;
  font-family: "Rubik", arial, sans-serif; }
/** Links
--------------------------------------------------*/
a {
  text-decoration: none;
  color: #4648d2; }
a:hover {
    text-decoration: none;
    color: #8b8df3; }
/** Body text
--------------------------------------------------*/
p {
  margin: 0 0 24px; }
pre {
  margin: 0 0 24px; }
code {
  font-family: "Roboto Mono", monospace; }
/** Inline mark element */
mark {
  border-radius: 3px;
  padding: 1.5px 3px;
  color: #4648d2;
  background-color: rgba(70, 72, 210, 0.05); }
/** Inline code element */
p code,
.table code {
  padding: 1.5px 3px;
  color: #4648d2;
  background-color: rgba(70, 72, 210, 0.05);
  font-size: 0.9em;
  /** compensate for bigger mono-spaced fonts */ }
/** Headings
--------------------------------------------------*/
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0; }
h1,
.h1 {
  font-size: 54px;
  font-weight: 600;
  margin: 24px 0; }
h2,
.h2 {
  font-size: 36px;
  font-weight: 400;
  margin: 24px 0; }
h3,
.h3 {
  font-size: 21px;
  font-weight: 400;
  margin: 12px 0; }
h4,
.h4 {
  font-size: 18px;
  font-weight: 400;
  margin: 12px 0; }
h5,
.h5 {
  font-size: 16px;
  font-weight: 400;
  margin: 12px 0; }
h6,
.h6 {
  font-size: 14px;
  font-weight: 400;
  margin: 12px 0; }
/**
 * Global styles
 */
/**
 * Grid
 */
/**
  Container
*/
.container {
  width: 100%; }
@media (min-width: 480px) {
    .container {
      max-width: 480px; } }
@media (min-width: 640px) {
    .container {
      max-width: 580px; } }
@media (min-width: 768px) {
    .container {
      max-width: 720px; } }
@media (min-width: 992px) {
    .container {
      max-width: 960px; } }
@media (min-width: 1200px) {
    .container {
      max-width: 1140px; } }
@media (min-width: 1440px) {
    .container {
      max-width: 1280px; } }
.container, .container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: 12px;
  padding-left: 12px; }
/**
  Grid
*/
/* Grid (usually it was called row) */
.grid {
  display: grid;
  grid-gap: 12px;
  grid-template-columns: repeat(12, 1fr); }
/** Exact number of columns in grid */
.grid--1 {
  grid-template-columns: repeat(1, 1fr); }
.grid--2 {
  grid-template-columns: repeat(2, 1fr); }
.grid--3 {
  grid-template-columns: repeat(3, 1fr); }
.grid--4 {
  grid-template-columns: repeat(4, 1fr); }
.grid--5 {
  grid-template-columns: repeat(5, 1fr); }
.grid--6 {
  grid-template-columns: repeat(6, 1fr); }
.grid--7 {
  grid-template-columns: repeat(7, 1fr); }
.grid--8 {
  grid-template-columns: repeat(8, 1fr); }
.grid--9 {
  grid-template-columns: repeat(9, 1fr); }
.grid--10 {
  grid-template-columns: repeat(10, 1fr); }
.grid--11 {
  grid-template-columns: repeat(11, 1fr); }
.grid--12 {
  grid-template-columns: repeat(12, 1fr); }
@media (min-width: 320px) {
  .xxs\:grid--1 {
    grid-template-columns: repeat(1, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--2 {
    grid-template-columns: repeat(2, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--3 {
    grid-template-columns: repeat(3, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--4 {
    grid-template-columns: repeat(4, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--5 {
    grid-template-columns: repeat(5, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--6 {
    grid-template-columns: repeat(6, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--7 {
    grid-template-columns: repeat(7, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--8 {
    grid-template-columns: repeat(8, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--9 {
    grid-template-columns: repeat(9, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--10 {
    grid-template-columns: repeat(10, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--11 {
    grid-template-columns: repeat(11, 1fr); } }
@media (min-width: 320px) {
  .xxs\:grid--12 {
    grid-template-columns: repeat(12, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--1 {
    grid-template-columns: repeat(1, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--2 {
    grid-template-columns: repeat(2, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--3 {
    grid-template-columns: repeat(3, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--4 {
    grid-template-columns: repeat(4, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--5 {
    grid-template-columns: repeat(5, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--6 {
    grid-template-columns: repeat(6, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--7 {
    grid-template-columns: repeat(7, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--8 {
    grid-template-columns: repeat(8, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--9 {
    grid-template-columns: repeat(9, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--10 {
    grid-template-columns: repeat(10, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--11 {
    grid-template-columns: repeat(11, 1fr); } }
@media (min-width: 480px) {
  .xs\:grid--12 {
    grid-template-columns: repeat(12, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--1 {
    grid-template-columns: repeat(1, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--2 {
    grid-template-columns: repeat(2, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--3 {
    grid-template-columns: repeat(3, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--4 {
    grid-template-columns: repeat(4, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--5 {
    grid-template-columns: repeat(5, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--6 {
    grid-template-columns: repeat(6, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--7 {
    grid-template-columns: repeat(7, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--8 {
    grid-template-columns: repeat(8, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--9 {
    grid-template-columns: repeat(9, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--10 {
    grid-template-columns: repeat(10, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--11 {
    grid-template-columns: repeat(11, 1fr); } }
@media (min-width: 640px) {
  .sm\:grid--12 {
    grid-template-columns: repeat(12, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--1 {
    grid-template-columns: repeat(1, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--2 {
    grid-template-columns: repeat(2, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--3 {
    grid-template-columns: repeat(3, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--4 {
    grid-template-columns: repeat(4, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--5 {
    grid-template-columns: repeat(5, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--6 {
    grid-template-columns: repeat(6, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--7 {
    grid-template-columns: repeat(7, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--8 {
    grid-template-columns: repeat(8, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--9 {
    grid-template-columns: repeat(9, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--10 {
    grid-template-columns: repeat(10, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--11 {
    grid-template-columns: repeat(11, 1fr); } }
@media (min-width: 768px) {
  .md\:grid--12 {
    grid-template-columns: repeat(12, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--1 {
    grid-template-columns: repeat(1, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--2 {
    grid-template-columns: repeat(2, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--3 {
    grid-template-columns: repeat(3, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--4 {
    grid-template-columns: repeat(4, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--5 {
    grid-template-columns: repeat(5, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--6 {
    grid-template-columns: repeat(6, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--7 {
    grid-template-columns: repeat(7, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--8 {
    grid-template-columns: repeat(8, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--9 {
    grid-template-columns: repeat(9, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--10 {
    grid-template-columns: repeat(10, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--11 {
    grid-template-columns: repeat(11, 1fr); } }
@media (min-width: 992px) {
  .lg\:grid--12 {
    grid-template-columns: repeat(12, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--1 {
    grid-template-columns: repeat(1, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--2 {
    grid-template-columns: repeat(2, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--3 {
    grid-template-columns: repeat(3, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--4 {
    grid-template-columns: repeat(4, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--5 {
    grid-template-columns: repeat(5, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--6 {
    grid-template-columns: repeat(6, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--7 {
    grid-template-columns: repeat(7, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--8 {
    grid-template-columns: repeat(8, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--9 {
    grid-template-columns: repeat(9, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--10 {
    grid-template-columns: repeat(10, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--11 {
    grid-template-columns: repeat(11, 1fr); } }
@media (min-width: 1200px) {
  .xl\:grid--12 {
    grid-template-columns: repeat(12, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--1 {
    grid-template-columns: repeat(1, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--2 {
    grid-template-columns: repeat(2, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--3 {
    grid-template-columns: repeat(3, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--4 {
    grid-template-columns: repeat(4, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--5 {
    grid-template-columns: repeat(5, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--6 {
    grid-template-columns: repeat(6, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--7 {
    grid-template-columns: repeat(7, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--8 {
    grid-template-columns: repeat(8, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--9 {
    grid-template-columns: repeat(9, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--10 {
    grid-template-columns: repeat(10, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--11 {
    grid-template-columns: repeat(11, 1fr); } }
@media (min-width: 1440px) {
  .xxl\:grid--12 {
    grid-template-columns: repeat(12, 1fr); } }
/* Auto Layout */
.grid--columns-auto {
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr)); }
.grid--columns-auto-narrow {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); }
.grid--columns-auto-wide {
    grid-template-columns: repeat(auto-fill, minmax(360px, 1fr)); }
/* Column span */
.col-1 {
  grid-column: span 1; }
.col-2 {
  grid-column: span 2; }
.col-3 {
  grid-column: span 3; }
.col-4 {
  grid-column: span 4; }
.col-5 {
  grid-column: span 5; }
.col-6 {
  grid-column: span 6; }
.col-7 {
  grid-column: span 7; }
.col-8 {
  grid-column: span 8; }
.col-9 {
  grid-column: span 9; }
.col-10 {
  grid-column: span 10; }
.col-11 {
  grid-column: span 11; }
.col-12 {
  grid-column: span 12; }
/** Responsive */
@media (min-width: 320px) {
  .xxs\:col-1 {
    grid-column: span 1; } }
@media (min-width: 320px) {
  .xxs\:col-2 {
    grid-column: span 2; } }
@media (min-width: 320px) {
  .xxs\:col-3 {
    grid-column: span 3; } }
@media (min-width: 320px) {
  .xxs\:col-4 {
    grid-column: span 4; } }
@media (min-width: 320px) {
  .xxs\:col-5 {
    grid-column: span 5; } }
@media (min-width: 320px) {
  .xxs\:col-6 {
    grid-column: span 6; } }
@media (min-width: 320px) {
  .xxs\:col-7 {
    grid-column: span 7; } }
@media (min-width: 320px) {
  .xxs\:col-8 {
    grid-column: span 8; } }
@media (min-width: 320px) {
  .xxs\:col-9 {
    grid-column: span 9; } }
@media (min-width: 320px) {
  .xxs\:col-10 {
    grid-column: span 10; } }
@media (min-width: 320px) {
  .xxs\:col-11 {
    grid-column: span 11; } }
@media (min-width: 320px) {
  .xxs\:col-12 {
    grid-column: span 12; } }
@media (min-width: 480px) {
  .xs\:col-1 {
    grid-column: span 1; } }
@media (min-width: 480px) {
  .xs\:col-2 {
    grid-column: span 2; } }
@media (min-width: 480px) {
  .xs\:col-3 {
    grid-column: span 3; } }
@media (min-width: 480px) {
  .xs\:col-4 {
    grid-column: span 4; } }
@media (min-width: 480px) {
  .xs\:col-5 {
    grid-column: span 5; } }
@media (min-width: 480px) {
  .xs\:col-6 {
    grid-column: span 6; } }
@media (min-width: 480px) {
  .xs\:col-7 {
    grid-column: span 7; } }
@media (min-width: 480px) {
  .xs\:col-8 {
    grid-column: span 8; } }
@media (min-width: 480px) {
  .xs\:col-9 {
    grid-column: span 9; } }
@media (min-width: 480px) {
  .xs\:col-10 {
    grid-column: span 10; } }
@media (min-width: 480px) {
  .xs\:col-11 {
    grid-column: span 11; } }
@media (min-width: 480px) {
  .xs\:col-12 {
    grid-column: span 12; } }
@media (min-width: 640px) {
  .sm\:col-1 {
    grid-column: span 1; } }
@media (min-width: 640px) {
  .sm\:col-2 {
    grid-column: span 2; } }
@media (min-width: 640px) {
  .sm\:col-3 {
    grid-column: span 3; } }
@media (min-width: 640px) {
  .sm\:col-4 {
    grid-column: span 4; } }
@media (min-width: 640px) {
  .sm\:col-5 {
    grid-column: span 5; } }
@media (min-width: 640px) {
  .sm\:col-6 {
    grid-column: span 6; } }
@media (min-width: 640px) {
  .sm\:col-7 {
    grid-column: span 7; } }
@media (min-width: 640px) {
  .sm\:col-8 {
    grid-column: span 8; } }
@media (min-width: 640px) {
  .sm\:col-9 {
    grid-column: span 9; } }
@media (min-width: 640px) {
  .sm\:col-10 {
    grid-column: span 10; } }
@media (min-width: 640px) {
  .sm\:col-11 {
    grid-column: span 11; } }
@media (min-width: 640px) {
  .sm\:col-12 {
    grid-column: span 12; } }
@media (min-width: 768px) {
  .md\:col-1 {
    grid-column: span 1; } }
@media (min-width: 768px) {
  .md\:col-2 {
    grid-column: span 2; } }
@media (min-width: 768px) {
  .md\:col-3 {
    grid-column: span 3; } }
@media (min-width: 768px) {
  .md\:col-4 {
    grid-column: span 4; } }
@media (min-width: 768px) {
  .md\:col-5 {
    grid-column: span 5; } }
@media (min-width: 768px) {
  .md\:col-6 {
    grid-column: span 6; } }
@media (min-width: 768px) {
  .md\:col-7 {
    grid-column: span 7; } }
@media (min-width: 768px) {
  .md\:col-8 {
    grid-column: span 8; } }
@media (min-width: 768px) {
  .md\:col-9 {
    grid-column: span 9; } }
@media (min-width: 768px) {
  .md\:col-10 {
    grid-column: span 10; } }
@media (min-width: 768px) {
  .md\:col-11 {
    grid-column: span 11; } }
@media (min-width: 768px) {
  .md\:col-12 {
    grid-column: span 12; } }
@media (min-width: 992px) {
  .lg\:col-1 {
    grid-column: span 1; } }
@media (min-width: 992px) {
  .lg\:col-2 {
    grid-column: span 2; } }
@media (min-width: 992px) {
  .lg\:col-3 {
    grid-column: span 3; } }
@media (min-width: 992px) {
  .lg\:col-4 {
    grid-column: span 4; } }
@media (min-width: 992px) {
  .lg\:col-5 {
    grid-column: span 5; } }
@media (min-width: 992px) {
  .lg\:col-6 {
    grid-column: span 6; } }
@media (min-width: 992px) {
  .lg\:col-7 {
    grid-column: span 7; } }
@media (min-width: 992px) {
  .lg\:col-8 {
    grid-column: span 8; } }
@media (min-width: 992px) {
  .lg\:col-9 {
    grid-column: span 9; } }
@media (min-width: 992px) {
  .lg\:col-10 {
    grid-column: span 10; } }
@media (min-width: 992px) {
  .lg\:col-11 {
    grid-column: span 11; } }
@media (min-width: 992px) {
  .lg\:col-12 {
    grid-column: span 12; } }
@media (min-width: 1200px) {
  .xl\:col-1 {
    grid-column: span 1; } }
@media (min-width: 1200px) {
  .xl\:col-2 {
    grid-column: span 2; } }
@media (min-width: 1200px) {
  .xl\:col-3 {
    grid-column: span 3; } }
@media (min-width: 1200px) {
  .xl\:col-4 {
    grid-column: span 4; } }
@media (min-width: 1200px) {
  .xl\:col-5 {
    grid-column: span 5; } }
@media (min-width: 1200px) {
  .xl\:col-6 {
    grid-column: span 6; } }
@media (min-width: 1200px) {
  .xl\:col-7 {
    grid-column: span 7; } }
@media (min-width: 1200px) {
  .xl\:col-8 {
    grid-column: span 8; } }
@media (min-width: 1200px) {
  .xl\:col-9 {
    grid-column: span 9; } }
@media (min-width: 1200px) {
  .xl\:col-10 {
    grid-column: span 10; } }
@media (min-width: 1200px) {
  .xl\:col-11 {
    grid-column: span 11; } }
@media (min-width: 1200px) {
  .xl\:col-12 {
    grid-column: span 12; } }
@media (min-width: 1440px) {
  .xxl\:col-1 {
    grid-column: span 1; } }
@media (min-width: 1440px) {
  .xxl\:col-2 {
    grid-column: span 2; } }
@media (min-width: 1440px) {
  .xxl\:col-3 {
    grid-column: span 3; } }
@media (min-width: 1440px) {
  .xxl\:col-4 {
    grid-column: span 4; } }
@media (min-width: 1440px) {
  .xxl\:col-5 {
    grid-column: span 5; } }
@media (min-width: 1440px) {
  .xxl\:col-6 {
    grid-column: span 6; } }
@media (min-width: 1440px) {
  .xxl\:col-7 {
    grid-column: span 7; } }
@media (min-width: 1440px) {
  .xxl\:col-8 {
    grid-column: span 8; } }
@media (min-width: 1440px) {
  .xxl\:col-9 {
    grid-column: span 9; } }
@media (min-width: 1440px) {
  .xxl\:col-10 {
    grid-column: span 10; } }
@media (min-width: 1440px) {
  .xxl\:col-11 {
    grid-column: span 11; } }
@media (min-width: 1440px) {
  .xxl\:col-12 {
    grid-column: span 12; } }
/* Column exact positions */
.col-pos-1 {
  grid-column: 1; }
.col-pos-2 {
  grid-column: 2; }
.col-pos-3 {
  grid-column: 3; }
.col-pos-4 {
  grid-column: 4; }
.col-pos-5 {
  grid-column: 5; }
.col-pos-6 {
  grid-column: 6; }
.col-pos-7 {
  grid-column: 7; }
.col-pos-8 {
  grid-column: 8; }
.col-pos-9 {
  grid-column: 9; }
.col-pos-10 {
  grid-column: 10; }
.col-pos-11 {
  grid-column: 11; }
.col-pos-12 {
  grid-column: 12; }
/** Responsive */
@media (min-width: 320px) {
  .xxs\:col-pos-1 {
    grid-column: 1; } }
@media (min-width: 320px) {
  .xxs\:col-pos-2 {
    grid-column: 2; } }
@media (min-width: 320px) {
  .xxs\:col-pos-3 {
    grid-column: 3; } }
@media (min-width: 320px) {
  .xxs\:col-pos-4 {
    grid-column: 4; } }
@media (min-width: 320px) {
  .xxs\:col-pos-5 {
    grid-column: 5; } }
@media (min-width: 320px) {
  .xxs\:col-pos-6 {
    grid-column: 6; } }
@media (min-width: 320px) {
  .xxs\:col-pos-7 {
    grid-column: 7; } }
@media (min-width: 320px) {
  .xxs\:col-pos-8 {
    grid-column: 8; } }
@media (min-width: 320px) {
  .xxs\:col-pos-9 {
    grid-column: 9; } }
@media (min-width: 320px) {
  .xxs\:col-pos-10 {
    grid-column: 10; } }
@media (min-width: 320px) {
  .xxs\:col-pos-11 {
    grid-column: 11; } }
@media (min-width: 320px) {
  .xxs\:col-pos-12 {
    grid-column: 12; } }
@media (min-width: 480px) {
  .xs\:col-pos-1 {
    grid-column: 1; } }
@media (min-width: 480px) {
  .xs\:col-pos-2 {
    grid-column: 2; } }
@media (min-width: 480px) {
  .xs\:col-pos-3 {
    grid-column: 3; } }
@media (min-width: 480px) {
  .xs\:col-pos-4 {
    grid-column: 4; } }
@media (min-width: 480px) {
  .xs\:col-pos-5 {
    grid-column: 5; } }
@media (min-width: 480px) {
  .xs\:col-pos-6 {
    grid-column: 6; } }
@media (min-width: 480px) {
  .xs\:col-pos-7 {
    grid-column: 7; } }
@media (min-width: 480px) {
  .xs\:col-pos-8 {
    grid-column: 8; } }
@media (min-width: 480px) {
  .xs\:col-pos-9 {
    grid-column: 9; } }
@media (min-width: 480px) {
  .xs\:col-pos-10 {
    grid-column: 10; } }
@media (min-width: 480px) {
  .xs\:col-pos-11 {
    grid-column: 11; } }
@media (min-width: 480px) {
  .xs\:col-pos-12 {
    grid-column: 12; } }
@media (min-width: 640px) {
  .sm\:col-pos-1 {
    grid-column: 1; } }
@media (min-width: 640px) {
  .sm\:col-pos-2 {
    grid-column: 2; } }
@media (min-width: 640px) {
  .sm\:col-pos-3 {
    grid-column: 3; } }
@media (min-width: 640px) {
  .sm\:col-pos-4 {
    grid-column: 4; } }
@media (min-width: 640px) {
  .sm\:col-pos-5 {
    grid-column: 5; } }
@media (min-width: 640px) {
  .sm\:col-pos-6 {
    grid-column: 6; } }
@media (min-width: 640px) {
  .sm\:col-pos-7 {
    grid-column: 7; } }
@media (min-width: 640px) {
  .sm\:col-pos-8 {
    grid-column: 8; } }
@media (min-width: 640px) {
  .sm\:col-pos-9 {
    grid-column: 9; } }
@media (min-width: 640px) {
  .sm\:col-pos-10 {
    grid-column: 10; } }
@media (min-width: 640px) {
  .sm\:col-pos-11 {
    grid-column: 11; } }
@media (min-width: 640px) {
  .sm\:col-pos-12 {
    grid-column: 12; } }
@media (min-width: 768px) {
  .md\:col-pos-1 {
    grid-column: 1; } }
@media (min-width: 768px) {
  .md\:col-pos-2 {
    grid-column: 2; } }
@media (min-width: 768px) {
  .md\:col-pos-3 {
    grid-column: 3; } }
@media (min-width: 768px) {
  .md\:col-pos-4 {
    grid-column: 4; } }
@media (min-width: 768px) {
  .md\:col-pos-5 {
    grid-column: 5; } }
@media (min-width: 768px) {
  .md\:col-pos-6 {
    grid-column: 6; } }
@media (min-width: 768px) {
  .md\:col-pos-7 {
    grid-column: 7; } }
@media (min-width: 768px) {
  .md\:col-pos-8 {
    grid-column: 8; } }
@media (min-width: 768px) {
  .md\:col-pos-9 {
    grid-column: 9; } }
@media (min-width: 768px) {
  .md\:col-pos-10 {
    grid-column: 10; } }
@media (min-width: 768px) {
  .md\:col-pos-11 {
    grid-column: 11; } }
@media (min-width: 768px) {
  .md\:col-pos-12 {
    grid-column: 12; } }
@media (min-width: 992px) {
  .lg\:col-pos-1 {
    grid-column: 1; } }
@media (min-width: 992px) {
  .lg\:col-pos-2 {
    grid-column: 2; } }
@media (min-width: 992px) {
  .lg\:col-pos-3 {
    grid-column: 3; } }
@media (min-width: 992px) {
  .lg\:col-pos-4 {
    grid-column: 4; } }
@media (min-width: 992px) {
  .lg\:col-pos-5 {
    grid-column: 5; } }
@media (min-width: 992px) {
  .lg\:col-pos-6 {
    grid-column: 6; } }
@media (min-width: 992px) {
  .lg\:col-pos-7 {
    grid-column: 7; } }
@media (min-width: 992px) {
  .lg\:col-pos-8 {
    grid-column: 8; } }
@media (min-width: 992px) {
  .lg\:col-pos-9 {
    grid-column: 9; } }
@media (min-width: 992px) {
  .lg\:col-pos-10 {
    grid-column: 10; } }
@media (min-width: 992px) {
  .lg\:col-pos-11 {
    grid-column: 11; } }
@media (min-width: 992px) {
  .lg\:col-pos-12 {
    grid-column: 12; } }
@media (min-width: 1200px) {
  .xl\:col-pos-1 {
    grid-column: 1; } }
@media (min-width: 1200px) {
  .xl\:col-pos-2 {
    grid-column: 2; } }
@media (min-width: 1200px) {
  .xl\:col-pos-3 {
    grid-column: 3; } }
@media (min-width: 1200px) {
  .xl\:col-pos-4 {
    grid-column: 4; } }
@media (min-width: 1200px) {
  .xl\:col-pos-5 {
    grid-column: 5; } }
@media (min-width: 1200px) {
  .xl\:col-pos-6 {
    grid-column: 6; } }
@media (min-width: 1200px) {
  .xl\:col-pos-7 {
    grid-column: 7; } }
@media (min-width: 1200px) {
  .xl\:col-pos-8 {
    grid-column: 8; } }
@media (min-width: 1200px) {
  .xl\:col-pos-9 {
    grid-column: 9; } }
@media (min-width: 1200px) {
  .xl\:col-pos-10 {
    grid-column: 10; } }
@media (min-width: 1200px) {
  .xl\:col-pos-11 {
    grid-column: 11; } }
@media (min-width: 1200px) {
  .xl\:col-pos-12 {
    grid-column: 12; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-1 {
    grid-column: 1; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-2 {
    grid-column: 2; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-3 {
    grid-column: 3; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-4 {
    grid-column: 4; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-5 {
    grid-column: 5; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-6 {
    grid-column: 6; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-7 {
    grid-column: 7; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-8 {
    grid-column: 8; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-9 {
    grid-column: 9; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-10 {
    grid-column: 10; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-11 {
    grid-column: 11; } }
@media (min-width: 1440px) {
  .xxl\:col-pos-12 {
    grid-column: 12; } }
/** Currently not supporting these because of too much bugs with other grid possibilities */
/* Row span */
/*@if $include-grid-row-span {
  @include grid-span($grid-row-number, 'row', 'row', false);
}

!* Row exact positions *!
@if $include-grid-row-exact {
  @include grid-span($grid-row-number, 'row', 'row', true);
}*/
/* Column from - to position */
.col-1\/2 {
  grid-column: 1/3; }
.col-1\/3 {
  grid-column: 1/4; }
.col-2\/3 {
  grid-column: 2/4; }
.col-1\/4 {
  grid-column: 1/5; }
.col-2\/4 {
  grid-column: 2/5; }
.col-3\/4 {
  grid-column: 3/5; }
.col-1\/5 {
  grid-column: 1/6; }
.col-2\/5 {
  grid-column: 2/6; }
.col-3\/5 {
  grid-column: 3/6; }
.col-4\/5 {
  grid-column: 4/6; }
.col-1\/6 {
  grid-column: 1/7; }
.col-2\/6 {
  grid-column: 2/7; }
.col-3\/6 {
  grid-column: 3/7; }
.col-4\/6 {
  grid-column: 4/7; }
.col-5\/6 {
  grid-column: 5/7; }
.col-1\/7 {
  grid-column: 1/8; }
.col-2\/7 {
  grid-column: 2/8; }
.col-3\/7 {
  grid-column: 3/8; }
.col-4\/7 {
  grid-column: 4/8; }
.col-5\/7 {
  grid-column: 5/8; }
.col-6\/7 {
  grid-column: 6/8; }
.col-1\/8 {
  grid-column: 1/9; }
.col-2\/8 {
  grid-column: 2/9; }
.col-3\/8 {
  grid-column: 3/9; }
.col-4\/8 {
  grid-column: 4/9; }
.col-5\/8 {
  grid-column: 5/9; }
.col-6\/8 {
  grid-column: 6/9; }
.col-7\/8 {
  grid-column: 7/9; }
.col-1\/9 {
  grid-column: 1/10; }
.col-2\/9 {
  grid-column: 2/10; }
.col-3\/9 {
  grid-column: 3/10; }
.col-4\/9 {
  grid-column: 4/10; }
.col-5\/9 {
  grid-column: 5/10; }
.col-6\/9 {
  grid-column: 6/10; }
.col-7\/9 {
  grid-column: 7/10; }
.col-8\/9 {
  grid-column: 8/10; }
.col-1\/10 {
  grid-column: 1/11; }
.col-2\/10 {
  grid-column: 2/11; }
.col-3\/10 {
  grid-column: 3/11; }
.col-4\/10 {
  grid-column: 4/11; }
.col-5\/10 {
  grid-column: 5/11; }
.col-6\/10 {
  grid-column: 6/11; }
.col-7\/10 {
  grid-column: 7/11; }
.col-8\/10 {
  grid-column: 8/11; }
.col-9\/10 {
  grid-column: 9/11; }
.col-1\/11 {
  grid-column: 1/12; }
.col-2\/11 {
  grid-column: 2/12; }
.col-3\/11 {
  grid-column: 3/12; }
.col-4\/11 {
  grid-column: 4/12; }
.col-5\/11 {
  grid-column: 5/12; }
.col-6\/11 {
  grid-column: 6/12; }
.col-7\/11 {
  grid-column: 7/12; }
.col-8\/11 {
  grid-column: 8/12; }
.col-9\/11 {
  grid-column: 9/12; }
.col-10\/11 {
  grid-column: 10/12; }
.col-1\/12 {
  grid-column: 1/13; }
.col-2\/12 {
  grid-column: 2/13; }
.col-3\/12 {
  grid-column: 3/13; }
.col-4\/12 {
  grid-column: 4/13; }
.col-5\/12 {
  grid-column: 5/13; }
.col-6\/12 {
  grid-column: 6/13; }
.col-7\/12 {
  grid-column: 7/13; }
.col-8\/12 {
  grid-column: 8/13; }
.col-9\/12 {
  grid-column: 9/13; }
.col-10\/12 {
  grid-column: 10/13; }
.col-11\/12 {
  grid-column: 11/13; }
/** Responsive */
@media (min-width: 320px) {
  .xxs\:col-1\/2 {
    grid-column: 1/3; } }
@media (min-width: 320px) {
  .xxs\:col-1\/3 {
    grid-column: 1/4; } }
@media (min-width: 320px) {
  .xxs\:col-2\/3 {
    grid-column: 2/4; } }
@media (min-width: 320px) {
  .xxs\:col-1\/4 {
    grid-column: 1/5; } }
@media (min-width: 320px) {
  .xxs\:col-2\/4 {
    grid-column: 2/5; } }
@media (min-width: 320px) {
  .xxs\:col-3\/4 {
    grid-column: 3/5; } }
@media (min-width: 320px) {
  .xxs\:col-1\/5 {
    grid-column: 1/6; } }
@media (min-width: 320px) {
  .xxs\:col-2\/5 {
    grid-column: 2/6; } }
@media (min-width: 320px) {
  .xxs\:col-3\/5 {
    grid-column: 3/6; } }
@media (min-width: 320px) {
  .xxs\:col-4\/5 {
    grid-column: 4/6; } }
@media (min-width: 320px) {
  .xxs\:col-1\/6 {
    grid-column: 1/7; } }
@media (min-width: 320px) {
  .xxs\:col-2\/6 {
    grid-column: 2/7; } }
@media (min-width: 320px) {
  .xxs\:col-3\/6 {
    grid-column: 3/7; } }
@media (min-width: 320px) {
  .xxs\:col-4\/6 {
    grid-column: 4/7; } }
@media (min-width: 320px) {
  .xxs\:col-5\/6 {
    grid-column: 5/7; } }
@media (min-width: 320px) {
  .xxs\:col-1\/7 {
    grid-column: 1/8; } }
@media (min-width: 320px) {
  .xxs\:col-2\/7 {
    grid-column: 2/8; } }
@media (min-width: 320px) {
  .xxs\:col-3\/7 {
    grid-column: 3/8; } }
@media (min-width: 320px) {
  .xxs\:col-4\/7 {
    grid-column: 4/8; } }
@media (min-width: 320px) {
  .xxs\:col-5\/7 {
    grid-column: 5/8; } }
@media (min-width: 320px) {
  .xxs\:col-6\/7 {
    grid-column: 6/8; } }
@media (min-width: 320px) {
  .xxs\:col-1\/8 {
    grid-column: 1/9; } }
@media (min-width: 320px) {
  .xxs\:col-2\/8 {
    grid-column: 2/9; } }
@media (min-width: 320px) {
  .xxs\:col-3\/8 {
    grid-column: 3/9; } }
@media (min-width: 320px) {
  .xxs\:col-4\/8 {
    grid-column: 4/9; } }
@media (min-width: 320px) {
  .xxs\:col-5\/8 {
    grid-column: 5/9; } }
@media (min-width: 320px) {
  .xxs\:col-6\/8 {
    grid-column: 6/9; } }
@media (min-width: 320px) {
  .xxs\:col-7\/8 {
    grid-column: 7/9; } }
@media (min-width: 320px) {
  .xxs\:col-1\/9 {
    grid-column: 1/10; } }
@media (min-width: 320px) {
  .xxs\:col-2\/9 {
    grid-column: 2/10; } }
@media (min-width: 320px) {
  .xxs\:col-3\/9 {
    grid-column: 3/10; } }
@media (min-width: 320px) {
  .xxs\:col-4\/9 {
    grid-column: 4/10; } }
@media (min-width: 320px) {
  .xxs\:col-5\/9 {
    grid-column: 5/10; } }
@media (min-width: 320px) {
  .xxs\:col-6\/9 {
    grid-column: 6/10; } }
@media (min-width: 320px) {
  .xxs\:col-7\/9 {
    grid-column: 7/10; } }
@media (min-width: 320px) {
  .xxs\:col-8\/9 {
    grid-column: 8/10; } }
@media (min-width: 320px) {
  .xxs\:col-1\/10 {
    grid-column: 1/11; } }
@media (min-width: 320px) {
  .xxs\:col-2\/10 {
    grid-column: 2/11; } }
@media (min-width: 320px) {
  .xxs\:col-3\/10 {
    grid-column: 3/11; } }
@media (min-width: 320px) {
  .xxs\:col-4\/10 {
    grid-column: 4/11; } }
@media (min-width: 320px) {
  .xxs\:col-5\/10 {
    grid-column: 5/11; } }
@media (min-width: 320px) {
  .xxs\:col-6\/10 {
    grid-column: 6/11; } }
@media (min-width: 320px) {
  .xxs\:col-7\/10 {
    grid-column: 7/11; } }
@media (min-width: 320px) {
  .xxs\:col-8\/10 {
    grid-column: 8/11; } }
@media (min-width: 320px) {
  .xxs\:col-9\/10 {
    grid-column: 9/11; } }
@media (min-width: 320px) {
  .xxs\:col-1\/11 {
    grid-column: 1/12; } }
@media (min-width: 320px) {
  .xxs\:col-2\/11 {
    grid-column: 2/12; } }
@media (min-width: 320px) {
  .xxs\:col-3\/11 {
    grid-column: 3/12; } }
@media (min-width: 320px) {
  .xxs\:col-4\/11 {
    grid-column: 4/12; } }
@media (min-width: 320px) {
  .xxs\:col-5\/11 {
    grid-column: 5/12; } }
@media (min-width: 320px) {
  .xxs\:col-6\/11 {
    grid-column: 6/12; } }
@media (min-width: 320px) {
  .xxs\:col-7\/11 {
    grid-column: 7/12; } }
@media (min-width: 320px) {
  .xxs\:col-8\/11 {
    grid-column: 8/12; } }
@media (min-width: 320px) {
  .xxs\:col-9\/11 {
    grid-column: 9/12; } }
@media (min-width: 320px) {
  .xxs\:col-10\/11 {
    grid-column: 10/12; } }
@media (min-width: 320px) {
  .xxs\:col-1\/12 {
    grid-column: 1/13; } }
@media (min-width: 320px) {
  .xxs\:col-2\/12 {
    grid-column: 2/13; } }
@media (min-width: 320px) {
  .xxs\:col-3\/12 {
    grid-column: 3/13; } }
@media (min-width: 320px) {
  .xxs\:col-4\/12 {
    grid-column: 4/13; } }
@media (min-width: 320px) {
  .xxs\:col-5\/12 {
    grid-column: 5/13; } }
@media (min-width: 320px) {
  .xxs\:col-6\/12 {
    grid-column: 6/13; } }
@media (min-width: 320px) {
  .xxs\:col-7\/12 {
    grid-column: 7/13; } }
@media (min-width: 320px) {
  .xxs\:col-8\/12 {
    grid-column: 8/13; } }
@media (min-width: 320px) {
  .xxs\:col-9\/12 {
    grid-column: 9/13; } }
@media (min-width: 320px) {
  .xxs\:col-10\/12 {
    grid-column: 10/13; } }
@media (min-width: 320px) {
  .xxs\:col-11\/12 {
    grid-column: 11/13; } }
@media (min-width: 480px) {
  .xs\:col-1\/2 {
    grid-column: 1/3; } }
@media (min-width: 480px) {
  .xs\:col-1\/3 {
    grid-column: 1/4; } }
@media (min-width: 480px) {
  .xs\:col-2\/3 {
    grid-column: 2/4; } }
@media (min-width: 480px) {
  .xs\:col-1\/4 {
    grid-column: 1/5; } }
@media (min-width: 480px) {
  .xs\:col-2\/4 {
    grid-column: 2/5; } }
@media (min-width: 480px) {
  .xs\:col-3\/4 {
    grid-column: 3/5; } }
@media (min-width: 480px) {
  .xs\:col-1\/5 {
    grid-column: 1/6; } }
@media (min-width: 480px) {
  .xs\:col-2\/5 {
    grid-column: 2/6; } }
@media (min-width: 480px) {
  .xs\:col-3\/5 {
    grid-column: 3/6; } }
@media (min-width: 480px) {
  .xs\:col-4\/5 {
    grid-column: 4/6; } }
@media (min-width: 480px) {
  .xs\:col-1\/6 {
    grid-column: 1/7; } }
@media (min-width: 480px) {
  .xs\:col-2\/6 {
    grid-column: 2/7; } }
@media (min-width: 480px) {
  .xs\:col-3\/6 {
    grid-column: 3/7; } }
@media (min-width: 480px) {
  .xs\:col-4\/6 {
    grid-column: 4/7; } }
@media (min-width: 480px) {
  .xs\:col-5\/6 {
    grid-column: 5/7; } }
@media (min-width: 480px) {
  .xs\:col-1\/7 {
    grid-column: 1/8; } }
@media (min-width: 480px) {
  .xs\:col-2\/7 {
    grid-column: 2/8; } }
@media (min-width: 480px) {
  .xs\:col-3\/7 {
    grid-column: 3/8; } }
@media (min-width: 480px) {
  .xs\:col-4\/7 {
    grid-column: 4/8; } }
@media (min-width: 480px) {
  .xs\:col-5\/7 {
    grid-column: 5/8; } }
@media (min-width: 480px) {
  .xs\:col-6\/7 {
    grid-column: 6/8; } }
@media (min-width: 480px) {
  .xs\:col-1\/8 {
    grid-column: 1/9; } }
@media (min-width: 480px) {
  .xs\:col-2\/8 {
    grid-column: 2/9; } }
@media (min-width: 480px) {
  .xs\:col-3\/8 {
    grid-column: 3/9; } }
@media (min-width: 480px) {
  .xs\:col-4\/8 {
    grid-column: 4/9; } }
@media (min-width: 480px) {
  .xs\:col-5\/8 {
    grid-column: 5/9; } }
@media (min-width: 480px) {
  .xs\:col-6\/8 {
    grid-column: 6/9; } }
@media (min-width: 480px) {
  .xs\:col-7\/8 {
    grid-column: 7/9; } }
@media (min-width: 480px) {
  .xs\:col-1\/9 {
    grid-column: 1/10; } }
@media (min-width: 480px) {
  .xs\:col-2\/9 {
    grid-column: 2/10; } }
@media (min-width: 480px) {
  .xs\:col-3\/9 {
    grid-column: 3/10; } }
@media (min-width: 480px) {
  .xs\:col-4\/9 {
    grid-column: 4/10; } }
@media (min-width: 480px) {
  .xs\:col-5\/9 {
    grid-column: 5/10; } }
@media (min-width: 480px) {
  .xs\:col-6\/9 {
    grid-column: 6/10; } }
@media (min-width: 480px) {
  .xs\:col-7\/9 {
    grid-column: 7/10; } }
@media (min-width: 480px) {
  .xs\:col-8\/9 {
    grid-column: 8/10; } }
@media (min-width: 480px) {
  .xs\:col-1\/10 {
    grid-column: 1/11; } }
@media (min-width: 480px) {
  .xs\:col-2\/10 {
    grid-column: 2/11; } }
@media (min-width: 480px) {
  .xs\:col-3\/10 {
    grid-column: 3/11; } }
@media (min-width: 480px) {
  .xs\:col-4\/10 {
    grid-column: 4/11; } }
@media (min-width: 480px) {
  .xs\:col-5\/10 {
    grid-column: 5/11; } }
@media (min-width: 480px) {
  .xs\:col-6\/10 {
    grid-column: 6/11; } }
@media (min-width: 480px) {
  .xs\:col-7\/10 {
    grid-column: 7/11; } }
@media (min-width: 480px) {
  .xs\:col-8\/10 {
    grid-column: 8/11; } }
@media (min-width: 480px) {
  .xs\:col-9\/10 {
    grid-column: 9/11; } }
@media (min-width: 480px) {
  .xs\:col-1\/11 {
    grid-column: 1/12; } }
@media (min-width: 480px) {
  .xs\:col-2\/11 {
    grid-column: 2/12; } }
@media (min-width: 480px) {
  .xs\:col-3\/11 {
    grid-column: 3/12; } }
@media (min-width: 480px) {
  .xs\:col-4\/11 {
    grid-column: 4/12; } }
@media (min-width: 480px) {
  .xs\:col-5\/11 {
    grid-column: 5/12; } }
@media (min-width: 480px) {
  .xs\:col-6\/11 {
    grid-column: 6/12; } }
@media (min-width: 480px) {
  .xs\:col-7\/11 {
    grid-column: 7/12; } }
@media (min-width: 480px) {
  .xs\:col-8\/11 {
    grid-column: 8/12; } }
@media (min-width: 480px) {
  .xs\:col-9\/11 {
    grid-column: 9/12; } }
@media (min-width: 480px) {
  .xs\:col-10\/11 {
    grid-column: 10/12; } }
@media (min-width: 480px) {
  .xs\:col-1\/12 {
    grid-column: 1/13; } }
@media (min-width: 480px) {
  .xs\:col-2\/12 {
    grid-column: 2/13; } }
@media (min-width: 480px) {
  .xs\:col-3\/12 {
    grid-column: 3/13; } }
@media (min-width: 480px) {
  .xs\:col-4\/12 {
    grid-column: 4/13; } }
@media (min-width: 480px) {
  .xs\:col-5\/12 {
    grid-column: 5/13; } }
@media (min-width: 480px) {
  .xs\:col-6\/12 {
    grid-column: 6/13; } }
@media (min-width: 480px) {
  .xs\:col-7\/12 {
    grid-column: 7/13; } }
@media (min-width: 480px) {
  .xs\:col-8\/12 {
    grid-column: 8/13; } }
@media (min-width: 480px) {
  .xs\:col-9\/12 {
    grid-column: 9/13; } }
@media (min-width: 480px) {
  .xs\:col-10\/12 {
    grid-column: 10/13; } }
@media (min-width: 480px) {
  .xs\:col-11\/12 {
    grid-column: 11/13; } }
@media (min-width: 640px) {
  .sm\:col-1\/2 {
    grid-column: 1/3; } }
@media (min-width: 640px) {
  .sm\:col-1\/3 {
    grid-column: 1/4; } }
@media (min-width: 640px) {
  .sm\:col-2\/3 {
    grid-column: 2/4; } }
@media (min-width: 640px) {
  .sm\:col-1\/4 {
    grid-column: 1/5; } }
@media (min-width: 640px) {
  .sm\:col-2\/4 {
    grid-column: 2/5; } }
@media (min-width: 640px) {
  .sm\:col-3\/4 {
    grid-column: 3/5; } }
@media (min-width: 640px) {
  .sm\:col-1\/5 {
    grid-column: 1/6; } }
@media (min-width: 640px) {
  .sm\:col-2\/5 {
    grid-column: 2/6; } }
@media (min-width: 640px) {
  .sm\:col-3\/5 {
    grid-column: 3/6; } }
@media (min-width: 640px) {
  .sm\:col-4\/5 {
    grid-column: 4/6; } }
@media (min-width: 640px) {
  .sm\:col-1\/6 {
    grid-column: 1/7; } }
@media (min-width: 640px) {
  .sm\:col-2\/6 {
    grid-column: 2/7; } }
@media (min-width: 640px) {
  .sm\:col-3\/6 {
    grid-column: 3/7; } }
@media (min-width: 640px) {
  .sm\:col-4\/6 {
    grid-column: 4/7; } }
@media (min-width: 640px) {
  .sm\:col-5\/6 {
    grid-column: 5/7; } }
@media (min-width: 640px) {
  .sm\:col-1\/7 {
    grid-column: 1/8; } }
@media (min-width: 640px) {
  .sm\:col-2\/7 {
    grid-column: 2/8; } }
@media (min-width: 640px) {
  .sm\:col-3\/7 {
    grid-column: 3/8; } }
@media (min-width: 640px) {
  .sm\:col-4\/7 {
    grid-column: 4/8; } }
@media (min-width: 640px) {
  .sm\:col-5\/7 {
    grid-column: 5/8; } }
@media (min-width: 640px) {
  .sm\:col-6\/7 {
    grid-column: 6/8; } }
@media (min-width: 640px) {
  .sm\:col-1\/8 {
    grid-column: 1/9; } }
@media (min-width: 640px) {
  .sm\:col-2\/8 {
    grid-column: 2/9; } }
@media (min-width: 640px) {
  .sm\:col-3\/8 {
    grid-column: 3/9; } }
@media (min-width: 640px) {
  .sm\:col-4\/8 {
    grid-column: 4/9; } }
@media (min-width: 640px) {
  .sm\:col-5\/8 {
    grid-column: 5/9; } }
@media (min-width: 640px) {
  .sm\:col-6\/8 {
    grid-column: 6/9; } }
@media (min-width: 640px) {
  .sm\:col-7\/8 {
    grid-column: 7/9; } }
@media (min-width: 640px) {
  .sm\:col-1\/9 {
    grid-column: 1/10; } }
@media (min-width: 640px) {
  .sm\:col-2\/9 {
    grid-column: 2/10; } }
@media (min-width: 640px) {
  .sm\:col-3\/9 {
    grid-column: 3/10; } }
@media (min-width: 640px) {
  .sm\:col-4\/9 {
    grid-column: 4/10; } }
@media (min-width: 640px) {
  .sm\:col-5\/9 {
    grid-column: 5/10; } }
@media (min-width: 640px) {
  .sm\:col-6\/9 {
    grid-column: 6/10; } }
@media (min-width: 640px) {
  .sm\:col-7\/9 {
    grid-column: 7/10; } }
@media (min-width: 640px) {
  .sm\:col-8\/9 {
    grid-column: 8/10; } }
@media (min-width: 640px) {
  .sm\:col-1\/10 {
    grid-column: 1/11; } }
@media (min-width: 640px) {
  .sm\:col-2\/10 {
    grid-column: 2/11; } }
@media (min-width: 640px) {
  .sm\:col-3\/10 {
    grid-column: 3/11; } }
@media (min-width: 640px) {
  .sm\:col-4\/10 {
    grid-column: 4/11; } }
@media (min-width: 640px) {
  .sm\:col-5\/10 {
    grid-column: 5/11; } }
@media (min-width: 640px) {
  .sm\:col-6\/10 {
    grid-column: 6/11; } }
@media (min-width: 640px) {
  .sm\:col-7\/10 {
    grid-column: 7/11; } }
@media (min-width: 640px) {
  .sm\:col-8\/10 {
    grid-column: 8/11; } }
@media (min-width: 640px) {
  .sm\:col-9\/10 {
    grid-column: 9/11; } }
@media (min-width: 640px) {
  .sm\:col-1\/11 {
    grid-column: 1/12; } }
@media (min-width: 640px) {
  .sm\:col-2\/11 {
    grid-column: 2/12; } }
@media (min-width: 640px) {
  .sm\:col-3\/11 {
    grid-column: 3/12; } }
@media (min-width: 640px) {
  .sm\:col-4\/11 {
    grid-column: 4/12; } }
@media (min-width: 640px) {
  .sm\:col-5\/11 {
    grid-column: 5/12; } }
@media (min-width: 640px) {
  .sm\:col-6\/11 {
    grid-column: 6/12; } }
@media (min-width: 640px) {
  .sm\:col-7\/11 {
    grid-column: 7/12; } }
@media (min-width: 640px) {
  .sm\:col-8\/11 {
    grid-column: 8/12; } }
@media (min-width: 640px) {
  .sm\:col-9\/11 {
    grid-column: 9/12; } }
@media (min-width: 640px) {
  .sm\:col-10\/11 {
    grid-column: 10/12; } }
@media (min-width: 640px) {
  .sm\:col-1\/12 {
    grid-column: 1/13; } }
@media (min-width: 640px) {
  .sm\:col-2\/12 {
    grid-column: 2/13; } }
@media (min-width: 640px) {
  .sm\:col-3\/12 {
    grid-column: 3/13; } }
@media (min-width: 640px) {
  .sm\:col-4\/12 {
    grid-column: 4/13; } }
@media (min-width: 640px) {
  .sm\:col-5\/12 {
    grid-column: 5/13; } }
@media (min-width: 640px) {
  .sm\:col-6\/12 {
    grid-column: 6/13; } }
@media (min-width: 640px) {
  .sm\:col-7\/12 {
    grid-column: 7/13; } }
@media (min-width: 640px) {
  .sm\:col-8\/12 {
    grid-column: 8/13; } }
@media (min-width: 640px) {
  .sm\:col-9\/12 {
    grid-column: 9/13; } }
@media (min-width: 640px) {
  .sm\:col-10\/12 {
    grid-column: 10/13; } }
@media (min-width: 640px) {
  .sm\:col-11\/12 {
    grid-column: 11/13; } }
@media (min-width: 768px) {
  .md\:col-1\/2 {
    grid-column: 1/3; } }
@media (min-width: 768px) {
  .md\:col-1\/3 {
    grid-column: 1/4; } }
@media (min-width: 768px) {
  .md\:col-2\/3 {
    grid-column: 2/4; } }
@media (min-width: 768px) {
  .md\:col-1\/4 {
    grid-column: 1/5; } }
@media (min-width: 768px) {
  .md\:col-2\/4 {
    grid-column: 2/5; } }
@media (min-width: 768px) {
  .md\:col-3\/4 {
    grid-column: 3/5; } }
@media (min-width: 768px) {
  .md\:col-1\/5 {
    grid-column: 1/6; } }
@media (min-width: 768px) {
  .md\:col-2\/5 {
    grid-column: 2/6; } }
@media (min-width: 768px) {
  .md\:col-3\/5 {
    grid-column: 3/6; } }
@media (min-width: 768px) {
  .md\:col-4\/5 {
    grid-column: 4/6; } }
@media (min-width: 768px) {
  .md\:col-1\/6 {
    grid-column: 1/7; } }
@media (min-width: 768px) {
  .md\:col-2\/6 {
    grid-column: 2/7; } }
@media (min-width: 768px) {
  .md\:col-3\/6 {
    grid-column: 3/7; } }
@media (min-width: 768px) {
  .md\:col-4\/6 {
    grid-column: 4/7; } }
@media (min-width: 768px) {
  .md\:col-5\/6 {
    grid-column: 5/7; } }
@media (min-width: 768px) {
  .md\:col-1\/7 {
    grid-column: 1/8; } }
@media (min-width: 768px) {
  .md\:col-2\/7 {
    grid-column: 2/8; } }
@media (min-width: 768px) {
  .md\:col-3\/7 {
    grid-column: 3/8; } }
@media (min-width: 768px) {
  .md\:col-4\/7 {
    grid-column: 4/8; } }
@media (min-width: 768px) {
  .md\:col-5\/7 {
    grid-column: 5/8; } }
@media (min-width: 768px) {
  .md\:col-6\/7 {
    grid-column: 6/8; } }
@media (min-width: 768px) {
  .md\:col-1\/8 {
    grid-column: 1/9; } }
@media (min-width: 768px) {
  .md\:col-2\/8 {
    grid-column: 2/9; } }
@media (min-width: 768px) {
  .md\:col-3\/8 {
    grid-column: 3/9; } }
@media (min-width: 768px) {
  .md\:col-4\/8 {
    grid-column: 4/9; } }
@media (min-width: 768px) {
  .md\:col-5\/8 {
    grid-column: 5/9; } }
@media (min-width: 768px) {
  .md\:col-6\/8 {
    grid-column: 6/9; } }
@media (min-width: 768px) {
  .md\:col-7\/8 {
    grid-column: 7/9; } }
@media (min-width: 768px) {
  .md\:col-1\/9 {
    grid-column: 1/10; } }
@media (min-width: 768px) {
  .md\:col-2\/9 {
    grid-column: 2/10; } }
@media (min-width: 768px) {
  .md\:col-3\/9 {
    grid-column: 3/10; } }
@media (min-width: 768px) {
  .md\:col-4\/9 {
    grid-column: 4/10; } }
@media (min-width: 768px) {
  .md\:col-5\/9 {
    grid-column: 5/10; } }
@media (min-width: 768px) {
  .md\:col-6\/9 {
    grid-column: 6/10; } }
@media (min-width: 768px) {
  .md\:col-7\/9 {
    grid-column: 7/10; } }
@media (min-width: 768px) {
  .md\:col-8\/9 {
    grid-column: 8/10; } }
@media (min-width: 768px) {
  .md\:col-1\/10 {
    grid-column: 1/11; } }
@media (min-width: 768px) {
  .md\:col-2\/10 {
    grid-column: 2/11; } }
@media (min-width: 768px) {
  .md\:col-3\/10 {
    grid-column: 3/11; } }
@media (min-width: 768px) {
  .md\:col-4\/10 {
    grid-column: 4/11; } }
@media (min-width: 768px) {
  .md\:col-5\/10 {
    grid-column: 5/11; } }
@media (min-width: 768px) {
  .md\:col-6\/10 {
    grid-column: 6/11; } }
@media (min-width: 768px) {
  .md\:col-7\/10 {
    grid-column: 7/11; } }
@media (min-width: 768px) {
  .md\:col-8\/10 {
    grid-column: 8/11; } }
@media (min-width: 768px) {
  .md\:col-9\/10 {
    grid-column: 9/11; } }
@media (min-width: 768px) {
  .md\:col-1\/11 {
    grid-column: 1/12; } }
@media (min-width: 768px) {
  .md\:col-2\/11 {
    grid-column: 2/12; } }
@media (min-width: 768px) {
  .md\:col-3\/11 {
    grid-column: 3/12; } }
@media (min-width: 768px) {
  .md\:col-4\/11 {
    grid-column: 4/12; } }
@media (min-width: 768px) {
  .md\:col-5\/11 {
    grid-column: 5/12; } }
@media (min-width: 768px) {
  .md\:col-6\/11 {
    grid-column: 6/12; } }
@media (min-width: 768px) {
  .md\:col-7\/11 {
    grid-column: 7/12; } }
@media (min-width: 768px) {
  .md\:col-8\/11 {
    grid-column: 8/12; } }
@media (min-width: 768px) {
  .md\:col-9\/11 {
    grid-column: 9/12; } }
@media (min-width: 768px) {
  .md\:col-10\/11 {
    grid-column: 10/12; } }
@media (min-width: 768px) {
  .md\:col-1\/12 {
    grid-column: 1/13; } }
@media (min-width: 768px) {
  .md\:col-2\/12 {
    grid-column: 2/13; } }
@media (min-width: 768px) {
  .md\:col-3\/12 {
    grid-column: 3/13; } }
@media (min-width: 768px) {
  .md\:col-4\/12 {
    grid-column: 4/13; } }
@media (min-width: 768px) {
  .md\:col-5\/12 {
    grid-column: 5/13; } }
@media (min-width: 768px) {
  .md\:col-6\/12 {
    grid-column: 6/13; } }
@media (min-width: 768px) {
  .md\:col-7\/12 {
    grid-column: 7/13; } }
@media (min-width: 768px) {
  .md\:col-8\/12 {
    grid-column: 8/13; } }
@media (min-width: 768px) {
  .md\:col-9\/12 {
    grid-column: 9/13; } }
@media (min-width: 768px) {
  .md\:col-10\/12 {
    grid-column: 10/13; } }
@media (min-width: 768px) {
  .md\:col-11\/12 {
    grid-column: 11/13; } }
@media (min-width: 992px) {
  .lg\:col-1\/2 {
    grid-column: 1/3; } }
@media (min-width: 992px) {
  .lg\:col-1\/3 {
    grid-column: 1/4; } }
@media (min-width: 992px) {
  .lg\:col-2\/3 {
    grid-column: 2/4; } }
@media (min-width: 992px) {
  .lg\:col-1\/4 {
    grid-column: 1/5; } }
@media (min-width: 992px) {
  .lg\:col-2\/4 {
    grid-column: 2/5; } }
@media (min-width: 992px) {
  .lg\:col-3\/4 {
    grid-column: 3/5; } }
@media (min-width: 992px) {
  .lg\:col-1\/5 {
    grid-column: 1/6; } }
@media (min-width: 992px) {
  .lg\:col-2\/5 {
    grid-column: 2/6; } }
@media (min-width: 992px) {
  .lg\:col-3\/5 {
    grid-column: 3/6; } }
@media (min-width: 992px) {
  .lg\:col-4\/5 {
    grid-column: 4/6; } }
@media (min-width: 992px) {
  .lg\:col-1\/6 {
    grid-column: 1/7; } }
@media (min-width: 992px) {
  .lg\:col-2\/6 {
    grid-column: 2/7; } }
@media (min-width: 992px) {
  .lg\:col-3\/6 {
    grid-column: 3/7; } }
@media (min-width: 992px) {
  .lg\:col-4\/6 {
    grid-column: 4/7; } }
@media (min-width: 992px) {
  .lg\:col-5\/6 {
    grid-column: 5/7; } }
@media (min-width: 992px) {
  .lg\:col-1\/7 {
    grid-column: 1/8; } }
@media (min-width: 992px) {
  .lg\:col-2\/7 {
    grid-column: 2/8; } }
@media (min-width: 992px) {
  .lg\:col-3\/7 {
    grid-column: 3/8; } }
@media (min-width: 992px) {
  .lg\:col-4\/7 {
    grid-column: 4/8; } }
@media (min-width: 992px) {
  .lg\:col-5\/7 {
    grid-column: 5/8; } }
@media (min-width: 992px) {
  .lg\:col-6\/7 {
    grid-column: 6/8; } }
@media (min-width: 992px) {
  .lg\:col-1\/8 {
    grid-column: 1/9; } }
@media (min-width: 992px) {
  .lg\:col-2\/8 {
    grid-column: 2/9; } }
@media (min-width: 992px) {
  .lg\:col-3\/8 {
    grid-column: 3/9; } }
@media (min-width: 992px) {
  .lg\:col-4\/8 {
    grid-column: 4/9; } }
@media (min-width: 992px) {
  .lg\:col-5\/8 {
    grid-column: 5/9; } }
@media (min-width: 992px) {
  .lg\:col-6\/8 {
    grid-column: 6/9; } }
@media (min-width: 992px) {
  .lg\:col-7\/8 {
    grid-column: 7/9; } }
@media (min-width: 992px) {
  .lg\:col-1\/9 {
    grid-column: 1/10; } }
@media (min-width: 992px) {
  .lg\:col-2\/9 {
    grid-column: 2/10; } }
@media (min-width: 992px) {
  .lg\:col-3\/9 {
    grid-column: 3/10; } }
@media (min-width: 992px) {
  .lg\:col-4\/9 {
    grid-column: 4/10; } }
@media (min-width: 992px) {
  .lg\:col-5\/9 {
    grid-column: 5/10; } }
@media (min-width: 992px) {
  .lg\:col-6\/9 {
    grid-column: 6/10; } }
@media (min-width: 992px) {
  .lg\:col-7\/9 {
    grid-column: 7/10; } }
@media (min-width: 992px) {
  .lg\:col-8\/9 {
    grid-column: 8/10; } }
@media (min-width: 992px) {
  .lg\:col-1\/10 {
    grid-column: 1/11; } }
@media (min-width: 992px) {
  .lg\:col-2\/10 {
    grid-column: 2/11; } }
@media (min-width: 992px) {
  .lg\:col-3\/10 {
    grid-column: 3/11; } }
@media (min-width: 992px) {
  .lg\:col-4\/10 {
    grid-column: 4/11; } }
@media (min-width: 992px) {
  .lg\:col-5\/10 {
    grid-column: 5/11; } }
@media (min-width: 992px) {
  .lg\:col-6\/10 {
    grid-column: 6/11; } }
@media (min-width: 992px) {
  .lg\:col-7\/10 {
    grid-column: 7/11; } }
@media (min-width: 992px) {
  .lg\:col-8\/10 {
    grid-column: 8/11; } }
@media (min-width: 992px) {
  .lg\:col-9\/10 {
    grid-column: 9/11; } }
@media (min-width: 992px) {
  .lg\:col-1\/11 {
    grid-column: 1/12; } }
@media (min-width: 992px) {
  .lg\:col-2\/11 {
    grid-column: 2/12; } }
@media (min-width: 992px) {
  .lg\:col-3\/11 {
    grid-column: 3/12; } }
@media (min-width: 992px) {
  .lg\:col-4\/11 {
    grid-column: 4/12; } }
@media (min-width: 992px) {
  .lg\:col-5\/11 {
    grid-column: 5/12; } }
@media (min-width: 992px) {
  .lg\:col-6\/11 {
    grid-column: 6/12; } }
@media (min-width: 992px) {
  .lg\:col-7\/11 {
    grid-column: 7/12; } }
@media (min-width: 992px) {
  .lg\:col-8\/11 {
    grid-column: 8/12; } }
@media (min-width: 992px) {
  .lg\:col-9\/11 {
    grid-column: 9/12; } }
@media (min-width: 992px) {
  .lg\:col-10\/11 {
    grid-column: 10/12; } }
@media (min-width: 992px) {
  .lg\:col-1\/12 {
    grid-column: 1/13; } }
@media (min-width: 992px) {
  .lg\:col-2\/12 {
    grid-column: 2/13; } }
@media (min-width: 992px) {
  .lg\:col-3\/12 {
    grid-column: 3/13; } }
@media (min-width: 992px) {
  .lg\:col-4\/12 {
    grid-column: 4/13; } }
@media (min-width: 992px) {
  .lg\:col-5\/12 {
    grid-column: 5/13; } }
@media (min-width: 992px) {
  .lg\:col-6\/12 {
    grid-column: 6/13; } }
@media (min-width: 992px) {
  .lg\:col-7\/12 {
    grid-column: 7/13; } }
@media (min-width: 992px) {
  .lg\:col-8\/12 {
    grid-column: 8/13; } }
@media (min-width: 992px) {
  .lg\:col-9\/12 {
    grid-column: 9/13; } }
@media (min-width: 992px) {
  .lg\:col-10\/12 {
    grid-column: 10/13; } }
@media (min-width: 992px) {
  .lg\:col-11\/12 {
    grid-column: 11/13; } }
@media (min-width: 1200px) {
  .xl\:col-1\/2 {
    grid-column: 1/3; } }
@media (min-width: 1200px) {
  .xl\:col-1\/3 {
    grid-column: 1/4; } }
@media (min-width: 1200px) {
  .xl\:col-2\/3 {
    grid-column: 2/4; } }
@media (min-width: 1200px) {
  .xl\:col-1\/4 {
    grid-column: 1/5; } }
@media (min-width: 1200px) {
  .xl\:col-2\/4 {
    grid-column: 2/5; } }
@media (min-width: 1200px) {
  .xl\:col-3\/4 {
    grid-column: 3/5; } }
@media (min-width: 1200px) {
  .xl\:col-1\/5 {
    grid-column: 1/6; } }
@media (min-width: 1200px) {
  .xl\:col-2\/5 {
    grid-column: 2/6; } }
@media (min-width: 1200px) {
  .xl\:col-3\/5 {
    grid-column: 3/6; } }
@media (min-width: 1200px) {
  .xl\:col-4\/5 {
    grid-column: 4/6; } }
@media (min-width: 1200px) {
  .xl\:col-1\/6 {
    grid-column: 1/7; } }
@media (min-width: 1200px) {
  .xl\:col-2\/6 {
    grid-column: 2/7; } }
@media (min-width: 1200px) {
  .xl\:col-3\/6 {
    grid-column: 3/7; } }
@media (min-width: 1200px) {
  .xl\:col-4\/6 {
    grid-column: 4/7; } }
@media (min-width: 1200px) {
  .xl\:col-5\/6 {
    grid-column: 5/7; } }
@media (min-width: 1200px) {
  .xl\:col-1\/7 {
    grid-column: 1/8; } }
@media (min-width: 1200px) {
  .xl\:col-2\/7 {
    grid-column: 2/8; } }
@media (min-width: 1200px) {
  .xl\:col-3\/7 {
    grid-column: 3/8; } }
@media (min-width: 1200px) {
  .xl\:col-4\/7 {
    grid-column: 4/8; } }
@media (min-width: 1200px) {
  .xl\:col-5\/7 {
    grid-column: 5/8; } }
@media (min-width: 1200px) {
  .xl\:col-6\/7 {
    grid-column: 6/8; } }
@media (min-width: 1200px) {
  .xl\:col-1\/8 {
    grid-column: 1/9; } }
@media (min-width: 1200px) {
  .xl\:col-2\/8 {
    grid-column: 2/9; } }
@media (min-width: 1200px) {
  .xl\:col-3\/8 {
    grid-column: 3/9; } }
@media (min-width: 1200px) {
  .xl\:col-4\/8 {
    grid-column: 4/9; } }
@media (min-width: 1200px) {
  .xl\:col-5\/8 {
    grid-column: 5/9; } }
@media (min-width: 1200px) {
  .xl\:col-6\/8 {
    grid-column: 6/9; } }
@media (min-width: 1200px) {
  .xl\:col-7\/8 {
    grid-column: 7/9; } }
@media (min-width: 1200px) {
  .xl\:col-1\/9 {
    grid-column: 1/10; } }
@media (min-width: 1200px) {
  .xl\:col-2\/9 {
    grid-column: 2/10; } }
@media (min-width: 1200px) {
  .xl\:col-3\/9 {
    grid-column: 3/10; } }
@media (min-width: 1200px) {
  .xl\:col-4\/9 {
    grid-column: 4/10; } }
@media (min-width: 1200px) {
  .xl\:col-5\/9 {
    grid-column: 5/10; } }
@media (min-width: 1200px) {
  .xl\:col-6\/9 {
    grid-column: 6/10; } }
@media (min-width: 1200px) {
  .xl\:col-7\/9 {
    grid-column: 7/10; } }
@media (min-width: 1200px) {
  .xl\:col-8\/9 {
    grid-column: 8/10; } }
@media (min-width: 1200px) {
  .xl\:col-1\/10 {
    grid-column: 1/11; } }
@media (min-width: 1200px) {
  .xl\:col-2\/10 {
    grid-column: 2/11; } }
@media (min-width: 1200px) {
  .xl\:col-3\/10 {
    grid-column: 3/11; } }
@media (min-width: 1200px) {
  .xl\:col-4\/10 {
    grid-column: 4/11; } }
@media (min-width: 1200px) {
  .xl\:col-5\/10 {
    grid-column: 5/11; } }
@media (min-width: 1200px) {
  .xl\:col-6\/10 {
    grid-column: 6/11; } }
@media (min-width: 1200px) {
  .xl\:col-7\/10 {
    grid-column: 7/11; } }
@media (min-width: 1200px) {
  .xl\:col-8\/10 {
    grid-column: 8/11; } }
@media (min-width: 1200px) {
  .xl\:col-9\/10 {
    grid-column: 9/11; } }
@media (min-width: 1200px) {
  .xl\:col-1\/11 {
    grid-column: 1/12; } }
@media (min-width: 1200px) {
  .xl\:col-2\/11 {
    grid-column: 2/12; } }
@media (min-width: 1200px) {
  .xl\:col-3\/11 {
    grid-column: 3/12; } }
@media (min-width: 1200px) {
  .xl\:col-4\/11 {
    grid-column: 4/12; } }
@media (min-width: 1200px) {
  .xl\:col-5\/11 {
    grid-column: 5/12; } }
@media (min-width: 1200px) {
  .xl\:col-6\/11 {
    grid-column: 6/12; } }
@media (min-width: 1200px) {
  .xl\:col-7\/11 {
    grid-column: 7/12; } }
@media (min-width: 1200px) {
  .xl\:col-8\/11 {
    grid-column: 8/12; } }
@media (min-width: 1200px) {
  .xl\:col-9\/11 {
    grid-column: 9/12; } }
@media (min-width: 1200px) {
  .xl\:col-10\/11 {
    grid-column: 10/12; } }
@media (min-width: 1200px) {
  .xl\:col-1\/12 {
    grid-column: 1/13; } }
@media (min-width: 1200px) {
  .xl\:col-2\/12 {
    grid-column: 2/13; } }
@media (min-width: 1200px) {
  .xl\:col-3\/12 {
    grid-column: 3/13; } }
@media (min-width: 1200px) {
  .xl\:col-4\/12 {
    grid-column: 4/13; } }
@media (min-width: 1200px) {
  .xl\:col-5\/12 {
    grid-column: 5/13; } }
@media (min-width: 1200px) {
  .xl\:col-6\/12 {
    grid-column: 6/13; } }
@media (min-width: 1200px) {
  .xl\:col-7\/12 {
    grid-column: 7/13; } }
@media (min-width: 1200px) {
  .xl\:col-8\/12 {
    grid-column: 8/13; } }
@media (min-width: 1200px) {
  .xl\:col-9\/12 {
    grid-column: 9/13; } }
@media (min-width: 1200px) {
  .xl\:col-10\/12 {
    grid-column: 10/13; } }
@media (min-width: 1200px) {
  .xl\:col-11\/12 {
    grid-column: 11/13; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/2 {
    grid-column: 1/3; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/3 {
    grid-column: 1/4; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/3 {
    grid-column: 2/4; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/4 {
    grid-column: 1/5; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/4 {
    grid-column: 2/5; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/4 {
    grid-column: 3/5; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/5 {
    grid-column: 1/6; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/5 {
    grid-column: 2/6; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/5 {
    grid-column: 3/6; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/5 {
    grid-column: 4/6; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/6 {
    grid-column: 1/7; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/6 {
    grid-column: 2/7; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/6 {
    grid-column: 3/7; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/6 {
    grid-column: 4/7; } }
@media (min-width: 1440px) {
  .xxl\:col-5\/6 {
    grid-column: 5/7; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/7 {
    grid-column: 1/8; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/7 {
    grid-column: 2/8; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/7 {
    grid-column: 3/8; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/7 {
    grid-column: 4/8; } }
@media (min-width: 1440px) {
  .xxl\:col-5\/7 {
    grid-column: 5/8; } }
@media (min-width: 1440px) {
  .xxl\:col-6\/7 {
    grid-column: 6/8; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/8 {
    grid-column: 1/9; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/8 {
    grid-column: 2/9; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/8 {
    grid-column: 3/9; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/8 {
    grid-column: 4/9; } }
@media (min-width: 1440px) {
  .xxl\:col-5\/8 {
    grid-column: 5/9; } }
@media (min-width: 1440px) {
  .xxl\:col-6\/8 {
    grid-column: 6/9; } }
@media (min-width: 1440px) {
  .xxl\:col-7\/8 {
    grid-column: 7/9; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/9 {
    grid-column: 1/10; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/9 {
    grid-column: 2/10; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/9 {
    grid-column: 3/10; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/9 {
    grid-column: 4/10; } }
@media (min-width: 1440px) {
  .xxl\:col-5\/9 {
    grid-column: 5/10; } }
@media (min-width: 1440px) {
  .xxl\:col-6\/9 {
    grid-column: 6/10; } }
@media (min-width: 1440px) {
  .xxl\:col-7\/9 {
    grid-column: 7/10; } }
@media (min-width: 1440px) {
  .xxl\:col-8\/9 {
    grid-column: 8/10; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/10 {
    grid-column: 1/11; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/10 {
    grid-column: 2/11; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/10 {
    grid-column: 3/11; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/10 {
    grid-column: 4/11; } }
@media (min-width: 1440px) {
  .xxl\:col-5\/10 {
    grid-column: 5/11; } }
@media (min-width: 1440px) {
  .xxl\:col-6\/10 {
    grid-column: 6/11; } }
@media (min-width: 1440px) {
  .xxl\:col-7\/10 {
    grid-column: 7/11; } }
@media (min-width: 1440px) {
  .xxl\:col-8\/10 {
    grid-column: 8/11; } }
@media (min-width: 1440px) {
  .xxl\:col-9\/10 {
    grid-column: 9/11; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/11 {
    grid-column: 1/12; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/11 {
    grid-column: 2/12; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/11 {
    grid-column: 3/12; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/11 {
    grid-column: 4/12; } }
@media (min-width: 1440px) {
  .xxl\:col-5\/11 {
    grid-column: 5/12; } }
@media (min-width: 1440px) {
  .xxl\:col-6\/11 {
    grid-column: 6/12; } }
@media (min-width: 1440px) {
  .xxl\:col-7\/11 {
    grid-column: 7/12; } }
@media (min-width: 1440px) {
  .xxl\:col-8\/11 {
    grid-column: 8/12; } }
@media (min-width: 1440px) {
  .xxl\:col-9\/11 {
    grid-column: 9/12; } }
@media (min-width: 1440px) {
  .xxl\:col-10\/11 {
    grid-column: 10/12; } }
@media (min-width: 1440px) {
  .xxl\:col-1\/12 {
    grid-column: 1/13; } }
@media (min-width: 1440px) {
  .xxl\:col-2\/12 {
    grid-column: 2/13; } }
@media (min-width: 1440px) {
  .xxl\:col-3\/12 {
    grid-column: 3/13; } }
@media (min-width: 1440px) {
  .xxl\:col-4\/12 {
    grid-column: 4/13; } }
@media (min-width: 1440px) {
  .xxl\:col-5\/12 {
    grid-column: 5/13; } }
@media (min-width: 1440px) {
  .xxl\:col-6\/12 {
    grid-column: 6/13; } }
@media (min-width: 1440px) {
  .xxl\:col-7\/12 {
    grid-column: 7/13; } }
@media (min-width: 1440px) {
  .xxl\:col-8\/12 {
    grid-column: 8/13; } }
@media (min-width: 1440px) {
  .xxl\:col-9\/12 {
    grid-column: 9/13; } }
@media (min-width: 1440px) {
  .xxl\:col-10\/12 {
    grid-column: 10/13; } }
@media (min-width: 1440px) {
  .xxl\:col-11\/12 {
    grid-column: 11/13; } }
/** Currently not supporting these because of too much bugs with other grid possibilities */
/* Row from - to position */
/*@if $i < $row {
        .row-1\/1 {
          grid-row: 1/2; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/2 {
          grid-row: 1/3; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/2 {
          grid-row: 2/3; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/3 {
          grid-row: 1/4; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/3 {
          grid-row: 2/4; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/3 {
          grid-row: 3/4; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/4 {
          grid-row: 1/5; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/4 {
          grid-row: 2/5; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/4 {
          grid-row: 3/5; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/4 {
          grid-row: 4/5; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/5 {
          grid-row: 1/6; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/5 {
          grid-row: 2/6; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/5 {
          grid-row: 3/6; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/5 {
          grid-row: 4/6; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/5 {
          grid-row: 5/6; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/6 {
          grid-row: 1/7; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/6 {
          grid-row: 2/7; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/6 {
          grid-row: 3/7; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/6 {
          grid-row: 4/7; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/6 {
          grid-row: 5/7; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-6\/6 {
          grid-row: 6/7; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/7 {
          grid-row: 1/8; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/7 {
          grid-row: 2/8; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/7 {
          grid-row: 3/8; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/7 {
          grid-row: 4/8; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/7 {
          grid-row: 5/8; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-6\/7 {
          grid-row: 6/8; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-7\/7 {
          grid-row: 7/8; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/8 {
          grid-row: 1/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/8 {
          grid-row: 2/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/8 {
          grid-row: 3/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/8 {
          grid-row: 4/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/8 {
          grid-row: 5/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-6\/8 {
          grid-row: 6/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-7\/8 {
          grid-row: 7/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-8\/8 {
          grid-row: 8/9; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/9 {
          grid-row: 1/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/9 {
          grid-row: 2/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/9 {
          grid-row: 3/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/9 {
          grid-row: 4/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/9 {
          grid-row: 5/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-6\/9 {
          grid-row: 6/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-7\/9 {
          grid-row: 7/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-8\/9 {
          grid-row: 8/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-9\/9 {
          grid-row: 9/10; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/10 {
          grid-row: 1/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/10 {
          grid-row: 2/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/10 {
          grid-row: 3/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/10 {
          grid-row: 4/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/10 {
          grid-row: 5/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-6\/10 {
          grid-row: 6/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-7\/10 {
          grid-row: 7/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-8\/10 {
          grid-row: 8/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-9\/10 {
          grid-row: 9/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-10\/10 {
          grid-row: 10/11; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/11 {
          grid-row: 1/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/11 {
          grid-row: 2/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/11 {
          grid-row: 3/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/11 {
          grid-row: 4/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/11 {
          grid-row: 5/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-6\/11 {
          grid-row: 6/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-7\/11 {
          grid-row: 7/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-8\/11 {
          grid-row: 8/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-9\/11 {
          grid-row: 9/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-10\/11 {
          grid-row: 10/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-11\/11 {
          grid-row: 11/12; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-1\/12 {
          grid-row: 1/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-2\/12 {
          grid-row: 2/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-3\/12 {
          grid-row: 3/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-4\/12 {
          grid-row: 4/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-5\/12 {
          grid-row: 5/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-6\/12 {
          grid-row: 6/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-7\/12 {
          grid-row: 7/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-8\/12 {
          grid-row: 8/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-9\/12 {
          grid-row: 9/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-10\/12 {
          grid-row: 10/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-11\/12 {
          grid-row: 11/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/*@if $i < $row {
        .row-12\/12 {
          grid-row: 12/13; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }*/
/** Responsive */
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/1 {
              grid-row: 1/2; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/2 {
              grid-row: 1/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/2 {
              grid-row: 2/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/3 {
              grid-row: 1/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/3 {
              grid-row: 2/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/3 {
              grid-row: 3/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/4 {
              grid-row: 1/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/4 {
              grid-row: 2/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/4 {
              grid-row: 3/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/4 {
              grid-row: 4/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/5 {
              grid-row: 1/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/5 {
              grid-row: 2/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/5 {
              grid-row: 3/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/5 {
              grid-row: 4/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/5 {
              grid-row: 5/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/6 {
              grid-row: 1/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/6 {
              grid-row: 2/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/6 {
              grid-row: 3/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/6 {
              grid-row: 4/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/6 {
              grid-row: 5/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-6\/6 {
              grid-row: 6/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/7 {
              grid-row: 1/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/7 {
              grid-row: 2/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/7 {
              grid-row: 3/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/7 {
              grid-row: 4/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/7 {
              grid-row: 5/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-6\/7 {
              grid-row: 6/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-7\/7 {
              grid-row: 7/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/8 {
              grid-row: 1/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/8 {
              grid-row: 2/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/8 {
              grid-row: 3/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/8 {
              grid-row: 4/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/8 {
              grid-row: 5/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-6\/8 {
              grid-row: 6/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-7\/8 {
              grid-row: 7/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-8\/8 {
              grid-row: 8/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/9 {
              grid-row: 1/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/9 {
              grid-row: 2/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/9 {
              grid-row: 3/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/9 {
              grid-row: 4/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/9 {
              grid-row: 5/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-6\/9 {
              grid-row: 6/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-7\/9 {
              grid-row: 7/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-8\/9 {
              grid-row: 8/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-9\/9 {
              grid-row: 9/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/10 {
              grid-row: 1/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/10 {
              grid-row: 2/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/10 {
              grid-row: 3/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/10 {
              grid-row: 4/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/10 {
              grid-row: 5/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-6\/10 {
              grid-row: 6/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-7\/10 {
              grid-row: 7/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-8\/10 {
              grid-row: 8/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-9\/10 {
              grid-row: 9/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-10\/10 {
              grid-row: 10/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/11 {
              grid-row: 1/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/11 {
              grid-row: 2/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/11 {
              grid-row: 3/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/11 {
              grid-row: 4/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/11 {
              grid-row: 5/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-6\/11 {
              grid-row: 6/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-7\/11 {
              grid-row: 7/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-8\/11 {
              grid-row: 8/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-9\/11 {
              grid-row: 9/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-10\/11 {
              grid-row: 10/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-11\/11 {
              grid-row: 11/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-1\/12 {
              grid-row: 1/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-2\/12 {
              grid-row: 2/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-3\/12 {
              grid-row: 3/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-4\/12 {
              grid-row: 4/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-5\/12 {
              grid-row: 5/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-6\/12 {
              grid-row: 6/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-7\/12 {
              grid-row: 7/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-8\/12 {
              grid-row: 8/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-9\/12 {
              grid-row: 9/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-10\/12 {
              grid-row: 10/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-11\/12 {
              grid-row: 11/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxs\:row-12\/12 {
              grid-row: 12/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/1 {
              grid-row: 1/2; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/2 {
              grid-row: 1/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/2 {
              grid-row: 2/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/3 {
              grid-row: 1/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/3 {
              grid-row: 2/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/3 {
              grid-row: 3/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/4 {
              grid-row: 1/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/4 {
              grid-row: 2/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/4 {
              grid-row: 3/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/4 {
              grid-row: 4/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/5 {
              grid-row: 1/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/5 {
              grid-row: 2/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/5 {
              grid-row: 3/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/5 {
              grid-row: 4/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/5 {
              grid-row: 5/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/6 {
              grid-row: 1/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/6 {
              grid-row: 2/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/6 {
              grid-row: 3/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/6 {
              grid-row: 4/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/6 {
              grid-row: 5/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-6\/6 {
              grid-row: 6/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/7 {
              grid-row: 1/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/7 {
              grid-row: 2/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/7 {
              grid-row: 3/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/7 {
              grid-row: 4/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/7 {
              grid-row: 5/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-6\/7 {
              grid-row: 6/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-7\/7 {
              grid-row: 7/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/8 {
              grid-row: 1/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/8 {
              grid-row: 2/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/8 {
              grid-row: 3/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/8 {
              grid-row: 4/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/8 {
              grid-row: 5/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-6\/8 {
              grid-row: 6/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-7\/8 {
              grid-row: 7/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-8\/8 {
              grid-row: 8/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/9 {
              grid-row: 1/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/9 {
              grid-row: 2/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/9 {
              grid-row: 3/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/9 {
              grid-row: 4/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/9 {
              grid-row: 5/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-6\/9 {
              grid-row: 6/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-7\/9 {
              grid-row: 7/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-8\/9 {
              grid-row: 8/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-9\/9 {
              grid-row: 9/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/10 {
              grid-row: 1/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/10 {
              grid-row: 2/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/10 {
              grid-row: 3/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/10 {
              grid-row: 4/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/10 {
              grid-row: 5/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-6\/10 {
              grid-row: 6/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-7\/10 {
              grid-row: 7/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-8\/10 {
              grid-row: 8/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-9\/10 {
              grid-row: 9/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-10\/10 {
              grid-row: 10/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/11 {
              grid-row: 1/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/11 {
              grid-row: 2/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/11 {
              grid-row: 3/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/11 {
              grid-row: 4/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/11 {
              grid-row: 5/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-6\/11 {
              grid-row: 6/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-7\/11 {
              grid-row: 7/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-8\/11 {
              grid-row: 8/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-9\/11 {
              grid-row: 9/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-10\/11 {
              grid-row: 10/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-11\/11 {
              grid-row: 11/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-1\/12 {
              grid-row: 1/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-2\/12 {
              grid-row: 2/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-3\/12 {
              grid-row: 3/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-4\/12 {
              grid-row: 4/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-5\/12 {
              grid-row: 5/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-6\/12 {
              grid-row: 6/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-7\/12 {
              grid-row: 7/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-8\/12 {
              grid-row: 8/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-9\/12 {
              grid-row: 9/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-10\/12 {
              grid-row: 10/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-11\/12 {
              grid-row: 11/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xs\:row-12\/12 {
              grid-row: 12/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/1 {
              grid-row: 1/2; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/2 {
              grid-row: 1/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/2 {
              grid-row: 2/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/3 {
              grid-row: 1/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/3 {
              grid-row: 2/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/3 {
              grid-row: 3/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/4 {
              grid-row: 1/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/4 {
              grid-row: 2/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/4 {
              grid-row: 3/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/4 {
              grid-row: 4/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/5 {
              grid-row: 1/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/5 {
              grid-row: 2/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/5 {
              grid-row: 3/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/5 {
              grid-row: 4/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/5 {
              grid-row: 5/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/6 {
              grid-row: 1/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/6 {
              grid-row: 2/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/6 {
              grid-row: 3/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/6 {
              grid-row: 4/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/6 {
              grid-row: 5/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-6\/6 {
              grid-row: 6/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/7 {
              grid-row: 1/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/7 {
              grid-row: 2/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/7 {
              grid-row: 3/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/7 {
              grid-row: 4/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/7 {
              grid-row: 5/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-6\/7 {
              grid-row: 6/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-7\/7 {
              grid-row: 7/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/8 {
              grid-row: 1/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/8 {
              grid-row: 2/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/8 {
              grid-row: 3/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/8 {
              grid-row: 4/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/8 {
              grid-row: 5/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-6\/8 {
              grid-row: 6/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-7\/8 {
              grid-row: 7/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-8\/8 {
              grid-row: 8/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/9 {
              grid-row: 1/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/9 {
              grid-row: 2/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/9 {
              grid-row: 3/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/9 {
              grid-row: 4/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/9 {
              grid-row: 5/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-6\/9 {
              grid-row: 6/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-7\/9 {
              grid-row: 7/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-8\/9 {
              grid-row: 8/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-9\/9 {
              grid-row: 9/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/10 {
              grid-row: 1/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/10 {
              grid-row: 2/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/10 {
              grid-row: 3/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/10 {
              grid-row: 4/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/10 {
              grid-row: 5/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-6\/10 {
              grid-row: 6/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-7\/10 {
              grid-row: 7/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-8\/10 {
              grid-row: 8/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-9\/10 {
              grid-row: 9/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-10\/10 {
              grid-row: 10/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/11 {
              grid-row: 1/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/11 {
              grid-row: 2/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/11 {
              grid-row: 3/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/11 {
              grid-row: 4/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/11 {
              grid-row: 5/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-6\/11 {
              grid-row: 6/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-7\/11 {
              grid-row: 7/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-8\/11 {
              grid-row: 8/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-9\/11 {
              grid-row: 9/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-10\/11 {
              grid-row: 10/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-11\/11 {
              grid-row: 11/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-1\/12 {
              grid-row: 1/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-2\/12 {
              grid-row: 2/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-3\/12 {
              grid-row: 3/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-4\/12 {
              grid-row: 4/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-5\/12 {
              grid-row: 5/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-6\/12 {
              grid-row: 6/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-7\/12 {
              grid-row: 7/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-8\/12 {
              grid-row: 8/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-9\/12 {
              grid-row: 9/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-10\/12 {
              grid-row: 10/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-11\/12 {
              grid-row: 11/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .sm\:row-12\/12 {
              grid-row: 12/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/1 {
              grid-row: 1/2; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/2 {
              grid-row: 1/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/2 {
              grid-row: 2/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/3 {
              grid-row: 1/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/3 {
              grid-row: 2/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/3 {
              grid-row: 3/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/4 {
              grid-row: 1/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/4 {
              grid-row: 2/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/4 {
              grid-row: 3/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/4 {
              grid-row: 4/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/5 {
              grid-row: 1/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/5 {
              grid-row: 2/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/5 {
              grid-row: 3/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/5 {
              grid-row: 4/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/5 {
              grid-row: 5/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/6 {
              grid-row: 1/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/6 {
              grid-row: 2/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/6 {
              grid-row: 3/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/6 {
              grid-row: 4/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/6 {
              grid-row: 5/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-6\/6 {
              grid-row: 6/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/7 {
              grid-row: 1/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/7 {
              grid-row: 2/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/7 {
              grid-row: 3/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/7 {
              grid-row: 4/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/7 {
              grid-row: 5/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-6\/7 {
              grid-row: 6/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-7\/7 {
              grid-row: 7/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/8 {
              grid-row: 1/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/8 {
              grid-row: 2/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/8 {
              grid-row: 3/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/8 {
              grid-row: 4/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/8 {
              grid-row: 5/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-6\/8 {
              grid-row: 6/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-7\/8 {
              grid-row: 7/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-8\/8 {
              grid-row: 8/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/9 {
              grid-row: 1/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/9 {
              grid-row: 2/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/9 {
              grid-row: 3/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/9 {
              grid-row: 4/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/9 {
              grid-row: 5/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-6\/9 {
              grid-row: 6/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-7\/9 {
              grid-row: 7/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-8\/9 {
              grid-row: 8/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-9\/9 {
              grid-row: 9/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/10 {
              grid-row: 1/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/10 {
              grid-row: 2/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/10 {
              grid-row: 3/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/10 {
              grid-row: 4/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/10 {
              grid-row: 5/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-6\/10 {
              grid-row: 6/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-7\/10 {
              grid-row: 7/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-8\/10 {
              grid-row: 8/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-9\/10 {
              grid-row: 9/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-10\/10 {
              grid-row: 10/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/11 {
              grid-row: 1/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/11 {
              grid-row: 2/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/11 {
              grid-row: 3/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/11 {
              grid-row: 4/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/11 {
              grid-row: 5/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-6\/11 {
              grid-row: 6/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-7\/11 {
              grid-row: 7/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-8\/11 {
              grid-row: 8/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-9\/11 {
              grid-row: 9/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-10\/11 {
              grid-row: 10/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-11\/11 {
              grid-row: 11/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-1\/12 {
              grid-row: 1/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-2\/12 {
              grid-row: 2/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-3\/12 {
              grid-row: 3/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-4\/12 {
              grid-row: 4/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-5\/12 {
              grid-row: 5/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-6\/12 {
              grid-row: 6/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-7\/12 {
              grid-row: 7/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-8\/12 {
              grid-row: 8/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-9\/12 {
              grid-row: 9/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-10\/12 {
              grid-row: 10/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-11\/12 {
              grid-row: 11/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .md\:row-12\/12 {
              grid-row: 12/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/1 {
              grid-row: 1/2; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/2 {
              grid-row: 1/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/2 {
              grid-row: 2/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/3 {
              grid-row: 1/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/3 {
              grid-row: 2/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/3 {
              grid-row: 3/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/4 {
              grid-row: 1/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/4 {
              grid-row: 2/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/4 {
              grid-row: 3/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/4 {
              grid-row: 4/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/5 {
              grid-row: 1/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/5 {
              grid-row: 2/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/5 {
              grid-row: 3/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/5 {
              grid-row: 4/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/5 {
              grid-row: 5/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/6 {
              grid-row: 1/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/6 {
              grid-row: 2/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/6 {
              grid-row: 3/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/6 {
              grid-row: 4/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/6 {
              grid-row: 5/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-6\/6 {
              grid-row: 6/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/7 {
              grid-row: 1/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/7 {
              grid-row: 2/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/7 {
              grid-row: 3/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/7 {
              grid-row: 4/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/7 {
              grid-row: 5/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-6\/7 {
              grid-row: 6/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-7\/7 {
              grid-row: 7/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/8 {
              grid-row: 1/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/8 {
              grid-row: 2/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/8 {
              grid-row: 3/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/8 {
              grid-row: 4/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/8 {
              grid-row: 5/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-6\/8 {
              grid-row: 6/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-7\/8 {
              grid-row: 7/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-8\/8 {
              grid-row: 8/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/9 {
              grid-row: 1/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/9 {
              grid-row: 2/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/9 {
              grid-row: 3/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/9 {
              grid-row: 4/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/9 {
              grid-row: 5/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-6\/9 {
              grid-row: 6/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-7\/9 {
              grid-row: 7/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-8\/9 {
              grid-row: 8/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-9\/9 {
              grid-row: 9/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/10 {
              grid-row: 1/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/10 {
              grid-row: 2/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/10 {
              grid-row: 3/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/10 {
              grid-row: 4/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/10 {
              grid-row: 5/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-6\/10 {
              grid-row: 6/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-7\/10 {
              grid-row: 7/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-8\/10 {
              grid-row: 8/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-9\/10 {
              grid-row: 9/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-10\/10 {
              grid-row: 10/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/11 {
              grid-row: 1/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/11 {
              grid-row: 2/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/11 {
              grid-row: 3/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/11 {
              grid-row: 4/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/11 {
              grid-row: 5/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-6\/11 {
              grid-row: 6/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-7\/11 {
              grid-row: 7/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-8\/11 {
              grid-row: 8/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-9\/11 {
              grid-row: 9/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-10\/11 {
              grid-row: 10/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-11\/11 {
              grid-row: 11/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-1\/12 {
              grid-row: 1/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-2\/12 {
              grid-row: 2/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-3\/12 {
              grid-row: 3/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-4\/12 {
              grid-row: 4/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-5\/12 {
              grid-row: 5/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-6\/12 {
              grid-row: 6/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-7\/12 {
              grid-row: 7/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-8\/12 {
              grid-row: 8/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-9\/12 {
              grid-row: 9/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-10\/12 {
              grid-row: 10/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-11\/12 {
              grid-row: 11/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .lg\:row-12\/12 {
              grid-row: 12/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/1 {
              grid-row: 1/2; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/2 {
              grid-row: 1/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/2 {
              grid-row: 2/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/3 {
              grid-row: 1/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/3 {
              grid-row: 2/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/3 {
              grid-row: 3/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/4 {
              grid-row: 1/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/4 {
              grid-row: 2/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/4 {
              grid-row: 3/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/4 {
              grid-row: 4/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/5 {
              grid-row: 1/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/5 {
              grid-row: 2/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/5 {
              grid-row: 3/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/5 {
              grid-row: 4/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/5 {
              grid-row: 5/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/6 {
              grid-row: 1/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/6 {
              grid-row: 2/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/6 {
              grid-row: 3/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/6 {
              grid-row: 4/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/6 {
              grid-row: 5/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-6\/6 {
              grid-row: 6/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/7 {
              grid-row: 1/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/7 {
              grid-row: 2/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/7 {
              grid-row: 3/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/7 {
              grid-row: 4/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/7 {
              grid-row: 5/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-6\/7 {
              grid-row: 6/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-7\/7 {
              grid-row: 7/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/8 {
              grid-row: 1/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/8 {
              grid-row: 2/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/8 {
              grid-row: 3/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/8 {
              grid-row: 4/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/8 {
              grid-row: 5/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-6\/8 {
              grid-row: 6/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-7\/8 {
              grid-row: 7/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-8\/8 {
              grid-row: 8/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/9 {
              grid-row: 1/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/9 {
              grid-row: 2/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/9 {
              grid-row: 3/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/9 {
              grid-row: 4/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/9 {
              grid-row: 5/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-6\/9 {
              grid-row: 6/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-7\/9 {
              grid-row: 7/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-8\/9 {
              grid-row: 8/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-9\/9 {
              grid-row: 9/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/10 {
              grid-row: 1/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/10 {
              grid-row: 2/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/10 {
              grid-row: 3/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/10 {
              grid-row: 4/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/10 {
              grid-row: 5/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-6\/10 {
              grid-row: 6/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-7\/10 {
              grid-row: 7/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-8\/10 {
              grid-row: 8/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-9\/10 {
              grid-row: 9/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-10\/10 {
              grid-row: 10/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/11 {
              grid-row: 1/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/11 {
              grid-row: 2/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/11 {
              grid-row: 3/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/11 {
              grid-row: 4/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/11 {
              grid-row: 5/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-6\/11 {
              grid-row: 6/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-7\/11 {
              grid-row: 7/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-8\/11 {
              grid-row: 8/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-9\/11 {
              grid-row: 9/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-10\/11 {
              grid-row: 10/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-11\/11 {
              grid-row: 11/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-1\/12 {
              grid-row: 1/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-2\/12 {
              grid-row: 2/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-3\/12 {
              grid-row: 3/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-4\/12 {
              grid-row: 4/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-5\/12 {
              grid-row: 5/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-6\/12 {
              grid-row: 6/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-7\/12 {
              grid-row: 7/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-8\/12 {
              grid-row: 8/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-9\/12 {
              grid-row: 9/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-10\/12 {
              grid-row: 10/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-11\/12 {
              grid-row: 11/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xl\:row-12\/12 {
              grid-row: 12/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/1 {
              grid-row: 1/2; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/2 {
              grid-row: 1/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/2 {
              grid-row: 2/3; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/3 {
              grid-row: 1/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/3 {
              grid-row: 2/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/3 {
              grid-row: 3/4; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/4 {
              grid-row: 1/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/4 {
              grid-row: 2/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/4 {
              grid-row: 3/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/4 {
              grid-row: 4/5; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/5 {
              grid-row: 1/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/5 {
              grid-row: 2/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/5 {
              grid-row: 3/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/5 {
              grid-row: 4/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/5 {
              grid-row: 5/6; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/6 {
              grid-row: 1/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/6 {
              grid-row: 2/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/6 {
              grid-row: 3/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/6 {
              grid-row: 4/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/6 {
              grid-row: 5/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-6\/6 {
              grid-row: 6/7; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/7 {
              grid-row: 1/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/7 {
              grid-row: 2/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/7 {
              grid-row: 3/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/7 {
              grid-row: 4/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/7 {
              grid-row: 5/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-6\/7 {
              grid-row: 6/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-7\/7 {
              grid-row: 7/8; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/8 {
              grid-row: 1/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/8 {
              grid-row: 2/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/8 {
              grid-row: 3/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/8 {
              grid-row: 4/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/8 {
              grid-row: 5/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-6\/8 {
              grid-row: 6/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-7\/8 {
              grid-row: 7/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-8\/8 {
              grid-row: 8/9; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/9 {
              grid-row: 1/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/9 {
              grid-row: 2/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/9 {
              grid-row: 3/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/9 {
              grid-row: 4/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/9 {
              grid-row: 5/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-6\/9 {
              grid-row: 6/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-7\/9 {
              grid-row: 7/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-8\/9 {
              grid-row: 8/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-9\/9 {
              grid-row: 9/10; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/10 {
              grid-row: 1/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/10 {
              grid-row: 2/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/10 {
              grid-row: 3/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/10 {
              grid-row: 4/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/10 {
              grid-row: 5/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-6\/10 {
              grid-row: 6/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-7\/10 {
              grid-row: 7/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-8\/10 {
              grid-row: 8/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-9\/10 {
              grid-row: 9/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-10\/10 {
              grid-row: 10/11; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/11 {
              grid-row: 1/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/11 {
              grid-row: 2/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/11 {
              grid-row: 3/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/11 {
              grid-row: 4/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/11 {
              grid-row: 5/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-6\/11 {
              grid-row: 6/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-7\/11 {
              grid-row: 7/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-8\/11 {
              grid-row: 8/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-9\/11 {
              grid-row: 9/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-10\/11 {
              grid-row: 10/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-11\/11 {
              grid-row: 11/12; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-1\/12 {
              grid-row: 1/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-2\/12 {
              grid-row: 2/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-3\/12 {
              grid-row: 3/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-4\/12 {
              grid-row: 4/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-5\/12 {
              grid-row: 5/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-6\/12 {
              grid-row: 6/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-7\/12 {
              grid-row: 7/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-8\/12 {
              grid-row: 8/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-9\/12 {
              grid-row: 9/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-10\/12 {
              grid-row: 10/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-11\/12 {
              grid-row: 11/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/*@if $i < $row {
          @include breakpoint-and-up($breakpoint-key) {
            .xxl\:row-12\/12 {
              grid-row: 12/13; // Add +1 because the "grid-row-end" ends before the actual number of column and not with it
            }
          }
        }*/
/** Components
--------------------------------------------------*/
/**
 * Avatar
 */
.avatar {
  width: 96px;
  height: 96px;
  color: #ffa941;
  overflow: hidden; }
.avatar svg {
    width: 100%;
    fill: currentColor; }
/** Sizes
--------------------------------------------------*/
.avatar--size-auto {
  width: 100%;
  height: 100%; }
.avatar--size-small {
  width: 48px;
  height: 48px; }
.avatar--size-large {
  width: 192px;
  height: 192px; }
/** Looks
--------------------------------------------------*/
.avatar--circle {
  border-radius: 100%;
  border: 1px solid #ffa941; }
/** Colors
--------------------------------------------------*/
.avatar--color-primary {
  color: #ffa941;
  border-color: #ffa941; }
.avatar--color-secondary {
  color: #4648d2;
  border-color: #4648d2; }
.avatar--color-red {
  color: #FA3D49;
  border-color: #FA3D49; }
.avatar--color-orange {
  color: #ffa941;
  border-color: #ffa941; }
.avatar--color-yellow {
  color: #ffe433;
  border-color: #ffe433; }
.avatar--color-green {
  color: #4BC45F;
  border-color: #4BC45F; }
.avatar--color-blue {
  color: #3333f3;
  border-color: #3333f3; }
.avatar--color-indigo {
  color: #178cd6;
  border-color: #178cd6; }
.avatar--color-violet {
  color: #8b26f1;
  border-color: #8b26f1; }
.avatar--color-black {
  color: black;
  border-color: black; }
.avatar--color-gray {
  color: #999999;
  border-color: #999999; }
.avatar--color-white {
  color: white;
  border-color: white; }
/**
 * Breadcrumbs
 */
.breadcrumbs {
  display: flex;
  /** Menu
  --------------------------------------------------*/ }
.breadcrumbs > ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: flex;
    user-select: none;
    /** Item
    --------------------------------------------------*/
    /** Link
    --------------------------------------------------*/
    /** Icon
    --------------------------------------------------*/ }
.breadcrumbs > ul > li {
      font-size: 14px;
      margin-right: 3px; }
.breadcrumbs > ul > li:first-child > a {
        margin-left: 0;
        padding-left: 12px; }
.breadcrumbs > ul > li:first-child > a::before {
          display: none; }
.breadcrumbs > ul > li:first-child [class^="icon-"], .breadcrumbs > ul > li:first-child [class*=" icon-"] {
        margin-left: -3px; }
.breadcrumbs > ul > li:last-child {
        margin-right: 0; }
.breadcrumbs > ul > li:last-child > a {
          padding-right: 18px; }
.breadcrumbs > ul > li:last-child > a::after {
            display: none; }
.breadcrumbs > ul > li > a {
      display: flex;
      align-items: center;
      position: relative;
      padding: 0 12px;
      background: rgba(0, 0, 0, 0.05);
      color: rgba(0, 0, 0, 0.5);
      line-height: 1;
      height: 36px;
      cursor: pointer;
      margin-left: 12px; }
.breadcrumbs > ul > li > a::before {
        content: '';
        position: absolute;
        top: 0;
        left: -12px;
        border-top: 18px solid rgba(0, 0, 0, 0.05);
        border-bottom: 18px solid rgba(0, 0, 0, 0.05);
        border-right: 12px solid transparent;
        font-size: 0;
        line-height: 0;
        width: 0;
        transform: rotate(180deg); }
.breadcrumbs > ul > li > a::after {
        content: '';
        position: absolute;
        right: -12px;
        top: 0;
        width: 0;
        height: 0;
        border-top: 18px solid transparent;
        border-bottom: 18px solid transparent;
        border-left: 12px solid rgba(0, 0, 0, 0.05); }
.breadcrumbs > ul > li > a.is-active, .breadcrumbs > ul > li > a:hover {
        color: black;
        text-decoration: none;
        background: rgba(0, 0, 0, 0.12); }
.breadcrumbs > ul > li > a.is-active::before, .breadcrumbs > ul > li > a:hover::before {
          border-top-color: rgba(0, 0, 0, 0.12);
          border-bottom-color: rgba(0, 0, 0, 0.12); }
.breadcrumbs > ul > li > a.is-active::after, .breadcrumbs > ul > li > a:hover::after {
          border-left-color: rgba(0, 0, 0, 0.12); }
.breadcrumbs > ul > li > a.is-disabled {
        cursor: default;
        pointer-events: none;
        opacity: 0.5; }
.breadcrumbs > ul li > a > [class^="icon-"],
    .breadcrumbs > ul li > a > [class*=" icon-"] {
      margin-right: 6px; }
/** Back button
--------------------------------------------------*/
.breadcrumbs__button,
a.breadcrumbs__button {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  border-radius: 0 3px 3px 0;
  padding: 0 18px 0 12px;
  margin-left: 12px;
  margin-right: 24px;
  line-height: 1;
  height: 36px;
  position: relative;
  background: rgba(0, 0, 0, 0.05);
  color: rgba(0, 0, 0, 0.5);
  font-size: 14px;
  /** Disabled state */ }
.breadcrumbs__button::before,
  a.breadcrumbs__button::before {
    content: '';
    position: absolute;
    left: -12px;
    top: 0;
    width: 0;
    height: 0;
    border-top: 18px solid transparent;
    border-right: 12px solid rgba(0, 0, 0, 0.05);
    border-bottom: 18px solid transparent; }
.breadcrumbs__button[disabled],
  a.breadcrumbs__button[disabled] {
    opacity: 0.5;
    pointer-events: none; }
.breadcrumbs__button[disabled]:hover,
    a.breadcrumbs__button[disabled]:hover {
      cursor: default; }
.breadcrumbs__button:hover,
  a.breadcrumbs__button:hover {
    color: black;
    background-color: rgba(0, 0, 0, 0.12);
    text-decoration: none; }
.breadcrumbs__button:hover::before,
    a.breadcrumbs__button:hover::before {
      border-color: transparent rgba(0, 0, 0, 0.12) transparent transparent; }
/** Colors
--------------------------------------------------*/
.breadcrumbs--color-primary {
  /** Color modifiers */ }
.breadcrumbs--color-primary > ul > li > a {
    color: rgba(255, 169, 65, 0.5);
    background-color: rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-primary > ul > li > a::before {
      border-top-color: rgba(255, 169, 65, 0.05);
      border-bottom-color: rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-primary > ul > li > a::after {
      border-left-color: rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-primary > ul > li > a.is-active, .breadcrumbs--color-primary > ul > li > a:hover {
      color: #ffa941;
      background-color: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-primary > ul > li > a.is-active::before, .breadcrumbs--color-primary > ul > li > a:hover::before {
        border-top-color: rgba(255, 169, 65, 0.12);
        border-bottom-color: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-primary > ul > li > a.is-active::after, .breadcrumbs--color-primary > ul > li > a:hover::after {
        border-left-color: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-primary .breadcrumbs__button,
  .breadcrumbs--color-primary a.breadcrumbs__button {
    background: rgba(255, 169, 65, 0.05);
    color: rgba(255, 169, 65, 0.5); }
.breadcrumbs--color-primary .breadcrumbs__button:before,
    .breadcrumbs--color-primary a.breadcrumbs__button:before {
      border-right: 12px solid rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-primary .breadcrumbs__button:hover,
    .breadcrumbs--color-primary a.breadcrumbs__button:hover {
      color: #ffa941;
      background: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-primary .breadcrumbs__button:hover:before,
      .breadcrumbs--color-primary a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-secondary {
  /** Color modifiers */ }
.breadcrumbs--color-secondary > ul > li > a {
    color: rgba(70, 72, 210, 0.5);
    background-color: rgba(70, 72, 210, 0.05); }
.breadcrumbs--color-secondary > ul > li > a::before {
      border-top-color: rgba(70, 72, 210, 0.05);
      border-bottom-color: rgba(70, 72, 210, 0.05); }
.breadcrumbs--color-secondary > ul > li > a::after {
      border-left-color: rgba(70, 72, 210, 0.05); }
.breadcrumbs--color-secondary > ul > li > a.is-active, .breadcrumbs--color-secondary > ul > li > a:hover {
      color: #4648d2;
      background-color: rgba(70, 72, 210, 0.12); }
.breadcrumbs--color-secondary > ul > li > a.is-active::before, .breadcrumbs--color-secondary > ul > li > a:hover::before {
        border-top-color: rgba(70, 72, 210, 0.12);
        border-bottom-color: rgba(70, 72, 210, 0.12); }
.breadcrumbs--color-secondary > ul > li > a.is-active::after, .breadcrumbs--color-secondary > ul > li > a:hover::after {
        border-left-color: rgba(70, 72, 210, 0.12); }
.breadcrumbs--color-secondary .breadcrumbs__button,
  .breadcrumbs--color-secondary a.breadcrumbs__button {
    background: rgba(70, 72, 210, 0.05);
    color: rgba(70, 72, 210, 0.5); }
.breadcrumbs--color-secondary .breadcrumbs__button:before,
    .breadcrumbs--color-secondary a.breadcrumbs__button:before {
      border-right: 12px solid rgba(70, 72, 210, 0.05); }
.breadcrumbs--color-secondary .breadcrumbs__button:hover,
    .breadcrumbs--color-secondary a.breadcrumbs__button:hover {
      color: #4648d2;
      background: rgba(70, 72, 210, 0.12); }
.breadcrumbs--color-secondary .breadcrumbs__button:hover:before,
      .breadcrumbs--color-secondary a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(70, 72, 210, 0.12); }
.breadcrumbs--color-red {
  /** Color modifiers */ }
.breadcrumbs--color-red > ul > li > a {
    color: rgba(250, 61, 73, 0.5);
    background-color: rgba(250, 61, 73, 0.05); }
.breadcrumbs--color-red > ul > li > a::before {
      border-top-color: rgba(250, 61, 73, 0.05);
      border-bottom-color: rgba(250, 61, 73, 0.05); }
.breadcrumbs--color-red > ul > li > a::after {
      border-left-color: rgba(250, 61, 73, 0.05); }
.breadcrumbs--color-red > ul > li > a.is-active, .breadcrumbs--color-red > ul > li > a:hover {
      color: #FA3D49;
      background-color: rgba(250, 61, 73, 0.12); }
.breadcrumbs--color-red > ul > li > a.is-active::before, .breadcrumbs--color-red > ul > li > a:hover::before {
        border-top-color: rgba(250, 61, 73, 0.12);
        border-bottom-color: rgba(250, 61, 73, 0.12); }
.breadcrumbs--color-red > ul > li > a.is-active::after, .breadcrumbs--color-red > ul > li > a:hover::after {
        border-left-color: rgba(250, 61, 73, 0.12); }
.breadcrumbs--color-red .breadcrumbs__button,
  .breadcrumbs--color-red a.breadcrumbs__button {
    background: rgba(250, 61, 73, 0.05);
    color: rgba(250, 61, 73, 0.5); }
.breadcrumbs--color-red .breadcrumbs__button:before,
    .breadcrumbs--color-red a.breadcrumbs__button:before {
      border-right: 12px solid rgba(250, 61, 73, 0.05); }
.breadcrumbs--color-red .breadcrumbs__button:hover,
    .breadcrumbs--color-red a.breadcrumbs__button:hover {
      color: #FA3D49;
      background: rgba(250, 61, 73, 0.12); }
.breadcrumbs--color-red .breadcrumbs__button:hover:before,
      .breadcrumbs--color-red a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(250, 61, 73, 0.12); }
.breadcrumbs--color-orange {
  /** Color modifiers */ }
.breadcrumbs--color-orange > ul > li > a {
    color: rgba(255, 169, 65, 0.5);
    background-color: rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-orange > ul > li > a::before {
      border-top-color: rgba(255, 169, 65, 0.05);
      border-bottom-color: rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-orange > ul > li > a::after {
      border-left-color: rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-orange > ul > li > a.is-active, .breadcrumbs--color-orange > ul > li > a:hover {
      color: #ffa941;
      background-color: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-orange > ul > li > a.is-active::before, .breadcrumbs--color-orange > ul > li > a:hover::before {
        border-top-color: rgba(255, 169, 65, 0.12);
        border-bottom-color: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-orange > ul > li > a.is-active::after, .breadcrumbs--color-orange > ul > li > a:hover::after {
        border-left-color: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-orange .breadcrumbs__button,
  .breadcrumbs--color-orange a.breadcrumbs__button {
    background: rgba(255, 169, 65, 0.05);
    color: rgba(255, 169, 65, 0.5); }
.breadcrumbs--color-orange .breadcrumbs__button:before,
    .breadcrumbs--color-orange a.breadcrumbs__button:before {
      border-right: 12px solid rgba(255, 169, 65, 0.05); }
.breadcrumbs--color-orange .breadcrumbs__button:hover,
    .breadcrumbs--color-orange a.breadcrumbs__button:hover {
      color: #ffa941;
      background: rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-orange .breadcrumbs__button:hover:before,
      .breadcrumbs--color-orange a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(255, 169, 65, 0.12); }
.breadcrumbs--color-yellow {
  /** Color modifiers */ }
.breadcrumbs--color-yellow > ul > li > a {
    color: rgba(255, 228, 51, 0.5);
    background-color: rgba(255, 228, 51, 0.05); }
.breadcrumbs--color-yellow > ul > li > a::before {
      border-top-color: rgba(255, 228, 51, 0.05);
      border-bottom-color: rgba(255, 228, 51, 0.05); }
.breadcrumbs--color-yellow > ul > li > a::after {
      border-left-color: rgba(255, 228, 51, 0.05); }
.breadcrumbs--color-yellow > ul > li > a.is-active, .breadcrumbs--color-yellow > ul > li > a:hover {
      color: #ffe433;
      background-color: rgba(255, 228, 51, 0.12); }
.breadcrumbs--color-yellow > ul > li > a.is-active::before, .breadcrumbs--color-yellow > ul > li > a:hover::before {
        border-top-color: rgba(255, 228, 51, 0.12);
        border-bottom-color: rgba(255, 228, 51, 0.12); }
.breadcrumbs--color-yellow > ul > li > a.is-active::after, .breadcrumbs--color-yellow > ul > li > a:hover::after {
        border-left-color: rgba(255, 228, 51, 0.12); }
.breadcrumbs--color-yellow .breadcrumbs__button,
  .breadcrumbs--color-yellow a.breadcrumbs__button {
    background: rgba(255, 228, 51, 0.05);
    color: rgba(255, 228, 51, 0.5); }
.breadcrumbs--color-yellow .breadcrumbs__button:before,
    .breadcrumbs--color-yellow a.breadcrumbs__button:before {
      border-right: 12px solid rgba(255, 228, 51, 0.05); }
.breadcrumbs--color-yellow .breadcrumbs__button:hover,
    .breadcrumbs--color-yellow a.breadcrumbs__button:hover {
      color: #ffe433;
      background: rgba(255, 228, 51, 0.12); }
.breadcrumbs--color-yellow .breadcrumbs__button:hover:before,
      .breadcrumbs--color-yellow a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(255, 228, 51, 0.12); }
.breadcrumbs--color-green {
  /** Color modifiers */ }
.breadcrumbs--color-green > ul > li > a {
    color: rgba(75, 196, 95, 0.5);
    background-color: rgba(75, 196, 95, 0.05); }
.breadcrumbs--color-green > ul > li > a::before {
      border-top-color: rgba(75, 196, 95, 0.05);
      border-bottom-color: rgba(75, 196, 95, 0.05); }
.breadcrumbs--color-green > ul > li > a::after {
      border-left-color: rgba(75, 196, 95, 0.05); }
.breadcrumbs--color-green > ul > li > a.is-active, .breadcrumbs--color-green > ul > li > a:hover {
      color: #4BC45F;
      background-color: rgba(75, 196, 95, 0.12); }
.breadcrumbs--color-green > ul > li > a.is-active::before, .breadcrumbs--color-green > ul > li > a:hover::before {
        border-top-color: rgba(75, 196, 95, 0.12);
        border-bottom-color: rgba(75, 196, 95, 0.12); }
.breadcrumbs--color-green > ul > li > a.is-active::after, .breadcrumbs--color-green > ul > li > a:hover::after {
        border-left-color: rgba(75, 196, 95, 0.12); }
.breadcrumbs--color-green .breadcrumbs__button,
  .breadcrumbs--color-green a.breadcrumbs__button {
    background: rgba(75, 196, 95, 0.05);
    color: rgba(75, 196, 95, 0.5); }
.breadcrumbs--color-green .breadcrumbs__button:before,
    .breadcrumbs--color-green a.breadcrumbs__button:before {
      border-right: 12px solid rgba(75, 196, 95, 0.05); }
.breadcrumbs--color-green .breadcrumbs__button:hover,
    .breadcrumbs--color-green a.breadcrumbs__button:hover {
      color: #4BC45F;
      background: rgba(75, 196, 95, 0.12); }
.breadcrumbs--color-green .breadcrumbs__button:hover:before,
      .breadcrumbs--color-green a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(75, 196, 95, 0.12); }
.breadcrumbs--color-blue {
  /** Color modifiers */ }
.breadcrumbs--color-blue > ul > li > a {
    color: rgba(51, 51, 243, 0.5);
    background-color: rgba(51, 51, 243, 0.05); }
.breadcrumbs--color-blue > ul > li > a::before {
      border-top-color: rgba(51, 51, 243, 0.05);
      border-bottom-color: rgba(51, 51, 243, 0.05); }
.breadcrumbs--color-blue > ul > li > a::after {
      border-left-color: rgba(51, 51, 243, 0.05); }
.breadcrumbs--color-blue > ul > li > a.is-active, .breadcrumbs--color-blue > ul > li > a:hover {
      color: #3333f3;
      background-color: rgba(51, 51, 243, 0.12); }
.breadcrumbs--color-blue > ul > li > a.is-active::before, .breadcrumbs--color-blue > ul > li > a:hover::before {
        border-top-color: rgba(51, 51, 243, 0.12);
        border-bottom-color: rgba(51, 51, 243, 0.12); }
.breadcrumbs--color-blue > ul > li > a.is-active::after, .breadcrumbs--color-blue > ul > li > a:hover::after {
        border-left-color: rgba(51, 51, 243, 0.12); }
.breadcrumbs--color-blue .breadcrumbs__button,
  .breadcrumbs--color-blue a.breadcrumbs__button {
    background: rgba(51, 51, 243, 0.05);
    color: rgba(51, 51, 243, 0.5); }
.breadcrumbs--color-blue .breadcrumbs__button:before,
    .breadcrumbs--color-blue a.breadcrumbs__button:before {
      border-right: 12px solid rgba(51, 51, 243, 0.05); }
.breadcrumbs--color-blue .breadcrumbs__button:hover,
    .breadcrumbs--color-blue a.breadcrumbs__button:hover {
      color: #3333f3;
      background: rgba(51, 51, 243, 0.12); }
.breadcrumbs--color-blue .breadcrumbs__button:hover:before,
      .breadcrumbs--color-blue a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(51, 51, 243, 0.12); }
.breadcrumbs--color-indigo {
  /** Color modifiers */ }
.breadcrumbs--color-indigo > ul > li > a {
    color: rgba(23, 140, 214, 0.5);
    background-color: rgba(23, 140, 214, 0.05); }
.breadcrumbs--color-indigo > ul > li > a::before {
      border-top-color: rgba(23, 140, 214, 0.05);
      border-bottom-color: rgba(23, 140, 214, 0.05); }
.breadcrumbs--color-indigo > ul > li > a::after {
      border-left-color: rgba(23, 140, 214, 0.05); }
.breadcrumbs--color-indigo > ul > li > a.is-active, .breadcrumbs--color-indigo > ul > li > a:hover {
      color: #178cd6;
      background-color: rgba(23, 140, 214, 0.12); }
.breadcrumbs--color-indigo > ul > li > a.is-active::before, .breadcrumbs--color-indigo > ul > li > a:hover::before {
        border-top-color: rgba(23, 140, 214, 0.12);
        border-bottom-color: rgba(23, 140, 214, 0.12); }
.breadcrumbs--color-indigo > ul > li > a.is-active::after, .breadcrumbs--color-indigo > ul > li > a:hover::after {
        border-left-color: rgba(23, 140, 214, 0.12); }
.breadcrumbs--color-indigo .breadcrumbs__button,
  .breadcrumbs--color-indigo a.breadcrumbs__button {
    background: rgba(23, 140, 214, 0.05);
    color: rgba(23, 140, 214, 0.5); }
.breadcrumbs--color-indigo .breadcrumbs__button:before,
    .breadcrumbs--color-indigo a.breadcrumbs__button:before {
      border-right: 12px solid rgba(23, 140, 214, 0.05); }
.breadcrumbs--color-indigo .breadcrumbs__button:hover,
    .breadcrumbs--color-indigo a.breadcrumbs__button:hover {
      color: #178cd6;
      background: rgba(23, 140, 214, 0.12); }
.breadcrumbs--color-indigo .breadcrumbs__button:hover:before,
      .breadcrumbs--color-indigo a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(23, 140, 214, 0.12); }
.breadcrumbs--color-violet {
  /** Color modifiers */ }
.breadcrumbs--color-violet > ul > li > a {
    color: rgba(139, 38, 241, 0.5);
    background-color: rgba(139, 38, 241, 0.05); }
.breadcrumbs--color-violet > ul > li > a::before {
      border-top-color: rgba(139, 38, 241, 0.05);
      border-bottom-color: rgba(139, 38, 241, 0.05); }
.breadcrumbs--color-violet > ul > li > a::after {
      border-left-color: rgba(139, 38, 241, 0.05); }
.breadcrumbs--color-violet > ul > li > a.is-active, .breadcrumbs--color-violet > ul > li > a:hover {
      color: #8b26f1;
      background-color: rgba(139, 38, 241, 0.12); }
.breadcrumbs--color-violet > ul > li > a.is-active::before, .breadcrumbs--color-violet > ul > li > a:hover::before {
        border-top-color: rgba(139, 38, 241, 0.12);
        border-bottom-color: rgba(139, 38, 241, 0.12); }
.breadcrumbs--color-violet > ul > li > a.is-active::after, .breadcrumbs--color-violet > ul > li > a:hover::after {
        border-left-color: rgba(139, 38, 241, 0.12); }
.breadcrumbs--color-violet .breadcrumbs__button,
  .breadcrumbs--color-violet a.breadcrumbs__button {
    background: rgba(139, 38, 241, 0.05);
    color: rgba(139, 38, 241, 0.5); }
.breadcrumbs--color-violet .breadcrumbs__button:before,
    .breadcrumbs--color-violet a.breadcrumbs__button:before {
      border-right: 12px solid rgba(139, 38, 241, 0.05); }
.breadcrumbs--color-violet .breadcrumbs__button:hover,
    .breadcrumbs--color-violet a.breadcrumbs__button:hover {
      color: #8b26f1;
      background: rgba(139, 38, 241, 0.12); }
.breadcrumbs--color-violet .breadcrumbs__button:hover:before,
      .breadcrumbs--color-violet a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(139, 38, 241, 0.12); }
.breadcrumbs--color-black {
  /** Color modifiers */ }
.breadcrumbs--color-black > ul > li > a {
    color: rgba(0, 0, 0, 0.5);
    background-color: rgba(0, 0, 0, 0.05); }
.breadcrumbs--color-black > ul > li > a::before {
      border-top-color: rgba(0, 0, 0, 0.05);
      border-bottom-color: rgba(0, 0, 0, 0.05); }
.breadcrumbs--color-black > ul > li > a::after {
      border-left-color: rgba(0, 0, 0, 0.05); }
.breadcrumbs--color-black > ul > li > a.is-active, .breadcrumbs--color-black > ul > li > a:hover {
      color: black;
      background-color: rgba(0, 0, 0, 0.12); }
.breadcrumbs--color-black > ul > li > a.is-active::before, .breadcrumbs--color-black > ul > li > a:hover::before {
        border-top-color: rgba(0, 0, 0, 0.12);
        border-bottom-color: rgba(0, 0, 0, 0.12); }
.breadcrumbs--color-black > ul > li > a.is-active::after, .breadcrumbs--color-black > ul > li > a:hover::after {
        border-left-color: rgba(0, 0, 0, 0.12); }
.breadcrumbs--color-black .breadcrumbs__button,
  .breadcrumbs--color-black a.breadcrumbs__button {
    background: rgba(0, 0, 0, 0.05);
    color: rgba(0, 0, 0, 0.5); }
.breadcrumbs--color-black .breadcrumbs__button:before,
    .breadcrumbs--color-black a.breadcrumbs__button:before {
      border-right: 12px solid rgba(0, 0, 0, 0.05); }
.breadcrumbs--color-black .breadcrumbs__button:hover,
    .breadcrumbs--color-black a.breadcrumbs__button:hover {
      color: black;
      background: rgba(0, 0, 0, 0.12); }
.breadcrumbs--color-black .breadcrumbs__button:hover:before,
      .breadcrumbs--color-black a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(0, 0, 0, 0.12); }
.breadcrumbs--color-gray {
  /** Color modifiers */ }
.breadcrumbs--color-gray > ul > li > a {
    color: rgba(153, 153, 153, 0.5);
    background-color: rgba(153, 153, 153, 0.05); }
.breadcrumbs--color-gray > ul > li > a::before {
      border-top-color: rgba(153, 153, 153, 0.05);
      border-bottom-color: rgba(153, 153, 153, 0.05); }
.breadcrumbs--color-gray > ul > li > a::after {
      border-left-color: rgba(153, 153, 153, 0.05); }
.breadcrumbs--color-gray > ul > li > a.is-active, .breadcrumbs--color-gray > ul > li > a:hover {
      color: #999999;
      background-color: rgba(153, 153, 153, 0.12); }
.breadcrumbs--color-gray > ul > li > a.is-active::before, .breadcrumbs--color-gray > ul > li > a:hover::before {
        border-top-color: rgba(153, 153, 153, 0.12);
        border-bottom-color: rgba(153, 153, 153, 0.12); }
.breadcrumbs--color-gray > ul > li > a.is-active::after, .breadcrumbs--color-gray > ul > li > a:hover::after {
        border-left-color: rgba(153, 153, 153, 0.12); }
.breadcrumbs--color-gray .breadcrumbs__button,
  .breadcrumbs--color-gray a.breadcrumbs__button {
    background: rgba(153, 153, 153, 0.05);
    color: rgba(153, 153, 153, 0.5); }
.breadcrumbs--color-gray .breadcrumbs__button:before,
    .breadcrumbs--color-gray a.breadcrumbs__button:before {
      border-right: 12px solid rgba(153, 153, 153, 0.05); }
.breadcrumbs--color-gray .breadcrumbs__button:hover,
    .breadcrumbs--color-gray a.breadcrumbs__button:hover {
      color: #999999;
      background: rgba(153, 153, 153, 0.12); }
.breadcrumbs--color-gray .breadcrumbs__button:hover:before,
      .breadcrumbs--color-gray a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(153, 153, 153, 0.12); }
.breadcrumbs--color-white {
  /** Color modifiers */ }
.breadcrumbs--color-white > ul > li > a {
    color: rgba(255, 255, 255, 0.5);
    background-color: rgba(255, 255, 255, 0.05); }
.breadcrumbs--color-white > ul > li > a::before {
      border-top-color: rgba(255, 255, 255, 0.05);
      border-bottom-color: rgba(255, 255, 255, 0.05); }
.breadcrumbs--color-white > ul > li > a::after {
      border-left-color: rgba(255, 255, 255, 0.05); }
.breadcrumbs--color-white > ul > li > a.is-active, .breadcrumbs--color-white > ul > li > a:hover {
      color: white;
      background-color: rgba(255, 255, 255, 0.12); }
.breadcrumbs--color-white > ul > li > a.is-active::before, .breadcrumbs--color-white > ul > li > a:hover::before {
        border-top-color: rgba(255, 255, 255, 0.12);
        border-bottom-color: rgba(255, 255, 255, 0.12); }
.breadcrumbs--color-white > ul > li > a.is-active::after, .breadcrumbs--color-white > ul > li > a:hover::after {
        border-left-color: rgba(255, 255, 255, 0.12); }
.breadcrumbs--color-white .breadcrumbs__button,
  .breadcrumbs--color-white a.breadcrumbs__button {
    background: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.5); }
.breadcrumbs--color-white .breadcrumbs__button:before,
    .breadcrumbs--color-white a.breadcrumbs__button:before {
      border-right: 12px solid rgba(255, 255, 255, 0.05); }
.breadcrumbs--color-white .breadcrumbs__button:hover,
    .breadcrumbs--color-white a.breadcrumbs__button:hover {
      color: white;
      background: rgba(255, 255, 255, 0.12); }
.breadcrumbs--color-white .breadcrumbs__button:hover:before,
      .breadcrumbs--color-white a.breadcrumbs__button:hover:before {
        border-right: 12px solid rgba(255, 255, 255, 0.12); }
/** Sizes
--------------------------------------------------*/
.breadcrumbs--full > ul {
  width: 100%; }
.breadcrumbs--full > ul > li {
    flex: 1; }
.breadcrumbs--full > ul > li > a {
    justify-content: center;
    text-align: center; }
/**
 * Card
 */
.card {
  border-radius: 3px;
  background-color: white;
  box-shadow: 8px 14px 38px rgba(0, 0, 0, 0.04), 0px 3px 5px rgba(0, 0, 0, 0.04); }
/** Image
--------------------------------------------------*/
.card__image img {
  display: block;
  width: 100%;
  height: auto;
  border-radius: 3px 3px 0 0; }
/** Header
--------------------------------------------------*/
.card__header {
  border-bottom: 1px solid #ebebeb;
  border-radius: 3px 3px 0 0;
  padding: 12px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 64px; }
.card__header .form {
    min-width: 240px; }
.card__header h1, .card__header h2, .card__header h3, .card__header h4, .card__header h5, .card__header h6 {
    font-weight: 400;
    color: black;
    padding-left: 12px;
    margin-bottom: 0;
    margin-top: 0; }
/** Body
--------------------------------------------------*/
.card__body {
  padding: 24px; }
/** Section
--------------------------------------------------*/
.card__section {
  border-bottom: 1px solid #ebebeb;
  padding-bottom: 12px; }
.card__section:last-of-type {
    border: none; }
.card__section .card__header h1, .card__section .card__header h2, .card__section .card__header h3, .card__section .card__header h4, .card__section .card__header h5, .card__section .card__header h6 {
    padding-left: 0; }
.card__section .card__header {
    margin-left: 24px;
    margin-right: 24px;
    padding-left: 0;
    padding-right: 0; }
.card__section .card__body {
    margin-left: 24px;
    margin-right: 24px;
    padding-left: 0;
    padding-right: 0; }
.card__section .card__footer {
    margin-left: 24px;
    margin-right: 24px;
    padding-left: 0;
    padding-right: 0; }
/** Footer
--------------------------------------------------*/
.card__footer {
  border-radius: 0 0 3px 3px;
  border-top: 1px solid #ebebeb;
  min-height: 48px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 24px;
  transition: 0.15s ease-in-out; }
.card__footer:empty {
    min-height: 0;
    height: 24px;
    padding: 0;
    border-top: 0; }
.card__footer--click {
  color: #999999; }
.card__footer--click:hover {
    color: #999999;
    cursor: pointer;
    background-color: #ebebeb; }
/** Styles
--------------------------------------------------*/
/** With navigation */
.card__header .nav {
  margin-left: 12px; }
.card__header .nav > ul {
    padding: 0; }
/** No gutter */
.card--full .card__body {
  padding: 0; }
.card--full .card__section-header {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0; }
/**
 * Checkbox
 */
/** Checkbox group
--------------------------------------------------*/
.checkbox-group {
  height: 64px;
  padding: 12px;
  border: 1px solid #ebebeb;
  border-radius: 3px; }
/** Checkbox group label
--------------------------------------------------*/
.checkbox-group__label {
  margin-bottom: 4px;
  font-size: 12px;
  line-height: 1;
  color: black; }
/** Checkbox
--------------------------------------------------*/
.checkbox {
  display: inline-block;
  position: relative;
  font-size: 16px;
  /** Checkbox input
  --------------------------------------------------*/
  /** Checkbox label
  --------------------------------------------------*/ }
.checkbox * {
    transition: all 150ms ease-out; }
.checkbox + .checkbox {
    margin-left: 24px;
    margin-left: 24px; }
.checkbox > input {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    opacity: 0;
    visibility: hidden; }
.checkbox > label {
    display: inline-flex;
    align-items: center;
    position: relative;
    background: transparent;
    cursor: pointer;
    padding-left: 26px;
    min-height: 18px;
    color: #4648d2;
    opacity: 0.5; }
.checkbox > label::before {
      position: absolute;
      top: 50%;
      left: 0;
      height: 18px;
      width: 18px;
      transform: translateY(-50%);
      border: 1px solid #4648d2;
      content: '';
      border-radius: 3px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-family: "fomo-icons";
      color: white;
      font-size: 24px;
      /** equals 24px */
      transform: all 150ms ease-out; }
/** States
--------------------------------------------------*/
.checkbox {
  /** Checked */
  /** Disabled and checked */ }
.checkbox > input:checked + label {
    opacity: 1; }
.checkbox > input:checked + label::before {
    content: "\e821";
    background-color: #4648d2; }
.checkbox > input:disabled + label {
    color: #6b6b6b;
    cursor: default; }
.checkbox > input:disabled + label::before {
      border-color: #6b6b6b; }
.checkbox > input:disabled:checked > label::before {
    background-color: #6b6b6b; }
/**
 * Empty state
 */
.empty-state {
  display: flex;
  align-items: center;
  margin-left: 48px;
  margin-right: 48px; }
.empty-state__image {
  flex: 1;
  pointer-events: none; }
.empty-state__image img {
    max-width: 100%; }
.empty-state__content {
  flex: 1; }
.empty-state__description {
  font-size: 18px;
  color: #999999;
  max-width: 384px; }
.empty-state__description p {
    margin-bottom: 12px; }
.empty-state__buttons {
  margin-top: 12px; }
.empty-state--no-gutter {
  margin-left: 0;
  margin-right: 0; }
/**
 * Form
 */
.form + .form {
  margin-top: 24px; }
/** Form item
--------------------------------------------------*/
.form__item {
  position: relative;
  margin-bottom: 24px; }
.form__item * {
    transition: all 150ms ease-out; }
.form__item:last-child {
    margin-bottom: 0; }
/** Form wrapper
--------------------------------------------------*/
.form__wrapper {
  display: flex; }
/** Form input wrapper
--------------------------------------------------*/
.form__input-wrapper {
  position: relative;
  flex: 1;
  z-index: 4; }
/** Form input and textarea
--------------------------------------------------*/
.form__input,
.form__textarea {
  font-size: 18px;
  padding: 8px 12px;
  color: #4648d2;
  border-radius: 3px;
  display: block;
  width: 100%;
  border: 1px solid #ebebeb;
  line-height: 22px;
  height: auto; }
.form__input:focus,
  .form__textarea:focus {
    color: #4648d2;
    box-shadow: 0 0 12px 6px rgba(70, 72, 210, 0.07);
    border-color: rgba(70, 72, 210, 0.34);
    outline: 0; }
.form__input::placeholder,
  .form__textarea::placeholder {
    opacity: 0; }
.form__input[disabled],
  .form__textarea[disabled] {
    background-color: transparent;
    opacity: 1;
    color: #999999; }
.form__input[disabled]:focus,
    .form__textarea[disabled]:focus {
      box-shadow: none;
      border: 1px solid #ebebeb; }
.form__input[readonly],
  .form__textarea[readonly] {
    background-color: transparent;
    opacity: 1;
    color: #999999; }
.form__input[readonly]:focus,
    .form__textarea[readonly]:focus {
      box-shadow: none;
      border: 1px solid #ebebeb; }
.form__input:-webkit-autofill,
  .form__textarea:-webkit-autofill {
    border-color: #ebebeb !important;
    -webkit-text-fill-color: #4648d2 !important; }
.form__input.has-focus + .form__label, .form__input.has-value + .form__label,
  .form__textarea.has-focus + .form__label,
  .form__textarea.has-value + .form__label {
    display: none; }
/** Remove iOS shadow on input */
.form__input[type=text] {
  appearance: none; }
/** Form label
--------------------------------------------------*/
.form__label {
  position: absolute;
  top: 0;
  left: 0;
  margin: 11px 12px;
  font-size: 18px;
  font-weight: 400;
  line-height: 18px;
  color: #cccccc; }
/** Form action
--------------------------------------------------*/
.form__extras,
.form__action {
  height: 40px;
  padding: 0 6px;
  display: flex;
  align-items: center;
  z-index: 3;
  border: 1px solid #ebebeb;
  margin-right: -1px;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
  background-color: #f7f7f7; }
/** Form message
--------------------------------------------------*/
.form__message {
  margin-top: 12px;
  font-size: 14px;
  color: #FA3D49; }
/** Form description
--------------------------------------------------*/
.form__description {
  color: #cccccc;
  font-size: 14px;
  margin-top: 12px;
  margin-bottom: 0; }
/** States
--------------------------------------------------*/
.form__item {
  /** Error */
  /** Action */ }
.form__item.has-error .form__input,
  .form__item.has-error .form__textarea {
    border-color: rgba(250, 61, 73, 0.75); }
.form__item.has-extras, .form__item.has-action {
    display: flex;
    flex-wrap: wrap; }
.form__item.has-extras .form__input[readonly], .form__item.has-action .form__input[readonly] {
      color: #4648d2; }
.form__item.has-extras .form__description, .form__item.has-action .form__description {
      width: 100%; }
.form__item.has-extras .form__action + .form__input-wrapper .form__input, .form__item.has-action .form__action + .form__input-wrapper .form__input {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0; }
.form__item.has-extras .form__input-wrapper:first-child .form__input, .form__item.has-action .form__input-wrapper:first-child .form__input {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0; }
.form__item.has-extras .form__input-wrapper + .form__action, .form__item.has-action .form__input-wrapper + .form__action {
      margin-right: 0;
      margin-left: -1px;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-top-right-radius: 3px;
      border-bottom-right-radius: 3px; }
/** Sizes
--------------------------------------------------*/
/** Large */
.form--large .form__input,
.form--large .form__textarea {
  padding: 19px 12px;
  min-height: 64px; }
.form--large .form__input.has-focus, .form--large .form__input.has-value,
  .form--large .form__textarea.has-focus,
  .form--large .form__textarea.has-value {
    padding: 28px 12px 12px; }
.form--large .form__input.has-focus + .form__label, .form--large .form__input.has-value + .form__label,
    .form--large .form__textarea.has-focus + .form__label,
    .form--large .form__textarea.has-value + .form__label {
      display: block;
      line-height: 1;
      height: auto;
      font-size: 12px;
      color: black;
      margin: 12px 0 0 12px;
      z-index: 1; }
.form--large .form__input.has-focus + .form__label::before, .form--large .form__input.has-value + .form__label::before,
      .form--large .form__textarea.has-focus + .form__label::before,
      .form--large .form__textarea.has-value + .form__label::before {
        content: " ";
        position: absolute;
        width: calc(100% + 12px);
        height: calc( 100% + 12px / 2);
        left: -6px;
        top: -3px;
        background-color: white;
        z-index: -1;
        transition: none;
        border-radius: 12px; }
.form--large .form__label {
  margin: 23px 12px; }
.form--large .form__extras,
.form--large .form__action {
  height: 64px;
  padding: 0 12px; }
.form--large .form__textarea {
  height: auto; }
.form--large .form__textarea.has-focus, .form--large .form__textarea.has-value {
    padding: 26px 12px 12px; }
/**
 * Dropdown
 */
.form-dropdown {
  position: relative;
  z-index: 1;
  min-width: 240px; }
.form-dropdown:hover {
    cursor: pointer; }
/** Dropdown input
--------------------------------------------------*/
.form-dropdown__input {
  display: none; }
/** Dropdown label
--------------------------------------------------*/
.form-dropdown__label {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 3;
  color: #cccccc;
  width: 100%;
  line-height: 1.5;
  border: 1px solid #ebebeb;
  border-radius: 3px;
  height: 40px;
  font-size: 16px;
  padding: 7px 12px; }
/** Dropdown text
--------------------------------------------------*/
.form-dropdown__text {
  position: relative;
  z-index: 2;
  color: #cccccc;
  border-radius: 3px;
  display: block;
  width: 100%;
  opacity: 0;
  visibility: hidden;
  height: 40px;
  font-size: 14px;
  padding: 18px 12px 6px; }
.form-dropdown__text.no-label {
    padding-top: 24px; }
/** Dropdown icon
--------------------------------------------------*/
.form-dropdown__icon {
  position: absolute;
  top: 50%;
  z-index: 2;
  transform: translateY(-50%);
  height: 36px;
  width: 18px;
  right: 3px; }
.form-dropdown__icon svg {
    height: 36px;
    width: 18px;
    display: block; }
.form-dropdown__icon svg path {
      fill: #4648d2; }
.form-dropdown__icon svg:first-child {
      transform: rotate(180deg); }
/** Dropdown content
--------------------------------------------------*/
.form-dropdown__content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  border-radius: 3px;
  border: 1px solid #8b8df3;
  padding-top: 40px;
  z-index: 1;
  opacity: 0;
  visibility: hidden;
  box-shadow: 0 0 12px 6px rgba(70, 72, 210, 0.07);
  background-color: white; }
/** Dropdown menu
--------------------------------------------------*/
.form-dropdown__menu {
  padding: 0;
  list-style-type: none;
  margin: 6px 0;
  max-height: 200px;
  overflow: auto; }
.form-dropdown__menu li {
    display: flex;
    align-items: center;
    color: #cccccc;
    font-size: 14px;
    padding: 6px 12px; }
.form-dropdown__menu li:hover {
      cursor: pointer;
      color: #4648d2;
      background-color: #ebebeb; }
.form-dropdown__menu li.is-selected {
    cursor: not-allowed; }
.form-dropdown__menu li.is-selected:hover {
      color: #999999; }
/** States
--------------------------------------------------*/
/** Open and with a value */
.form-dropdown.is-open .form-dropdown__label,
.form-dropdown.has-focus .form-dropdown__label,
.form-dropdown.has-value .form-dropdown__label {
  color: black;
  height: 100%;
  font-size: 10px;
  padding: 6px 12px 0; }
.form-dropdown.is-open .form-dropdown__text,
.form-dropdown.has-focus .form-dropdown__text,
.form-dropdown.has-value .form-dropdown__text {
  color: #4648d2;
  opacity: 1;
  visibility: visible; }
/** Open */
.form-dropdown.is-open {
  z-index: 10; }
.form-dropdown.is-open .form-dropdown__label {
    border-color: #8b8df3;
    border-bottom-color: #ebebeb; }
.form-dropdown.is-open .form-dropdown__content {
    opacity: 1;
    visibility: visible; }
.form-dropdown.is-open .form-dropdown__text {
    border-color: #8b8df3;
    border-bottom-color: #ebebeb; }
.form-dropdown.is-open .form-dropdown__icon svg {
    transform: rotate(180deg); }
.form-dropdown.is-open .form-dropdown__icon svg path {
      fill: #4648d2; }
.form-dropdown.is-open .form-dropdown__icon svg:first-child {
      transform: rotate(0deg); }
/** Disabled */
.form-dropdown.is-disabled {
  pointer-events: none;
  cursor: default; }
.form-dropdown.is-disabled .form-dropdown__label {
    border-color: #ebebeb; }
.form-dropdown.is-disabled .form-dropdown__text {
    color: #999999; }
.form-dropdown.is-disabled .form-dropdown__icon svg path {
    fill: #999999; }
/** Search
--------------------------------------------------*/
.form-dropdown--search .form-dropdown__input {
  position: relative;
  z-index: 99;
  font-size: 14px;
  padding: 18px 12px 6px;
  color: #4648d2;
  border-radius: 3px;
  display: block;
  width: 100%;
  background-color: transparent;
  border-width: 0;
  height: 40px;
  opacity: 0; }
.form-dropdown--search .form-dropdown__input:focus {
    outline: none;
    opacity: 1; }
.form-dropdown--search .form-dropdown__search-text {
  position: absolute;
  left: 0;
  top: 0;
  color: #4648d2;
  z-index: 2;
  font-size: 14px;
  padding: 18px 12px 6px;
  height: 40px; }
.form-dropdown--search.is-opened .form-dropdown__search-text, .form-dropdown--search.is-open .form-dropdown__search-text {
  z-index: -1; }
/** Styles
--------------------------------------------------*/
/** Large */
.form--large .form-dropdown {
  /** Search */ }
.form--large .form-dropdown .form-dropdown__label {
    font-size: 18px;
    padding: 19px 12px;
    min-height: 64px; }
.form--large .form-dropdown .form-dropdown__text {
    font-size: 18px;
    padding: 28px 12px 12px;
    min-height: 64px; }
.form--large .form-dropdown.has-focus .form-dropdown__label, .form--large .form-dropdown.has-value .form-dropdown__label, .form--large .form-dropdown.is-open .form-dropdown__label {
    padding: 12px 12px 0;
    font-size: 12px; }
.form--large .form-dropdown .form-dropdown__icon {
    width: 24px;
    height: 48px;
    right: 12px; }
.form--large .form-dropdown .form-dropdown__icon svg {
      width: 24px;
      height: 24px; }
.form--large .form-dropdown .form-dropdown__content {
    padding-top: 64px; }
.form--large .form-dropdown .form-dropdown__menu {
    margin: 12px 0; }
.form--large .form-dropdown .form-dropdown__menu li {
      font-size: 18px;
      padding: 6px 24px; }
.form--large .form-dropdown.form-dropdown--search .form-dropdown__input,
  .form--large .form-dropdown.form-dropdown--search .form-dropdown__search-text {
    height: 64px;
    padding: 36px 12px 12px;
    font-size: 18px; }
/** With an input */
.dropdown-with-input .form-dropdown {
  min-width: 120px; }
.dropdown-with-input .form-dropdown__label {
  border-color: #ebebeb;
  border-right-width: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  z-index: 1; }
.dropdown-with-input .form-dropdown__icon {
  right: 6px; }
.dropdown-with-input .form__input {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0; }
/**
 * Image
 */
.image {
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  transition: all 150ms ease-out;
  margin-bottom: 12px; }
.image > img {
    display: block;
    max-width: 100%; }
/** Looks
--------------------------------------------------*/
.image--rounded {
  border-radius: 3px; }
.image--circle {
  border-radius: 100%; }
.image--circle > img {
    width: 100%; }
.image--shadow {
  box-shadow: 8px 14px 38px rgba(0, 0, 0, 0.04), 0px 3px 5px rgba(0, 0, 0, 0.04); }
.image--action:hover {
  opacity: 0.8; }
/** Sizes
--------------------------------------------------*/
.image--size-xsmall {
  width: 60px; }
.image--size-small {
  width: 120px; }
.image--size-medium {
  width: 240px; }
.image--size-large {
  width: 480px; }
/** Square/circle in any dimension
--------------------------------------------------*/
.image-wrapper {
  display: inline-block;
  width: 120px;
  max-width: 100%; }
.image-wrapper .image {
    position: relative;
    width: 100%;
    height: 0;
    padding: 100% 0 0; }
.image-wrapper .image > img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover; }
.image-wrapper--size-xsmall {
  width: 60px; }
.image-wrapper--size-small {
  width: 120px; }
.image-wrapper--size-medium {
  width: 240px; }
.image-wrapper--size-large {
  width: 480px; }
/** Remove margin in grid as grid have gap
--------------------------------------------------*/
.grid [class*="col"] .image {
  margin-bottom: 0; }
/**
 * Label
 */
.label {
  border-radius: 30px;
  font-size: 12px;
  display: inline-flex;
  align-items: center;
  padding: 0 12px;
  height: 28px;
  background-color: rgba(153, 153, 153, 0.1);
  color: #999999; }
.label [class^="icon-"], .label [class*=" icon-"] {
    font-size: 18px;
    margin-right: -6px; }
.label + .label {
    margin-left: 6px; }
/** Styles
--------------------------------------------------*/
/** Small */
.label--small {
  padding: 0 10px;
  height: 22px; }
/** Dot */
.label--dot {
  width: 12px;
  height: 12px;
  padding: 0; }
/** Pill */
.label--pill {
  width: 72px;
  height: 12px; }
/** States
--------------------------------------------------*/
.label--dismiss [class^="icon-"]:hover, .label--dismiss [class*=" icon-"]:hover {
  cursor: pointer;
  color: #6b6b6b; }
/** Colors
--------------------------------------------------*/
/** Regular style colors */
.label--primary {
  background-color: rgba(255, 169, 65, 0.1);
  color: #ffa941; }
.label--primary.label--dismiss [class^="icon-"]:hover, .label--primary.label--dismiss [class*=" icon-"]:hover {
    color: #da7700; }
.label--primary-dark {
  background-color: rgba(218, 119, 0, 0.1);
  color: #da7700; }
.label--primary-dark.label--dismiss [class^="icon-"]:hover, .label--primary-dark.label--dismiss [class*=" icon-"]:hover {
    color: #da7700; }
.label--primary-light {
  background-color: rgba(255, 215, 167, 0.1);
  color: #ffd7a7; }
.label--primary-light.label--dismiss [class^="icon-"]:hover, .label--primary-light.label--dismiss [class*=" icon-"]:hover {
    color: #da7700; }
.label--secondary {
  background-color: rgba(70, 72, 210, 0.1);
  color: #4648d2; }
.label--secondary.label--dismiss [class^="icon-"]:hover, .label--secondary.label--dismiss [class*=" icon-"]:hover {
    color: #1113a1; }
.label--secondary-dark {
  background-color: rgba(17, 19, 161, 0.1);
  color: #1113a1; }
.label--secondary-dark.label--dismiss [class^="icon-"]:hover, .label--secondary-dark.label--dismiss [class*=" icon-"]:hover {
    color: #1113a1; }
.label--secondary-light {
  background-color: rgba(139, 141, 243, 0.1);
  color: #8b8df3; }
.label--secondary-light.label--dismiss [class^="icon-"]:hover, .label--secondary-light.label--dismiss [class*=" icon-"]:hover {
    color: #1113a1; }
.label--red {
  background-color: rgba(250, 61, 73, 0.1);
  color: #FA3D49; }
.label--red.label--dismiss [class^="icon-"]:hover, .label--red.label--dismiss [class*=" icon-"]:hover {
    color: #d1000d; }
.label--red-dark {
  background-color: rgba(209, 0, 13, 0.1);
  color: #d1000d; }
.label--red-dark.label--dismiss [class^="icon-"]:hover, .label--red-dark.label--dismiss [class*=" icon-"]:hover {
    color: #d1000d; }
.label--red-light {
  background-color: rgba(255, 158, 164, 0.1);
  color: #ff9ea4; }
.label--red-light.label--dismiss [class^="icon-"]:hover, .label--red-light.label--dismiss [class*=" icon-"]:hover {
    color: #d1000d; }
.label--orange {
  background-color: rgba(255, 169, 65, 0.1);
  color: #ffa941; }
.label--orange.label--dismiss [class^="icon-"]:hover, .label--orange.label--dismiss [class*=" icon-"]:hover {
    color: #da7700; }
.label--orange-dark {
  background-color: rgba(218, 119, 0, 0.1);
  color: #da7700; }
.label--orange-dark.label--dismiss [class^="icon-"]:hover, .label--orange-dark.label--dismiss [class*=" icon-"]:hover {
    color: #da7700; }
.label--orange-light {
  background-color: rgba(255, 215, 167, 0.1);
  color: #ffd7a7; }
.label--orange-light.label--dismiss [class^="icon-"]:hover, .label--orange-light.label--dismiss [class*=" icon-"]:hover {
    color: #da7700; }
.label--yellow {
  background-color: rgba(255, 228, 51, 0.1);
  color: #ffe433; }
.label--yellow.label--dismiss [class^="icon-"]:hover, .label--yellow.label--dismiss [class*=" icon-"]:hover {
    color: #ccb100; }
.label--yellow-dark {
  background-color: rgba(204, 177, 0, 0.1);
  color: #ccb100; }
.label--yellow-dark.label--dismiss [class^="icon-"]:hover, .label--yellow-dark.label--dismiss [class*=" icon-"]:hover {
    color: #ccb100; }
.label--yellow-light {
  background-color: rgba(255, 242, 153, 0.1);
  color: #fff299; }
.label--yellow-light.label--dismiss [class^="icon-"]:hover, .label--yellow-light.label--dismiss [class*=" icon-"]:hover {
    color: #ccb100; }
.label--green {
  background-color: rgba(75, 196, 95, 0.1);
  color: #4BC45F; }
.label--green.label--dismiss [class^="icon-"]:hover, .label--green.label--dismiss [class*=" icon-"]:hover {
    color: #19902d; }
.label--green-dark {
  background-color: rgba(25, 144, 45, 0.1);
  color: #19902d; }
.label--green-dark.label--dismiss [class^="icon-"]:hover, .label--green-dark.label--dismiss [class*=" icon-"]:hover {
    color: #19902d; }
.label--green-light {
  background-color: rgba(138, 235, 154, 0.1);
  color: #8aeb9a; }
.label--green-light.label--dismiss [class^="icon-"]:hover, .label--green-light.label--dismiss [class*=" icon-"]:hover {
    color: #19902d; }
.label--blue {
  background-color: rgba(51, 51, 243, 0.1);
  color: #3333f3; }
.label--blue.label--dismiss [class^="icon-"]:hover, .label--blue.label--dismiss [class*=" icon-"]:hover {
    color: #0000c0; }
.label--blue-dark {
  background-color: rgba(0, 0, 192, 0.1);
  color: #0000c0; }
.label--blue-dark.label--dismiss [class^="icon-"]:hover, .label--blue-dark.label--dismiss [class*=" icon-"]:hover {
    color: #0000c0; }
.label--blue-light {
  background-color: rgba(141, 141, 255, 0.1);
  color: #8d8dff; }
.label--blue-light.label--dismiss [class^="icon-"]:hover, .label--blue-light.label--dismiss [class*=" icon-"]:hover {
    color: #0000c0; }
.label--indigo {
  background-color: rgba(23, 140, 214, 0.1);
  color: #178cd6; }
.label--indigo.label--dismiss [class^="icon-"]:hover, .label--indigo.label--dismiss [class*=" icon-"]:hover {
    color: #005387; }
.label--indigo-dark {
  background-color: rgba(0, 83, 135, 0.1);
  color: #005387; }
.label--indigo-dark.label--dismiss [class^="icon-"]:hover, .label--indigo-dark.label--dismiss [class*=" icon-"]:hover {
    color: #005387; }
.label--indigo-light {
  background-color: rgba(84, 189, 255, 0.1);
  color: #54bdff; }
.label--indigo-light.label--dismiss [class^="icon-"]:hover, .label--indigo-light.label--dismiss [class*=" icon-"]:hover {
    color: #005387; }
.label--violet {
  background-color: rgba(139, 38, 241, 0.1);
  color: #8b26f1; }
.label--violet.label--dismiss [class^="icon-"]:hover, .label--violet.label--dismiss [class*=" icon-"]:hover {
    color: #5800b1; }
.label--violet-dark {
  background-color: rgba(88, 0, 177, 0.1);
  color: #5800b1; }
.label--violet-dark.label--dismiss [class^="icon-"]:hover, .label--violet-dark.label--dismiss [class*=" icon-"]:hover {
    color: #5800b1; }
.label--violet-light {
  background-color: rgba(190, 126, 255, 0.1);
  color: #be7eff; }
.label--violet-light.label--dismiss [class^="icon-"]:hover, .label--violet-light.label--dismiss [class*=" icon-"]:hover {
    color: #5800b1; }
.label--black {
  background-color: rgba(0, 0, 0, 0.1);
  color: black; }
.label--gray-darkest {
  background-color: rgba(51, 51, 51, 0.1);
  color: #333333; }
.label--gray-darkest.label--dismiss [class^="icon-"]:hover, .label--gray-darkest.label--dismiss [class*=" icon-"]:hover {
    color: #6b6b6b; }
.label--gray-dark {
  background-color: rgba(107, 107, 107, 0.1);
  color: #6b6b6b; }
.label--gray-dark.label--dismiss [class^="icon-"]:hover, .label--gray-dark.label--dismiss [class*=" icon-"]:hover {
    color: #6b6b6b; }
.label--gray {
  background-color: rgba(153, 153, 153, 0.1);
  color: #999999; }
.label--gray.label--dismiss [class^="icon-"]:hover, .label--gray.label--dismiss [class*=" icon-"]:hover {
    color: #6b6b6b; }
.label--gray-light {
  background-color: rgba(204, 204, 204, 0.1);
  color: #cccccc; }
.label--gray-light.label--dismiss [class^="icon-"]:hover, .label--gray-light.label--dismiss [class*=" icon-"]:hover {
    color: #6b6b6b; }
.label--gray-lightest {
  background-color: rgba(235, 235, 235, 0.1);
  color: #ebebeb; }
.label--gray-lightest.label--dismiss [class^="icon-"]:hover, .label--gray-lightest.label--dismiss [class*=" icon-"]:hover {
    color: #6b6b6b; }
.label--white {
  background-color: rgba(255, 255, 255, 0.1);
  color: white; }
/** Dot and pill colors */
.label--dot.label--primary,
.label--pill.label--primary {
  background-color: #ffa941; }
.label--dot.label--primary-dark,
.label--pill.label--primary-dark {
  background-color: #da7700; }
.label--dot.label--primary-light,
.label--pill.label--primary-light {
  background-color: #ffd7a7; }
.label--dot.label--secondary,
.label--pill.label--secondary {
  background-color: #4648d2; }
.label--dot.label--secondary-dark,
.label--pill.label--secondary-dark {
  background-color: #1113a1; }
.label--dot.label--secondary-light,
.label--pill.label--secondary-light {
  background-color: #8b8df3; }
.label--dot.label--red,
.label--pill.label--red {
  background-color: #FA3D49; }
.label--dot.label--red-dark,
.label--pill.label--red-dark {
  background-color: #d1000d; }
.label--dot.label--red-light,
.label--pill.label--red-light {
  background-color: #ff9ea4; }
.label--dot.label--orange,
.label--pill.label--orange {
  background-color: #ffa941; }
.label--dot.label--orange-dark,
.label--pill.label--orange-dark {
  background-color: #da7700; }
.label--dot.label--orange-light,
.label--pill.label--orange-light {
  background-color: #ffd7a7; }
.label--dot.label--yellow,
.label--pill.label--yellow {
  background-color: #ffe433; }
.label--dot.label--yellow-dark,
.label--pill.label--yellow-dark {
  background-color: #ccb100; }
.label--dot.label--yellow-light,
.label--pill.label--yellow-light {
  background-color: #fff299; }
.label--dot.label--green,
.label--pill.label--green {
  background-color: #4BC45F; }
.label--dot.label--green-dark,
.label--pill.label--green-dark {
  background-color: #19902d; }
.label--dot.label--green-light,
.label--pill.label--green-light {
  background-color: #8aeb9a; }
.label--dot.label--blue,
.label--pill.label--blue {
  background-color: #3333f3; }
.label--dot.label--blue-dark,
.label--pill.label--blue-dark {
  background-color: #0000c0; }
.label--dot.label--blue-light,
.label--pill.label--blue-light {
  background-color: #8d8dff; }
.label--dot.label--indigo,
.label--pill.label--indigo {
  background-color: #178cd6; }
.label--dot.label--indigo-dark,
.label--pill.label--indigo-dark {
  background-color: #005387; }
.label--dot.label--indigo-light,
.label--pill.label--indigo-light {
  background-color: #54bdff; }
.label--dot.label--violet,
.label--pill.label--violet {
  background-color: #8b26f1; }
.label--dot.label--violet-dark,
.label--pill.label--violet-dark {
  background-color: #5800b1; }
.label--dot.label--violet-light,
.label--pill.label--violet-light {
  background-color: #be7eff; }
.label--dot.label--black,
.label--pill.label--black {
  background-color: black; }
.label--dot.label--gray-darkest,
.label--pill.label--gray-darkest {
  background-color: #333333; }
.label--dot.label--gray-dark,
.label--pill.label--gray-dark {
  background-color: #6b6b6b; }
.label--dot.label--gray,
.label--pill.label--gray {
  background-color: #999999; }
.label--dot.label--gray-light,
.label--pill.label--gray-light {
  background-color: #cccccc; }
.label--dot.label--gray-lightest,
.label--pill.label--gray-lightest {
  background-color: #ebebeb; }
.label--dot.label--white,
.label--pill.label--white {
  background-color: white; }
/**
 * List
 */
ul, ol {
  padding-left: 24px;
  margin: 0; }
.list {
  padding: 0; }
/** Item
--------------------------------------------------*/
.list__item, .list > li {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  padding-left: 24px;
  padding-right: 24px;
  /** Disabled state */ }
.list__item.is-disabled, .list > li.is-disabled {
    background-color: #f7f7f7; }
.list__item .list__item-title, .list__item h1, .list__item h2, .list__item h3, .list__item h4, .list__item h5, .list__item h6, .list > li .list__item-title, .list > li h1, .list > li h2, .list > li h3, .list > li h4, .list > li h5, .list > li h6 {
    margin-top: 0;
    font-size: inherit; }
.list__item .list__item-description, .list__item p, .list > li .list__item-description, .list > li p {
    margin-bottom: 0;
    color: #cccccc;
    font-size: 90%;
    /** set description text to 90% size relative to style's font size */ }
/** Action
--------------------------------------------------*/
.list__action {
  margin-left: auto; }
/** Styles
--------------------------------------------------*/
/** Divide */
.list--divide .list__item, .list--divide > li {
  border-top: 1px solid #ebebeb; }
.list--divide .list__item:first-child, .list--divide > li:first-child {
    border-top: none; }
/** Large */
.list--large {
  font-size: 18px; }
.list--large .list__item, .list--large > li {
    padding-top: 24px;
    padding-bottom: 24px; }
.list--large .list__item-title, .list--large h1, .list--large h2, .list--large h3, .list--large h4, .list--large h5, .list--large h6 {
    margin-bottom: 6px; }
.list--large .list__item-description, .list--large p {
    font-size: 16px; }
/** Medium */
.list--medium {
  font-size: 16px; }
.list--medium .list__item, .list--medium > li {
    padding-top: 12px;
    padding-bottom: 12px; }
.list--medium .list__item-title, .list--medium h1, .list--medium h2, .list--medium h3, .list--medium h4, .list--medium h5, .list--medium h6 {
    margin-bottom: 3px; }
.list--medium .list__item-description, .list--medium p {
    font-size: 14px; }
/** Small */
.list--small {
  font-size: 14px; }
.list--small .list__item, .list--small > li {
    padding-top: 6px;
    padding-bottom: 6px; }
.list--small .list__item-title, .list--small h1, .list--small h2, .list--small h3, .list--small h4, .list--small h5, .list--small h6 {
    margin-bottom: 0; }
.list--small .list__item-description, .list--small p {
    font-size: 12px; }
.list--small [class^="icon-"],
  .list--small [class*=" icon-"] {
    font-size: 18px; }
/** Without gutter */
.list--no-gutter {
  margin: -24px; }
/** Hover */
.list--hover .list__item:hover, .list--hover > li:hover {
  background-color: #fcfcfc; }
/** Pointer */
.list--pointer .list__item:hover, .list--pointer > li:hover {
  cursor: pointer; }
/**
 * Message
 */
.message {
  font-size: 14px;
  padding: 12px;
  border-radius: 3px;
  color: #999999;
  background-color: rgba(153, 153, 153, 0.05);
  font-style: italic;
  margin-bottom: 12px;
  display: flex;
  align-items: center; }
.message p {
    margin-bottom: 12px; }
.message p:last-of-type {
      margin-bottom: 0; }
.message a {
    font-weight: 600;
    text-decoration: underline;
    color: #6b6b6b; }
.message a:hover {
      text-decoration: none; }
.message .avatar {
    margin-right: 12px;
    display: inline-block;
    vertical-align: middle;
    color: currentColor;
    border-color: currentColor; }
.message + .message {
    margin-top: 12px; }
.message__body h1, .message__body h2, .message__body h3, .message__body h4, .message__body h5, .message__body h6 {
  margin: 0;
  font-weight: 600; }
.message__action {
  margin-left: auto; }
/** Colors
--------------------------------------------------*/
.message--color-primary {
  background-color: rgba(255, 169, 65, 0.1);
  color: #ffa941;
  border-width: 0;
  /** Interactive style */ }
.message--color-primary a {
    color: #ffa941; }
.message--color-primary .avatar {
    border: 1px solid #ffa941;
    color: #ffa941; }
.message--color-primary.message--interactive {
    background-color: #ffa941;
    color: white; }
.message--color-secondary {
  background-color: rgba(70, 72, 210, 0.1);
  color: #4648d2;
  border-width: 0;
  /** Interactive style */ }
.message--color-secondary a {
    color: #4648d2; }
.message--color-secondary .avatar {
    border: 1px solid #4648d2;
    color: #4648d2; }
.message--color-secondary.message--interactive {
    background-color: #4648d2;
    color: white; }
.message--color-red {
  background-color: rgba(250, 61, 73, 0.1);
  color: #FA3D49;
  border-width: 0;
  /** Interactive style */ }
.message--color-red a {
    color: #FA3D49; }
.message--color-red .avatar {
    border: 1px solid #FA3D49;
    color: #FA3D49; }
.message--color-red.message--interactive {
    background-color: #FA3D49;
    color: white; }
.message--color-orange {
  background-color: rgba(255, 169, 65, 0.1);
  color: #ffa941;
  border-width: 0;
  /** Interactive style */ }
.message--color-orange a {
    color: #ffa941; }
.message--color-orange .avatar {
    border: 1px solid #ffa941;
    color: #ffa941; }
.message--color-orange.message--interactive {
    background-color: #ffa941;
    color: white; }
.message--color-yellow {
  background-color: rgba(255, 228, 51, 0.1);
  color: #ffe433;
  border-width: 0;
  /** Interactive style */ }
.message--color-yellow a {
    color: #ffe433; }
.message--color-yellow .avatar {
    border: 1px solid #ffe433;
    color: #ffe433; }
.message--color-yellow.message--interactive {
    background-color: #ffe433;
    color: white; }
.message--color-green {
  background-color: rgba(75, 196, 95, 0.1);
  color: #4BC45F;
  border-width: 0;
  /** Interactive style */ }
.message--color-green a {
    color: #4BC45F; }
.message--color-green .avatar {
    border: 1px solid #4BC45F;
    color: #4BC45F; }
.message--color-green.message--interactive {
    background-color: #4BC45F;
    color: white; }
.message--color-blue {
  background-color: rgba(51, 51, 243, 0.1);
  color: #3333f3;
  border-width: 0;
  /** Interactive style */ }
.message--color-blue a {
    color: #3333f3; }
.message--color-blue .avatar {
    border: 1px solid #3333f3;
    color: #3333f3; }
.message--color-blue.message--interactive {
    background-color: #3333f3;
    color: white; }
.message--color-indigo {
  background-color: rgba(23, 140, 214, 0.1);
  color: #178cd6;
  border-width: 0;
  /** Interactive style */ }
.message--color-indigo a {
    color: #178cd6; }
.message--color-indigo .avatar {
    border: 1px solid #178cd6;
    color: #178cd6; }
.message--color-indigo.message--interactive {
    background-color: #178cd6;
    color: white; }
.message--color-violet {
  background-color: rgba(139, 38, 241, 0.1);
  color: #8b26f1;
  border-width: 0;
  /** Interactive style */ }
.message--color-violet a {
    color: #8b26f1; }
.message--color-violet .avatar {
    border: 1px solid #8b26f1;
    color: #8b26f1; }
.message--color-violet.message--interactive {
    background-color: #8b26f1;
    color: white; }
.message--color-black {
  background-color: rgba(0, 0, 0, 0.1);
  color: black;
  border-width: 0;
  /** Interactive style */ }
.message--color-black a {
    color: black; }
.message--color-black .avatar {
    border: 1px solid black;
    color: black; }
.message--color-black.message--interactive {
    background-color: black;
    color: white; }
.message--color-gray {
  background-color: rgba(153, 153, 153, 0.1);
  color: #999999;
  border-width: 0;
  /** Interactive style */ }
.message--color-gray a {
    color: #999999; }
.message--color-gray .avatar {
    border: 1px solid #999999;
    color: #999999; }
.message--color-gray.message--interactive {
    background-color: #999999;
    color: white; }
.message--color-white {
  color: #6b6b6b;
  background-color: white; }
.message--color-white a {
    color: #6b6b6b; }
.message--color-white .avatar {
    border: 1px solid #6b6b6b;
    color: #6b6b6b; }
/** Styles
--------------------------------------------------*/
/** Full width */
.message--full {
  border-radius: 0; }
/** With a shadow */
.message--shadow {
  box-shadow: 8px 14px 38px rgba(0, 0, 0, 0.04), 0px 3px 5px rgba(0, 0, 0, 0.04); }
/** Interactive */
.message--interactive {
  min-height: 80px;
  padding: 12px 12px 12px 120px;
  background-image: url("https://fomo.com/static/images/app/onboarding/onboarding-avatar.svg");
  background-repeat: no-repeat;
  background-size: auto 100%;
  border-radius: 6px; }
.message--interactive a {
    font-weight: 400;
    text-decoration: none;
    color: white; }
.message--interactive a:hover {
      text-decoration: underline; }
/**
 * Callout
 */
.callout {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  padding: 12px;
  border-radius: 3px;
  margin-bottom: 12px;
  transition: 0.2s ease-in-out;
  background-color: #ebebeb;
  color: black;
  text-align: center;
  font-size: 14px;
  cursor: default; }
.callout p {
    margin-bottom: 12px; }
.callout p:last-of-type {
      margin-bottom: auto; }
.callout a {
    color: black;
    font-weight: 600;
    text-decoration: underline; }
.callout a:hover {
      text-decoration: none; }
/** Colors
--------------------------------------------------*/
.callout--color-primary {
  background-color: #ffa941;
  color: white;
  border-width: 0; }
.callout--color-primary a {
    color: #ffa941; }
.callout--color-primary.callout--action:hover {
    background-color: #ffb55b; }
.callout--color-primary-dark {
  background-color: #da7700;
  color: white;
  border-width: 0; }
.callout--color-primary-dark a {
    color: #da7700; }
.callout--color-primary-dark.callout--action:hover {
    background-color: #f48500; }
.callout--color-primary-light {
  background-color: #ffd7a7;
  color: white;
  border-width: 0; }
.callout--color-primary-light a {
    color: #ffd7a7; }
.callout--color-primary-light.callout--action:hover {
    background-color: #ffe3c1; }
.callout--color-secondary {
  background-color: #4648d2;
  color: white;
  border-width: 0; }
.callout--color-secondary a {
    color: #4648d2; }
.callout--color-secondary.callout--action:hover {
    background-color: #5b5cd7; }
.callout--color-secondary-dark {
  background-color: #1113a1;
  color: white;
  border-width: 0; }
.callout--color-secondary-dark a {
    color: #1113a1; }
.callout--color-secondary-dark.callout--action:hover {
    background-color: #1316b8; }
.callout--color-secondary-light {
  background-color: #8b8df3;
  color: white;
  border-width: 0; }
.callout--color-secondary-light a {
    color: #8b8df3; }
.callout--color-secondary-light.callout--action:hover {
    background-color: #a2a3f5; }
.callout--color-red {
  background-color: #FA3D49;
  color: white;
  border-width: 0; }
.callout--color-red a {
    color: #FA3D49; }
.callout--color-red.callout--action:hover {
    background-color: #fb5660; }
.callout--color-red-dark {
  background-color: #d1000d;
  color: white;
  border-width: 0; }
.callout--color-red-dark a {
    color: #d1000d; }
.callout--color-red-dark.callout--action:hover {
    background-color: #eb000f; }
.callout--color-red-light {
  background-color: #ff9ea4;
  color: white;
  border-width: 0; }
.callout--color-red-light a {
    color: #ff9ea4; }
.callout--color-red-light.callout--action:hover {
    background-color: #ffb8bc; }
.callout--color-orange {
  background-color: #ffa941;
  color: white;
  border-width: 0; }
.callout--color-orange a {
    color: #ffa941; }
.callout--color-orange.callout--action:hover {
    background-color: #ffb55b; }
.callout--color-orange-dark {
  background-color: #da7700;
  color: white;
  border-width: 0; }
.callout--color-orange-dark a {
    color: #da7700; }
.callout--color-orange-dark.callout--action:hover {
    background-color: #f48500; }
.callout--color-orange-light {
  background-color: #ffd7a7;
  color: white;
  border-width: 0; }
.callout--color-orange-light a {
    color: #ffd7a7; }
.callout--color-orange-light.callout--action:hover {
    background-color: #ffe3c1; }
.callout--color-yellow {
  background-color: #ffe433;
  color: white;
  border-width: 0; }
.callout--color-yellow a {
    color: #ffe433; }
.callout--color-yellow.callout--action:hover {
    background-color: #ffe74d; }
.callout--color-yellow-dark {
  background-color: #ccb100;
  color: white;
  border-width: 0; }
.callout--color-yellow-dark a {
    color: #ccb100; }
.callout--color-yellow-dark.callout--action:hover {
    background-color: #e6c700; }
.callout--color-yellow-light {
  background-color: #fff299;
  color: white;
  border-width: 0; }
.callout--color-yellow-light a {
    color: #fff299; }
.callout--color-yellow-light.callout--action:hover {
    background-color: #fff5b3; }
.callout--color-green {
  background-color: #4BC45F;
  color: white;
  border-width: 0; }
.callout--color-green a {
    color: #4BC45F; }
.callout--color-green.callout--action:hover {
    background-color: #5eca70; }
.callout--color-green-dark {
  background-color: #19902d;
  color: white;
  border-width: 0; }
.callout--color-green-dark a {
    color: #19902d; }
.callout--color-green-dark.callout--action:hover {
    background-color: #1da633; }
.callout--color-green-light {
  background-color: #8aeb9a;
  color: white;
  border-width: 0; }
.callout--color-green-light a {
    color: #8aeb9a; }
.callout--color-green-light.callout--action:hover {
    background-color: #a0efad; }
.callout--color-blue {
  background-color: #3333f3;
  color: white;
  border-width: 0; }
.callout--color-blue a {
    color: #3333f3; }
.callout--color-blue.callout--action:hover {
    background-color: #4b4bf4; }
.callout--color-blue-dark {
  background-color: #0000c0;
  color: white;
  border-width: 0; }
.callout--color-blue-dark a {
    color: #0000c0; }
.callout--color-blue-dark.callout--action:hover {
    background-color: #0000da; }
.callout--color-blue-light {
  background-color: #8d8dff;
  color: white;
  border-width: 0; }
.callout--color-blue-light a {
    color: #8d8dff; }
.callout--color-blue-light.callout--action:hover {
    background-color: #a7a7ff; }
.callout--color-indigo {
  background-color: #178cd6;
  color: white;
  border-width: 0; }
.callout--color-indigo a {
    color: #178cd6; }
.callout--color-indigo.callout--action:hover {
    background-color: #209ae7; }
.callout--color-indigo-dark {
  background-color: #005387;
  color: white;
  border-width: 0; }
.callout--color-indigo-dark a {
    color: #005387; }
.callout--color-indigo-dark.callout--action:hover {
    background-color: #0062a1; }
.callout--color-indigo-light {
  background-color: #54bdff;
  color: white;
  border-width: 0; }
.callout--color-indigo-light a {
    color: #54bdff; }
.callout--color-indigo-light.callout--action:hover {
    background-color: #6ec7ff; }
.callout--color-violet {
  background-color: #8b26f1;
  color: white;
  border-width: 0; }
.callout--color-violet a {
    color: #8b26f1; }
.callout--color-violet.callout--action:hover {
    background-color: #983ef3; }
.callout--color-violet-dark {
  background-color: #5800b1;
  color: white;
  border-width: 0; }
.callout--color-violet-dark a {
    color: #5800b1; }
.callout--color-violet-dark.callout--action:hover {
    background-color: #6500cb; }
.callout--color-violet-light {
  background-color: #be7eff;
  color: white;
  border-width: 0; }
.callout--color-violet-light a {
    color: #be7eff; }
.callout--color-violet-light.callout--action:hover {
    background-color: #cb98ff; }
.callout--color-black {
  background-color: black;
  color: white;
  border-width: 0; }
.callout--color-black a {
    color: black; }
.callout--color-black.callout--action:hover {
    background-color: #0d0d0d; }
.callout--color-gray-darkest {
  background-color: #333333;
  color: white;
  border-width: 0; }
.callout--color-gray-darkest a {
    color: #333333; }
.callout--color-gray-darkest.callout--action:hover {
    background-color: #404040; }
.callout--color-gray-dark {
  background-color: #6b6b6b;
  color: white;
  border-width: 0; }
.callout--color-gray-dark a {
    color: #6b6b6b; }
.callout--color-gray-dark.callout--action:hover {
    background-color: #787878; }
.callout--color-gray {
  background-color: #999999;
  color: white;
  border-width: 0; }
.callout--color-gray a {
    color: #999999; }
.callout--color-gray.callout--action:hover {
    background-color: #a6a6a6; }
.callout--color-gray-light {
  background-color: #cccccc;
  color: white;
  border-width: 0; }
.callout--color-gray-light a {
    color: #cccccc; }
.callout--color-gray-light.callout--action:hover {
    background-color: #d9d9d9; }
.callout--color-gray-lightest {
  background-color: #ebebeb;
  color: white;
  border-width: 0; }
.callout--color-gray-lightest a {
    color: #ebebeb; }
.callout--color-gray-lightest.callout--action:hover {
    background-color: #f7f7f7; }
.callout--color-white {
  color: #6b6b6b;
  background-color: white; }
.callout--color-white.callout--action:hover {
    background-color: #ebebeb; }
.callout--color-white a {
    color: #6b6b6b; }
/** Styles
--------------------------------------------------*/
/** With a shadow */
.callout--shadow {
  box-shadow: 8px 14px 38px rgba(0, 0, 0, 0.04), 0px 3px 5px rgba(0, 0, 0, 0.04); }
/** With an image */
.callout__image {
  padding: 12px 0; }
/* Hover action */
.callout--action:hover {
  cursor: pointer;
  background-color: #d1d1d1; }
/**
 * Navigation
 */
.nav {
  /** Menu
  --------------------------------------------------*/
  /** Item
  --------------------------------------------------*/
  /** Link
  --------------------------------------------------*/
  /** Icon
  --------------------------------------------------*/ }
.nav > ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    padding-bottom: 12px;
    display: flex;
    user-select: none; }
.nav > ul > li:first-child {
    margin-left: -12px; }
.nav > ul > li > a {
    font-size: 14px;
    display: flex;
    align-items: center;
    position: relative;
    padding: 12px;
    color: rgba(0, 0, 0, 0.3);
    height: 40px;
    /** Active state */
    /** Disabled state */ }
.nav > ul > li > a:hover {
      color: black;
      text-decoration: none; }
.nav > ul > li > a:hover::before {
        opacity: 1;
        cursor: pointer; }
.nav > ul > li > a.is-active, .nav > ul > li > a.is-exact-active.is-active {
      color: black; }
.nav > ul > li > a.is-active::after, .nav > ul > li > a.is-exact-active.is-active::after {
        content: " ";
        position: absolute;
        border-bottom: 1px solid;
        border-bottom-color: black;
        z-index: 1;
        width: calc(100% - 24px);
        left: 12px;
        bottom: -12px; }
.nav > ul > li > a.is-disabled {
      cursor: default;
      pointer-events: none;
      opacity: 0.5; }
.nav > ul > li > a::before {
      content: '';
      position: absolute;
      background-color: rgba(0, 0, 0, 0.03);
      pointer-events: none;
      width: calc(100% - 24px / 4);
      height: calc(100% - 24px / 4);
      left: 3px;
      top: 3px;
      border-radius: 3px;
      opacity: 0; }
.nav [class^="icon-"],
  .nav [class*=" icon-"] {
    margin-right: 6px; }
/** Colors
--------------------------------------------------*/
.nav--color-primary ul > li > a {
  color: rgba(255, 169, 65, 0.5); }
.nav--color-primary ul > li > a:hover {
    color: #ffa941; }
.nav--color-primary ul > li > a::after {
    border-bottom-color: #ffa941; }
.nav--color-primary ul > li > a::before {
    background-color: rgba(255, 169, 65, 0.05); }
.nav--color-primary ul > li > a.is-active, .nav--color-primary ul > li > a.is-exact-active.is-active {
    color: #ffa941; }
.nav--color-primary ul > li > a.is-active::after, .nav--color-primary ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #ffa941; }
.nav--color-secondary ul > li > a {
  color: rgba(70, 72, 210, 0.5); }
.nav--color-secondary ul > li > a:hover {
    color: #4648d2; }
.nav--color-secondary ul > li > a::after {
    border-bottom-color: #4648d2; }
.nav--color-secondary ul > li > a::before {
    background-color: rgba(70, 72, 210, 0.05); }
.nav--color-secondary ul > li > a.is-active, .nav--color-secondary ul > li > a.is-exact-active.is-active {
    color: #4648d2; }
.nav--color-secondary ul > li > a.is-active::after, .nav--color-secondary ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #4648d2; }
.nav--color-red ul > li > a {
  color: rgba(250, 61, 73, 0.5); }
.nav--color-red ul > li > a:hover {
    color: #fa3d49; }
.nav--color-red ul > li > a::after {
    border-bottom-color: #FA3D49; }
.nav--color-red ul > li > a::before {
    background-color: rgba(250, 61, 73, 0.05); }
.nav--color-red ul > li > a.is-active, .nav--color-red ul > li > a.is-exact-active.is-active {
    color: #fa3d49; }
.nav--color-red ul > li > a.is-active::after, .nav--color-red ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #FA3D49; }
.nav--color-orange ul > li > a {
  color: rgba(255, 169, 65, 0.5); }
.nav--color-orange ul > li > a:hover {
    color: #ffa941; }
.nav--color-orange ul > li > a::after {
    border-bottom-color: #ffa941; }
.nav--color-orange ul > li > a::before {
    background-color: rgba(255, 169, 65, 0.05); }
.nav--color-orange ul > li > a.is-active, .nav--color-orange ul > li > a.is-exact-active.is-active {
    color: #ffa941; }
.nav--color-orange ul > li > a.is-active::after, .nav--color-orange ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #ffa941; }
.nav--color-yellow ul > li > a {
  color: rgba(255, 228, 51, 0.5); }
.nav--color-yellow ul > li > a:hover {
    color: #ffe433; }
.nav--color-yellow ul > li > a::after {
    border-bottom-color: #ffe433; }
.nav--color-yellow ul > li > a::before {
    background-color: rgba(255, 228, 51, 0.05); }
.nav--color-yellow ul > li > a.is-active, .nav--color-yellow ul > li > a.is-exact-active.is-active {
    color: #ffe433; }
.nav--color-yellow ul > li > a.is-active::after, .nav--color-yellow ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #ffe433; }
.nav--color-green ul > li > a {
  color: rgba(75, 196, 95, 0.5); }
.nav--color-green ul > li > a:hover {
    color: #4bc45f; }
.nav--color-green ul > li > a::after {
    border-bottom-color: #4BC45F; }
.nav--color-green ul > li > a::before {
    background-color: rgba(75, 196, 95, 0.05); }
.nav--color-green ul > li > a.is-active, .nav--color-green ul > li > a.is-exact-active.is-active {
    color: #4bc45f; }
.nav--color-green ul > li > a.is-active::after, .nav--color-green ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #4BC45F; }
.nav--color-blue ul > li > a {
  color: rgba(51, 51, 243, 0.5); }
.nav--color-blue ul > li > a:hover {
    color: #3333f3; }
.nav--color-blue ul > li > a::after {
    border-bottom-color: #3333f3; }
.nav--color-blue ul > li > a::before {
    background-color: rgba(51, 51, 243, 0.05); }
.nav--color-blue ul > li > a.is-active, .nav--color-blue ul > li > a.is-exact-active.is-active {
    color: #3333f3; }
.nav--color-blue ul > li > a.is-active::after, .nav--color-blue ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #3333f3; }
.nav--color-indigo ul > li > a {
  color: rgba(23, 140, 214, 0.5); }
.nav--color-indigo ul > li > a:hover {
    color: #178cd6; }
.nav--color-indigo ul > li > a::after {
    border-bottom-color: #178cd6; }
.nav--color-indigo ul > li > a::before {
    background-color: rgba(23, 140, 214, 0.05); }
.nav--color-indigo ul > li > a.is-active, .nav--color-indigo ul > li > a.is-exact-active.is-active {
    color: #178cd6; }
.nav--color-indigo ul > li > a.is-active::after, .nav--color-indigo ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #178cd6; }
.nav--color-violet ul > li > a {
  color: rgba(139, 38, 241, 0.5); }
.nav--color-violet ul > li > a:hover {
    color: #8b26f1; }
.nav--color-violet ul > li > a::after {
    border-bottom-color: #8b26f1; }
.nav--color-violet ul > li > a::before {
    background-color: rgba(139, 38, 241, 0.05); }
.nav--color-violet ul > li > a.is-active, .nav--color-violet ul > li > a.is-exact-active.is-active {
    color: #8b26f1; }
.nav--color-violet ul > li > a.is-active::after, .nav--color-violet ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #8b26f1; }
.nav--color-black ul > li > a {
  color: rgba(0, 0, 0, 0.5); }
.nav--color-black ul > li > a:hover {
    color: black; }
.nav--color-black ul > li > a::after {
    border-bottom-color: black; }
.nav--color-black ul > li > a::before {
    background-color: rgba(0, 0, 0, 0.05); }
.nav--color-black ul > li > a.is-active, .nav--color-black ul > li > a.is-exact-active.is-active {
    color: black; }
.nav--color-black ul > li > a.is-active::after, .nav--color-black ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: black; }
.nav--color-gray ul > li > a {
  color: rgba(153, 153, 153, 0.5); }
.nav--color-gray ul > li > a:hover {
    color: #999999; }
.nav--color-gray ul > li > a::after {
    border-bottom-color: #999999; }
.nav--color-gray ul > li > a::before {
    background-color: rgba(153, 153, 153, 0.05); }
.nav--color-gray ul > li > a.is-active, .nav--color-gray ul > li > a.is-exact-active.is-active {
    color: #999999; }
.nav--color-gray ul > li > a.is-active::after, .nav--color-gray ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: #999999; }
.nav--color-white ul > li > a {
  color: rgba(255, 255, 255, 0.5); }
.nav--color-white ul > li > a:hover {
    color: white; }
.nav--color-white ul > li > a::after {
    border-bottom-color: white; }
.nav--color-white ul > li > a::before {
    background-color: rgba(255, 255, 255, 0.05); }
.nav--color-white ul > li > a.is-active, .nav--color-white ul > li > a.is-exact-active.is-active {
    color: white; }
.nav--color-white ul > li > a.is-active::after, .nav--color-white ul > li > a.is-exact-active.is-active::after {
      border-bottom-color: white; }
/** Alignments
--------------------------------------------------*/
.nav--center > ul {
  justify-content: center; }
.nav--center > ul > li:first-child {
  margin-left: 0; }
.nav--right > ul {
  justify-content: flex-end; }
.nav--right > ul > li:first-child {
  margin-left: 0; }
.nav--right > ul > li:last-child {
  margin-right: -12px; }
/**
 * Progress bar
 */
.progress-bar {
  position: relative;
  line-height: 1; }
.progress-bar .progress-bar__text {
    font-size: 14px;
    color: inherit;
    line-height: 1; }
.progress-bar__line {
  display: inline-block;
  vertical-align: middle;
  width: 100%;
  box-sizing: border-box; }
.progress-bar__line .progress-bar__line-outer {
    height: 6px;
    border-radius: 9px;
    overflow: hidden;
    position: relative;
    vertical-align: middle; }
.progress-bar__line .progress-bar__line-outer::before {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: currentColor;
      opacity: 0.12;
      content: ''; }
.progress-bar__line .progress-bar__line-inner {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    background-color: #4648d2;
    line-height: 1;
    white-space: nowrap;
    display: flex;
    align-items: center;
    justify-content: flex-end; }
.progress-bar__line .progress-bar__line-innerText {
    display: inline-block;
    vertical-align: middle;
    color: white;
    font-size: 12px;
    font-weight: 500;
    margin: 0 5px; }
.progress-bar__line .progress-bar__line-innerText.progress-bar__line-innerText--below {
      transform: translateX(calc(100% + 10px));
      color: currentColor; }
.progress-bar__line .progress-bar__line-innerText .progress-bar__custom-text {
      color: white; }
.progress-bar__line + .progress-bar__text {
    color: #cccccc !important; }
.progress-bar__custom-text {
  color: #cccccc; }
@keyframes progress {
  0% {
    background-position: 0 0; }
  100% {
    background-position: 32px 0; } }
/** Styles
--------------------------------------------------*/
/** Line */
.progress-bar--line .progress-bar__text {
  margin-top: 6px; }
/** Circular */
.progress-bar--circle {
  display: inline-block; }
.progress-bar--circle .progress-bar__circle-track {
    stroke: currentColor;
    opacity: 0.12; }
.progress-bar--circle .progress-bar__text {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    text-align: center;
    margin: 0;
    transform: translate(0, -50%); }
.progress-bar--circle .progress-bar__text i {
      vertical-align: middle;
      display: inline-block; }
.progress-bar--circle .progress-bar__custom-text {
    display: block; }
.progress-bar--without-text .progress-bar__text {
  display: none; }
.progress-bar--without-text .progress-bar__line {
  padding-right: 0;
  margin-right: 0;
  display: block; }
.progress-bar--text-inside .progress-bar__line {
  padding-right: 0;
  margin-right: 0; }
/** States
--------------------------------------------------*/
/** Disabled */
.progress-bar.is-disabled {
  opacity: 0.5;
  /** Line */
  /** Circle */ }
.progress-bar.is-disabled .progress-bar__line .progress-bar__line-outer::before {
    background-color: #999999; }
.progress-bar.is-disabled .progress-bar__line .progress-bar__line-inner {
    background-color: #cccccc !important; }
.progress-bar.is-disabled .progress-bar__circle-track {
    stroke: #999999; }
.progress-bar.is-disabled .progress-bar__circle-path {
    stroke: #cccccc; }
.progress-bar.is-disabled .progress-bar__text {
    color: #cccccc; }
/**
 * Radio
 */
/** Radio group
--------------------------------------------------*/
.radio-group {
  height: 64px;
  padding: 12px;
  border: 1px solid #ebebeb;
  border-radius: 3px; }
/** Radio group label
--------------------------------------------------*/
.radio-group__label {
  margin-bottom: 4px;
  font-size: 12px;
  line-height: 1;
  color: black; }
/** Radio
--------------------------------------------------*/
.radio {
  display: inline-block;
  position: relative;
  font-size: 16px;
  /** Radio Input
  --------------------------------------------------*/
  /** Radio label
  --------------------------------------------------*/ }
.radio + .radio {
    margin-left: 24px; }
.radio > input {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden; }
.radio > label {
    font-size: 16px;
    display: flex;
    align-items: center;
    min-height: 18px;
    padding-left: 24px;
    position: relative;
    line-height: 1;
    cursor: pointer;
    color: #4648d2;
    opacity: 0.5; }
.radio > label::before {
      height: 18px;
      width: 18px;
      border: 1px solid #4648d2;
      position: absolute;
      top: 0px;
      left: 0px;
      background-color: transparent;
      border-radius: 100%;
      content: ''; }
.radio > label::after {
      width: 12px;
      height: 12px;
      top: 3px;
      left: 3px;
      position: absolute;
      background-color: #4648d2;
      border-radius: 100%;
      content: '';
      opacity: 0;
      visibility: hidden; }
/** States
--------------------------------------------------*/
.radio {
  /** Checked state */
  /** Disabled and checked */ }
.radio > input:checked + label {
    opacity: 1; }
.radio > input:checked + label::after {
      opacity: 1;
      visibility: visible;
      background-color: #4648d2; }
.radio > input:disabled + label {
    pointer-events: none;
    color: #6b6b6b; }
.radio > input:disabled + label::before {
      border-color: #6b6b6b; }
.radio > input:disabled + label::after {
      background-color: #6b6b6b; }
.radio > input:disabled:checked + label::after {
    background-color: #6b6b6b; }
/**
 * Table
 */
.table {
  width: 100%;
  margin: 12px 0;
  font-size: 14px;
  color: #999999;
  text-align: left;
  border-radius: 3px;
  border-collapse: separate;
  border-spacing: 0; }
.table:first-child {
    margin-top: 0; }
.table:last-child {
    margin-bottom: 0px; }
.table th {
    font-weight: 400;
    color: #cccccc;
    padding: 12px; }
@media only screen and (max-width: 767px) {
      .table th {
        width: 100%;
        display: block; } }
.table th:first-child {
    padding-left: 24px; }
.table td {
    border-top: 1px solid #ebebeb;
    padding: 24px 12px; }
@media only screen and (max-width: 767px) {
      .table td {
        width: 100%;
        display: block; } }
.table td:first-child {
    font-size: 21px;
    color: black;
    padding-left: 24px; }
.table td:first-child a {
      color: black; }
.table td.collapsing {
    width: 1px;
    white-space: nowrap; }
/** Styles
--------------------------------------------------*/
/** With a bottom border */
.table--border-bottom {
  border-bottom: 1px solid #ebebeb; }
/** Equal column widths */
.table--fixed {
  table-layout: fixed; }
/** Celled */
.table--celled {
  border: 1px solid #ebebeb; }
.table--celled th {
    border-left: 1px solid #ebebeb;
    background-color: rgba(235, 235, 235, 0.5);
    color: black;
    font-weight: 600; }
.table--celled th:first-child {
      border-left-color: transparent; }
.table--celled td {
    border-left: 1px solid #ebebeb; }
.table--celled td:first-child {
      border-left-color: transparent; }
/** Compact */
.table--compact {
  color: #6b6b6b; }
.table--compact td {
    padding: 12px; }
.table--compact td:first-child {
    padding-left: 24px;
    font-size: 14px; }
/** With heads left of the content */
.table--definition th {
  vertical-align: text-top;
  padding-bottom: 24px;
  padding-top: 24px; }
.table--definition td:nth-child(2) {
  border-left: 0; }
.table--definition td.ignored {
  color: #cccccc; }
/**
 * Toggle
 */
.toggle {
  position: relative; }
.toggle * {
    transition: all 150ms ease-out; }
/** Toggle button
--------------------------------------------------*/
.toggle__button {
  position: relative;
  height: 30px; }
/** Toggle input
--------------------------------------------------*/
.toggle__input {
  height: 100%;
  width: 54px;
  position: absolute;
  z-index: 3;
  opacity: 0;
  visibility: hidden;
  cursor: pointer; }
/** Toggle label
--------------------------------------------------*/
.toggle__label {
  display: inline-flex;
  align-items: center;
  position: relative;
  height: 100%;
  padding-left: 54px;
  line-height: 24px; }
.toggle__label:hover {
    cursor: pointer; }
.toggle__label:before, .toggle__label:after {
    display: block;
    position: absolute; }
.toggle__label:before {
    content: '';
    border-radius: 24px;
    height: 100%;
    width: 54px;
    background-color: #cccccc;
    opacity: 0.5;
    top: 0;
    left: 0;
    transition: all 150ms ease-out; }
.toggle__label:after {
    content: '';
    width: 24px;
    height: 24px;
    top: 3px;
    left: 3px;
    border-radius: 24px;
    background-color: white;
    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);
    transition: all 150ms ease-out; }
/** States
--------------------------------------------------*/
/** Checked */
.toggle.is-checked .toggle__label {
  color: rgba(0, 0, 0, 0.95); }
.toggle.is-checked .toggle__label:before {
  background: #4648d2;
  opacity: 1; }
.toggle.is-checked .toggle__label:after {
  left: 27px; }
/** Disabled */
.toggle.is-disabled {
  cursor: default;
  pointer-events: none; }
.toggle.is-disabled .toggle__label::before {
    opacity: 0.5; }
/** With label */
.toggle--label .toggle__label {
  padding-left: 72px; }
/** Sizes
--------------------------------------------------*/
/** Large */
.toggle--large .toggle__value {
  border: 1px solid transparent;
  padding: 28px 12px 12px;
  font-size: 18px;
  color: #4648d2;
  width: 100%;
  line-height: 22px;
  min-height: 64px; }
.toggle--large .toggle__text {
  position: absolute;
  top: 0;
  left: 0;
  min-height: 64px;
  border: 1px solid #ebebeb;
  border-radius: 3px;
  width: 100%;
  line-height: 1.5;
  padding: 12px 12px 0;
  font-size: 12px;
  color: black; }
.toggle--large .toggle__text:hover {
    cursor: pointer; }
.toggle--large .toggle__button {
  position: absolute;
  right: 12px;
  top: 17px; }
.toggle--large .toggle__label {
  padding-left: 54px; }
.toggle--large.is-disabled {
  cursor: default;
  pointer-events: none; }
.toggle--large.is-disabled .toggle__value {
    color: #999999; }
/** Colors
--------------------------------------------------*/
.toggle--color-primary.is-checked .toggle__label:before {
  background: #ffa941; }
.toggle--color-secondary.is-checked .toggle__label:before {
  background: #4648d2; }
.toggle--color-red.is-checked .toggle__label:before {
  background: #FA3D49; }
.toggle--color-orange.is-checked .toggle__label:before {
  background: #ffa941; }
.toggle--color-yellow.is-checked .toggle__label:before {
  background: #ffe433; }
.toggle--color-green.is-checked .toggle__label:before {
  background: #4BC45F; }
.toggle--color-blue.is-checked .toggle__label:before {
  background: #3333f3; }
.toggle--color-indigo.is-checked .toggle__label:before {
  background: #178cd6; }
.toggle--color-violet.is-checked .toggle__label:before {
  background: #8b26f1; }
.toggle--color-black.is-checked .toggle__label:before {
  background: black; }
.toggle--color-gray.is-checked .toggle__label:before {
  background: #999999; }
.toggle--color-white.is-checked .toggle__label:before {
  background: white; }
/**
 * Button
 */
/** Button
--------------------------------------------------*/
/** Primary */
.button,
a.button {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  vertical-align: middle;
  height: 40px;
  padding: 0 12px;
  border-radius: 3px;
  border: 1px solid transparent;
  font-style: normal;
  font-size: 16px;
  font-weight: 400;
  line-height: 16px;
  text-decoration: none;
  user-select: none;
  color: white;
  background-color: #ffa941;
  transition: all 150ms ease-out;
  /** Disabled state */
  /** Add a margin when buttons are next to each other */
  /** Loading state */
  /** Inverted modifier */ }
.button [class^="icon-"], .button [class*=" icon-"],
  a.button [class^="icon-"],
  a.button [class*=" icon-"] {
    margin-left: 6px; }
.button:hover, .button:focus,
  a.button:hover,
  a.button:focus {
    border-color: transparent;
    background-color: rgba(255, 169, 65, 0.67);
    cursor: pointer;
    outline: none;
    color: white; }
.button[disabled],
  a.button[disabled] {
    opacity: 0.5;
    pointer-events: none; }
.button[disabled]:hover, .button[disabled]:focus,
    a.button[disabled]:hover,
    a.button[disabled]:focus {
      cursor: default; }
.button + .button,
  a.button + .button, .button +
  a.button,
  a.button +
  a.button {
    margin-left: 12px; }
.button.is-loading:before,
  a.button.is-loading:before {
    background-color: #ebebeb; }
.button.is-loading::after,
  a.button.is-loading::after {
    border-color: #999999 transparent #999999 transparent; }
.button.button--inverted,
  a.button.button--inverted {
    color: #ffa941;
    background-color: white; }
.button.button--inverted:hover, .button.button--inverted:focus,
    a.button.button--inverted:hover,
    a.button.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
/** Secondary */
.button--secondary,
a.button--secondary {
  background-color: transparent;
  color: #ffa941;
  border-color: #ffa941; }
.button--secondary:hover, .button--secondary:focus,
  a.button--secondary:hover,
  a.button--secondary:focus {
    border-color: transparent;
    color: white; }
.button--secondary.button--inverted,
  a.button--secondary.button--inverted {
    color: white;
    background-color: transparent;
    border-color: white; }
.button--secondary.button--inverted:hover, .button--secondary.button--inverted:focus,
    a.button--secondary.button--inverted:hover,
    a.button--secondary.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34);
      border-color: transparent; }
/** Variants
--------------------------------------------------*/
/** Basic */
.button--basic,
a.button--basic {
  color: #999999;
  background-color: #ebebeb; }
.button--basic:hover, .button--basic:focus,
  a.button--basic:hover,
  a.button--basic:focus {
    color: white;
    background-color: rgba(255, 169, 65, 0.67); }
.button--basic.button--secondary,
  a.button--basic.button--secondary {
    background-color: transparent;
    border-color: #ebebeb; }
.button--basic.button--secondary:hover, .button--basic.button--secondary:focus,
    a.button--basic.button--secondary:hover,
    a.button--basic.button--secondary:focus {
      background-color: rgba(255, 169, 65, 0.67);
      border-color: transparent;
      color: white; }
/** Colors
--------------------------------------------------*/
.button--color-primary,
a.button--color-primary {
  color: white;
  background-color: #ffa941; }
.button--color-primary:hover, .button--color-primary:focus,
  a.button--color-primary:hover,
  a.button--color-primary:focus {
    background-color: rgba(255, 169, 65, 0.67); }
.button--color-primary.button--inverted,
  a.button--color-primary.button--inverted {
    color: #ffa941;
    background-color: white; }
.button--color-primary.button--inverted:hover, .button--color-primary.button--inverted:focus,
    a.button--color-primary.button--inverted:hover,
    a.button--color-primary.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-primary.button--secondary,
  a.button--color-primary.button--secondary {
    color: #ffa941;
    background-color: transparent;
    border-color: #ffa941; }
.button--color-primary.button--secondary:hover, .button--color-primary.button--secondary:focus,
    a.button--color-primary.button--secondary:hover,
    a.button--color-primary.button--secondary:focus {
      color: white;
      background-color: rgba(255, 169, 65, 0.67);
      border-color: transparent; }
.button--color-primary.button--secondary.button--inverted,
    a.button--color-primary.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-primary.button--secondary.button--inverted:hover, .button--color-primary.button--secondary.button--inverted:focus,
      a.button--color-primary.button--secondary.button--inverted:hover,
      a.button--color-primary.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-secondary,
a.button--color-secondary {
  color: white;
  background-color: #4648d2; }
.button--color-secondary:hover, .button--color-secondary:focus,
  a.button--color-secondary:hover,
  a.button--color-secondary:focus {
    background-color: rgba(70, 72, 210, 0.67); }
.button--color-secondary.button--inverted,
  a.button--color-secondary.button--inverted {
    color: #4648d2;
    background-color: white; }
.button--color-secondary.button--inverted:hover, .button--color-secondary.button--inverted:focus,
    a.button--color-secondary.button--inverted:hover,
    a.button--color-secondary.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-secondary.button--secondary,
  a.button--color-secondary.button--secondary {
    color: #4648d2;
    background-color: transparent;
    border-color: #4648d2; }
.button--color-secondary.button--secondary:hover, .button--color-secondary.button--secondary:focus,
    a.button--color-secondary.button--secondary:hover,
    a.button--color-secondary.button--secondary:focus {
      color: white;
      background-color: rgba(70, 72, 210, 0.67);
      border-color: transparent; }
.button--color-secondary.button--secondary.button--inverted,
    a.button--color-secondary.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-secondary.button--secondary.button--inverted:hover, .button--color-secondary.button--secondary.button--inverted:focus,
      a.button--color-secondary.button--secondary.button--inverted:hover,
      a.button--color-secondary.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-red,
a.button--color-red {
  color: white;
  background-color: #FA3D49; }
.button--color-red:hover, .button--color-red:focus,
  a.button--color-red:hover,
  a.button--color-red:focus {
    background-color: rgba(250, 61, 73, 0.67); }
.button--color-red.button--inverted,
  a.button--color-red.button--inverted {
    color: #FA3D49;
    background-color: white; }
.button--color-red.button--inverted:hover, .button--color-red.button--inverted:focus,
    a.button--color-red.button--inverted:hover,
    a.button--color-red.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-red.button--secondary,
  a.button--color-red.button--secondary {
    color: #FA3D49;
    background-color: transparent;
    border-color: #FA3D49; }
.button--color-red.button--secondary:hover, .button--color-red.button--secondary:focus,
    a.button--color-red.button--secondary:hover,
    a.button--color-red.button--secondary:focus {
      color: white;
      background-color: rgba(250, 61, 73, 0.67);
      border-color: transparent; }
.button--color-red.button--secondary.button--inverted,
    a.button--color-red.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-red.button--secondary.button--inverted:hover, .button--color-red.button--secondary.button--inverted:focus,
      a.button--color-red.button--secondary.button--inverted:hover,
      a.button--color-red.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-orange,
a.button--color-orange {
  color: white;
  background-color: #ffa941; }
.button--color-orange:hover, .button--color-orange:focus,
  a.button--color-orange:hover,
  a.button--color-orange:focus {
    background-color: rgba(255, 169, 65, 0.67); }
.button--color-orange.button--inverted,
  a.button--color-orange.button--inverted {
    color: #ffa941;
    background-color: white; }
.button--color-orange.button--inverted:hover, .button--color-orange.button--inverted:focus,
    a.button--color-orange.button--inverted:hover,
    a.button--color-orange.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-orange.button--secondary,
  a.button--color-orange.button--secondary {
    color: #ffa941;
    background-color: transparent;
    border-color: #ffa941; }
.button--color-orange.button--secondary:hover, .button--color-orange.button--secondary:focus,
    a.button--color-orange.button--secondary:hover,
    a.button--color-orange.button--secondary:focus {
      color: white;
      background-color: rgba(255, 169, 65, 0.67);
      border-color: transparent; }
.button--color-orange.button--secondary.button--inverted,
    a.button--color-orange.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-orange.button--secondary.button--inverted:hover, .button--color-orange.button--secondary.button--inverted:focus,
      a.button--color-orange.button--secondary.button--inverted:hover,
      a.button--color-orange.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-yellow,
a.button--color-yellow {
  color: white;
  background-color: #ffe433; }
.button--color-yellow:hover, .button--color-yellow:focus,
  a.button--color-yellow:hover,
  a.button--color-yellow:focus {
    background-color: rgba(255, 228, 51, 0.67); }
.button--color-yellow.button--inverted,
  a.button--color-yellow.button--inverted {
    color: #ffe433;
    background-color: white; }
.button--color-yellow.button--inverted:hover, .button--color-yellow.button--inverted:focus,
    a.button--color-yellow.button--inverted:hover,
    a.button--color-yellow.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-yellow.button--secondary,
  a.button--color-yellow.button--secondary {
    color: #ffe433;
    background-color: transparent;
    border-color: #ffe433; }
.button--color-yellow.button--secondary:hover, .button--color-yellow.button--secondary:focus,
    a.button--color-yellow.button--secondary:hover,
    a.button--color-yellow.button--secondary:focus {
      color: white;
      background-color: rgba(255, 228, 51, 0.67);
      border-color: transparent; }
.button--color-yellow.button--secondary.button--inverted,
    a.button--color-yellow.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-yellow.button--secondary.button--inverted:hover, .button--color-yellow.button--secondary.button--inverted:focus,
      a.button--color-yellow.button--secondary.button--inverted:hover,
      a.button--color-yellow.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-green,
a.button--color-green {
  color: white;
  background-color: #4BC45F; }
.button--color-green:hover, .button--color-green:focus,
  a.button--color-green:hover,
  a.button--color-green:focus {
    background-color: rgba(75, 196, 95, 0.67); }
.button--color-green.button--inverted,
  a.button--color-green.button--inverted {
    color: #4BC45F;
    background-color: white; }
.button--color-green.button--inverted:hover, .button--color-green.button--inverted:focus,
    a.button--color-green.button--inverted:hover,
    a.button--color-green.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-green.button--secondary,
  a.button--color-green.button--secondary {
    color: #4BC45F;
    background-color: transparent;
    border-color: #4BC45F; }
.button--color-green.button--secondary:hover, .button--color-green.button--secondary:focus,
    a.button--color-green.button--secondary:hover,
    a.button--color-green.button--secondary:focus {
      color: white;
      background-color: rgba(75, 196, 95, 0.67);
      border-color: transparent; }
.button--color-green.button--secondary.button--inverted,
    a.button--color-green.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-green.button--secondary.button--inverted:hover, .button--color-green.button--secondary.button--inverted:focus,
      a.button--color-green.button--secondary.button--inverted:hover,
      a.button--color-green.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-blue,
a.button--color-blue {
  color: white;
  background-color: #3333f3; }
.button--color-blue:hover, .button--color-blue:focus,
  a.button--color-blue:hover,
  a.button--color-blue:focus {
    background-color: rgba(51, 51, 243, 0.67); }
.button--color-blue.button--inverted,
  a.button--color-blue.button--inverted {
    color: #3333f3;
    background-color: white; }
.button--color-blue.button--inverted:hover, .button--color-blue.button--inverted:focus,
    a.button--color-blue.button--inverted:hover,
    a.button--color-blue.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-blue.button--secondary,
  a.button--color-blue.button--secondary {
    color: #3333f3;
    background-color: transparent;
    border-color: #3333f3; }
.button--color-blue.button--secondary:hover, .button--color-blue.button--secondary:focus,
    a.button--color-blue.button--secondary:hover,
    a.button--color-blue.button--secondary:focus {
      color: white;
      background-color: rgba(51, 51, 243, 0.67);
      border-color: transparent; }
.button--color-blue.button--secondary.button--inverted,
    a.button--color-blue.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-blue.button--secondary.button--inverted:hover, .button--color-blue.button--secondary.button--inverted:focus,
      a.button--color-blue.button--secondary.button--inverted:hover,
      a.button--color-blue.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-indigo,
a.button--color-indigo {
  color: white;
  background-color: #178cd6; }
.button--color-indigo:hover, .button--color-indigo:focus,
  a.button--color-indigo:hover,
  a.button--color-indigo:focus {
    background-color: rgba(23, 140, 214, 0.67); }
.button--color-indigo.button--inverted,
  a.button--color-indigo.button--inverted {
    color: #178cd6;
    background-color: white; }
.button--color-indigo.button--inverted:hover, .button--color-indigo.button--inverted:focus,
    a.button--color-indigo.button--inverted:hover,
    a.button--color-indigo.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-indigo.button--secondary,
  a.button--color-indigo.button--secondary {
    color: #178cd6;
    background-color: transparent;
    border-color: #178cd6; }
.button--color-indigo.button--secondary:hover, .button--color-indigo.button--secondary:focus,
    a.button--color-indigo.button--secondary:hover,
    a.button--color-indigo.button--secondary:focus {
      color: white;
      background-color: rgba(23, 140, 214, 0.67);
      border-color: transparent; }
.button--color-indigo.button--secondary.button--inverted,
    a.button--color-indigo.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-indigo.button--secondary.button--inverted:hover, .button--color-indigo.button--secondary.button--inverted:focus,
      a.button--color-indigo.button--secondary.button--inverted:hover,
      a.button--color-indigo.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-violet,
a.button--color-violet {
  color: white;
  background-color: #8b26f1; }
.button--color-violet:hover, .button--color-violet:focus,
  a.button--color-violet:hover,
  a.button--color-violet:focus {
    background-color: rgba(139, 38, 241, 0.67); }
.button--color-violet.button--inverted,
  a.button--color-violet.button--inverted {
    color: #8b26f1;
    background-color: white; }
.button--color-violet.button--inverted:hover, .button--color-violet.button--inverted:focus,
    a.button--color-violet.button--inverted:hover,
    a.button--color-violet.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-violet.button--secondary,
  a.button--color-violet.button--secondary {
    color: #8b26f1;
    background-color: transparent;
    border-color: #8b26f1; }
.button--color-violet.button--secondary:hover, .button--color-violet.button--secondary:focus,
    a.button--color-violet.button--secondary:hover,
    a.button--color-violet.button--secondary:focus {
      color: white;
      background-color: rgba(139, 38, 241, 0.67);
      border-color: transparent; }
.button--color-violet.button--secondary.button--inverted,
    a.button--color-violet.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-violet.button--secondary.button--inverted:hover, .button--color-violet.button--secondary.button--inverted:focus,
      a.button--color-violet.button--secondary.button--inverted:hover,
      a.button--color-violet.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-black,
a.button--color-black {
  color: white;
  background-color: black; }
.button--color-black:hover, .button--color-black:focus,
  a.button--color-black:hover,
  a.button--color-black:focus {
    background-color: rgba(0, 0, 0, 0.67); }
.button--color-black.button--inverted,
  a.button--color-black.button--inverted {
    color: black;
    background-color: white; }
.button--color-black.button--inverted:hover, .button--color-black.button--inverted:focus,
    a.button--color-black.button--inverted:hover,
    a.button--color-black.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-black.button--secondary,
  a.button--color-black.button--secondary {
    color: black;
    background-color: transparent;
    border-color: black; }
.button--color-black.button--secondary:hover, .button--color-black.button--secondary:focus,
    a.button--color-black.button--secondary:hover,
    a.button--color-black.button--secondary:focus {
      color: white;
      background-color: rgba(0, 0, 0, 0.67);
      border-color: transparent; }
.button--color-black.button--secondary.button--inverted,
    a.button--color-black.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-black.button--secondary.button--inverted:hover, .button--color-black.button--secondary.button--inverted:focus,
      a.button--color-black.button--secondary.button--inverted:hover,
      a.button--color-black.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-gray,
a.button--color-gray {
  color: white;
  background-color: #999999; }
.button--color-gray:hover, .button--color-gray:focus,
  a.button--color-gray:hover,
  a.button--color-gray:focus {
    background-color: rgba(153, 153, 153, 0.67); }
.button--color-gray.button--inverted,
  a.button--color-gray.button--inverted {
    color: #999999;
    background-color: white; }
.button--color-gray.button--inverted:hover, .button--color-gray.button--inverted:focus,
    a.button--color-gray.button--inverted:hover,
    a.button--color-gray.button--inverted:focus {
      color: white;
      background-color: rgba(255, 255, 255, 0.34); }
.button--color-gray.button--secondary,
  a.button--color-gray.button--secondary {
    color: #999999;
    background-color: transparent;
    border-color: #999999; }
.button--color-gray.button--secondary:hover, .button--color-gray.button--secondary:focus,
    a.button--color-gray.button--secondary:hover,
    a.button--color-gray.button--secondary:focus {
      color: white;
      background-color: rgba(153, 153, 153, 0.67);
      border-color: transparent; }
.button--color-gray.button--secondary.button--inverted,
    a.button--color-gray.button--secondary.button--inverted {
      color: white;
      border-color: white; }
.button--color-gray.button--secondary.button--inverted:hover, .button--color-gray.button--secondary.button--inverted:focus,
      a.button--color-gray.button--secondary.button--inverted:hover,
      a.button--color-gray.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(255, 255, 255, 0.34); }
.button--color-white,
a.button--color-white {
  color: black;
  background-color: white; }
.button--color-white:hover, .button--color-white:focus,
  a.button--color-white:hover,
  a.button--color-white:focus {
    background-color: rgba(255, 255, 255, 0.67); }
.button--color-white.button--inverted,
  a.button--color-white.button--inverted {
    color: white;
    background-color: black; }
.button--color-white.button--inverted:hover, .button--color-white.button--inverted:focus,
    a.button--color-white.button--inverted:hover,
    a.button--color-white.button--inverted:focus {
      color: white;
      background-color: rgba(0, 0, 0, 0.34); }
.button--color-white.button--secondary,
  a.button--color-white.button--secondary {
    color: white;
    border-color: white;
    background-color: transparent; }
.button--color-white.button--secondary:hover, .button--color-white.button--secondary:focus,
    a.button--color-white.button--secondary:hover,
    a.button--color-white.button--secondary:focus {
      color: black;
      background-color: rgba(255, 255, 255, 0.67);
      border-color: transparent; }
.button--color-white.button--secondary.button--inverted,
    a.button--color-white.button--secondary.button--inverted {
      color: black;
      border-color: black; }
.button--color-white.button--secondary.button--inverted:hover, .button--color-white.button--secondary.button--inverted:focus,
      a.button--color-white.button--secondary.button--inverted:hover,
      a.button--color-white.button--secondary.button--inverted:focus {
        color: white;
        border-color: transparent;
        background-color: rgba(0, 0, 0, 0.34); }
/** Sizes
--------------------------------------------------*/
/** Small */
.button--small,
a.button--small {
  padding: 3px 6px;
  font-size: 14px;
  line-height: 14px;
  height: 28px; }
.button--small.button--icon-only, .button--smalla.button--icon-only,
  a.button--small.button--icon-only,
  a.button--smalla.button--icon-only {
    width: 28px;
    padding: 0; }
.button--small.button--icon-only [class^="icon-"], .button--small.button--icon-only [class*=" icon-"], .button--smalla.button--icon-only [class^="icon-"], .button--smalla.button--icon-only [class*=" icon-"],
    a.button--small.button--icon-only [class^="icon-"],
    a.button--small.button--icon-only [class*=" icon-"],
    a.button--smalla.button--icon-only [class^="icon-"],
    a.button--smalla.button--icon-only [class*=" icon-"] {
      font-size: 20px;
      height: 20px; }
/** Large */
.button--large,
a.button--large {
  padding: 12px 18px;
  font-size: 16px;
  line-height: 16px;
  height: 54px; }
.button--large.button--icon-only, .button--largea.button--icon-only,
  a.button--large.button--icon-only,
  a.button--largea.button--icon-only {
    width: 54px;
    padding: 0; }
.button--large.button--icon-only [class^="icon-"], .button--large.button--icon-only [class*=" icon-"], .button--largea.button--icon-only [class^="icon-"], .button--largea.button--icon-only [class*=" icon-"],
    a.button--large.button--icon-only [class^="icon-"],
    a.button--large.button--icon-only [class*=" icon-"],
    a.button--largea.button--icon-only [class^="icon-"],
    a.button--largea.button--icon-only [class*=" icon-"] {
      font-size: 24px;
      height: 24px; }
/** Wide
--------------------------------------------------*/
.button--wide,
a.button--wide {
  width: 100%;
  justify-content: center; }
.button--wide + .button--wide,
  a.button--wide + .button--wide, .button--wide +
  a.button--wide,
  a.button--wide +
  a.button--wide {
    margin-left: 0;
    margin-top: 12px; }
/** Icon
--------------------------------------------------*/
/** Icon only */
.button--icon-only,
a.button--icon-only {
  width: 40px;
  padding: 0 1px 0 0;
  align-items: center;
  justify-content: center; }
.button--icon-only [class^="icon-"],
  .button--icon-only [class*=" icon-"],
  a.button--icon-only [class^="icon-"],
  a.button--icon-only [class*=" icon-"] {
    margin: auto; }
/** Icons
--------------------------------------------------*/
@font-face {
  font-family: "fomo-icons";
  src: url(../fonts/orange-icons.eot);
  src: url(../fonts/orange-icons.eot) format("embedded-opentype"), url(../fonts/orange-icons.woff2) format("woff2"), url(../fonts/orange-icons.woff) format("woff"), url(../fonts/orange-icons.ttf) format("truetype"), url(../fonts/orange-icons.svg) format("svg");
  font-weight: normal;
  font-style: normal; }
[class^="icon-"]::before,
[class*=" icon-"]::before {
  font-family: "fomo-icons";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  font-variant: normal;
  text-transform: none;
  line-height: 1em;
  margin-left: .2em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
.icon-arrow-down:before {
  content: '\e800'; }
.icon-arrow-left:before {
  content: '\e801'; }
.icon-arrow-right:before {
  content: '\e802'; }
.icon-arrow-skip:before {
  content: '\e803'; }
.icon-arrow-up:before {
  content: '\e804'; }
.icon-audience:before {
  content: '\e805'; }
.icon-billing:before {
  content: '\e806'; }
.icon-breadcrumb:before {
  content: '\e807'; }
.icon-budget:before {
  content: '\e808'; }
.icon-burger:before {
  content: '\e809'; }
.icon-caret-down:before {
  content: '\e80a'; }
.icon-caret-up:before {
  content: '\e80b'; }
.icon-code:before {
  content: '\e80c'; }
.icon-dashboard:before {
  content: '\e80d'; }
.icon-desktop:before {
  content: '\e80e'; }
.icon-editor:before {
  content: '\e80f'; }
.icon-events:before {
  content: '\e810'; }
.icon-external:before {
  content: '\e811'; }
.icon-heart:before {
  content: '\e812'; }
.icon-launch:before {
  content: '\e814'; }
.icon-lock:before {
  content: '\e815'; }
.icon-mobile:before {
  content: '\e816'; }
.icon-plan:before {
  content: '\e817'; }
.icon-plus:before {
  content: '\e818'; }
.icon-profile:before {
  content: '\e819'; }
.icon-refresh:before {
  content: '\e81a'; }
.icon-remove:before {
  content: '\e81b'; }
.icon-rules:before {
  content: '\e81c'; }
.icon-settings:before {
  content: '\e81d'; }
.icon-target:before {
  content: '\e81e'; }
.icon-team:before {
  content: '\e81f'; }
.icon-theme:before {
  content: '\e820'; }
.icon-tick:before {
  content: '\e821'; }
.icon-x:before {
  content: '\e822'; }
.icon-integrations:before {
  content: '\e823'; }
.icon-more:before {
  content: '\e824'; }
[class^="icon-"],
[class*=" icon-"] {
  font-size: 24px;
  line-height: 0; }
[class^="icon-"]::before,
[class*=" icon-"]::before {
  margin-right: 0;
  margin-left: 0; }
/** Utilities
--------------------------------------------------*/
/**
 * Layout
 */
/** Block */
.block-left {
  display: block;
  margin-right: auto;
  margin-left: 0; }
.block-center {
  display: block;
  margin-left: auto;
  margin-right: auto; }
.block-right {
  display: block;
  margin-left: auto;
  margin-right: 0; }
/** Flex */
.flex-left {
  display: flex;
  margin-right: auto;
  margin-left: 0; }
.flex-center {
  display: flex;
  margin-left: auto;
  margin-right: auto; }
.flex-right {
  display: flex;
  margin-left: auto;
  margin-right: 0; }
@media (min-width: 320px) {
  /** Block */
  .xxs\:block-left {
    display: block;
    margin-right: auto;
    margin-left: 0; }
  .xxs\:block-center {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .xxs\:block-right {
    display: block;
    margin-left: auto;
    margin-right: 0; }
  /** Flex */
  .xxs\:flex-left {
    display: flex;
    margin-right: auto;
    margin-left: 0; }
  .xxs\:flex-center {
    display: flex;
    margin-left: auto;
    margin-right: auto; }
  .xxs\:flex-right {
    display: flex;
    margin-left: auto;
    margin-right: 0; } }
@media (min-width: 480px) {
  /** Block */
  .xs\:block-left {
    display: block;
    margin-right: auto;
    margin-left: 0; }
  .xs\:block-center {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .xs\:block-right {
    display: block;
    margin-left: auto;
    margin-right: 0; }
  /** Flex */
  .xs\:flex-left {
    display: flex;
    margin-right: auto;
    margin-left: 0; }
  .xs\:flex-center {
    display: flex;
    margin-left: auto;
    margin-right: auto; }
  .xs\:flex-right {
    display: flex;
    margin-left: auto;
    margin-right: 0; } }
@media (min-width: 640px) {
  /** Block */
  .sm\:block-left {
    display: block;
    margin-right: auto;
    margin-left: 0; }
  .sm\:block-center {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .sm\:block-right {
    display: block;
    margin-left: auto;
    margin-right: 0; }
  /** Flex */
  .sm\:flex-left {
    display: flex;
    margin-right: auto;
    margin-left: 0; }
  .sm\:flex-center {
    display: flex;
    margin-left: auto;
    margin-right: auto; }
  .sm\:flex-right {
    display: flex;
    margin-left: auto;
    margin-right: 0; } }
@media (min-width: 768px) {
  /** Block */
  .md\:block-left {
    display: block;
    margin-right: auto;
    margin-left: 0; }
  .md\:block-center {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .md\:block-right {
    display: block;
    margin-left: auto;
    margin-right: 0; }
  /** Flex */
  .md\:flex-left {
    display: flex;
    margin-right: auto;
    margin-left: 0; }
  .md\:flex-center {
    display: flex;
    margin-left: auto;
    margin-right: auto; }
  .md\:flex-right {
    display: flex;
    margin-left: auto;
    margin-right: 0; } }
@media (min-width: 992px) {
  /** Block */
  .lg\:block-left {
    display: block;
    margin-right: auto;
    margin-left: 0; }
  .lg\:block-center {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .lg\:block-right {
    display: block;
    margin-left: auto;
    margin-right: 0; }
  /** Flex */
  .lg\:flex-left {
    display: flex;
    margin-right: auto;
    margin-left: 0; }
  .lg\:flex-center {
    display: flex;
    margin-left: auto;
    margin-right: auto; }
  .lg\:flex-right {
    display: flex;
    margin-left: auto;
    margin-right: 0; } }
@media (min-width: 1200px) {
  /** Block */
  .xl\:block-left {
    display: block;
    margin-right: auto;
    margin-left: 0; }
  .xl\:block-center {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .xl\:block-right {
    display: block;
    margin-left: auto;
    margin-right: 0; }
  /** Flex */
  .xl\:flex-left {
    display: flex;
    margin-right: auto;
    margin-left: 0; }
  .xl\:flex-center {
    display: flex;
    margin-left: auto;
    margin-right: auto; }
  .xl\:flex-right {
    display: flex;
    margin-left: auto;
    margin-right: 0; } }
@media (min-width: 1440px) {
  /** Block */
  .xxl\:block-left {
    display: block;
    margin-right: auto;
    margin-left: 0; }
  .xxl\:block-center {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .xxl\:block-right {
    display: block;
    margin-left: auto;
    margin-right: 0; }
  /** Flex */
  .xxl\:flex-left {
    display: flex;
    margin-right: auto;
    margin-left: 0; }
  .xxl\:flex-center {
    display: flex;
    margin-left: auto;
    margin-right: auto; }
  .xxl\:flex-right {
    display: flex;
    margin-left: auto;
    margin-right: 0; } }
/*----------------------------------*\
    Spacings
\*----------------------------------*/
/* Spacings class loop with names */
.p-0 {
  padding: 0; }
.p-1 {
  padding: 4px; }
.p-2 {
  padding: 8px; }
.p-3 {
  padding: 12px; }
.p-4 {
  padding: 24px; }
.p-5 {
  padding: 48px; }
.p-6 {
  padding: 72px; }
.p-7 {
  padding: 144px; }
.pt-0 {
  padding-top: 0; }
.pt-1 {
  padding-top: 4px; }
.pt-2 {
  padding-top: 8px; }
.pt-3 {
  padding-top: 12px; }
.pt-4 {
  padding-top: 24px; }
.pt-5 {
  padding-top: 48px; }
.pt-6 {
  padding-top: 72px; }
.pt-7 {
  padding-top: 144px; }
.pb-0 {
  padding-bottom: 0; }
.pb-1 {
  padding-bottom: 4px; }
.pb-2 {
  padding-bottom: 8px; }
.pb-3 {
  padding-bottom: 12px; }
.pb-4 {
  padding-bottom: 24px; }
.pb-5 {
  padding-bottom: 48px; }
.pb-6 {
  padding-bottom: 72px; }
.pb-7 {
  padding-bottom: 144px; }
.pr-0 {
  padding-right: 0; }
.pr-1 {
  padding-right: 4px; }
.pr-2 {
  padding-right: 8px; }
.pr-3 {
  padding-right: 12px; }
.pr-4 {
  padding-right: 24px; }
.pr-5 {
  padding-right: 48px; }
.pr-6 {
  padding-right: 72px; }
.pr-7 {
  padding-right: 144px; }
.pl-0 {
  padding-left: 0; }
.pl-1 {
  padding-left: 4px; }
.pl-2 {
  padding-left: 8px; }
.pl-3 {
  padding-left: 12px; }
.pl-4 {
  padding-left: 24px; }
.pl-5 {
  padding-left: 48px; }
.pl-6 {
  padding-left: 72px; }
.pl-7 {
  padding-left: 144px; }
.m-0 {
  margin: 0; }
.m-1 {
  margin: 4px; }
.m-2 {
  margin: 8px; }
.m-3 {
  margin: 12px; }
.m-4 {
  margin: 24px; }
.m-5 {
  margin: 48px; }
.m-6 {
  margin: 72px; }
.m-7 {
  margin: 144px; }
.mt-0 {
  margin-top: 0; }
.mt-1 {
  margin-top: 4px; }
.mt-2 {
  margin-top: 8px; }
.mt-3 {
  margin-top: 12px; }
.mt-4 {
  margin-top: 24px; }
.mt-5 {
  margin-top: 48px; }
.mt-6 {
  margin-top: 72px; }
.mt-7 {
  margin-top: 144px; }
.mb-0 {
  margin-bottom: 0; }
.mb-1 {
  margin-bottom: 4px; }
.mb-2 {
  margin-bottom: 8px; }
.mb-3 {
  margin-bottom: 12px; }
.mb-4 {
  margin-bottom: 24px; }
.mb-5 {
  margin-bottom: 48px; }
.mb-6 {
  margin-bottom: 72px; }
.mb-7 {
  margin-bottom: 144px; }
.mr-0 {
  margin-right: 0; }
.mr-1 {
  margin-right: 4px; }
.mr-2 {
  margin-right: 8px; }
.mr-3 {
  margin-right: 12px; }
.mr-4 {
  margin-right: 24px; }
.mr-5 {
  margin-right: 48px; }
.mr-6 {
  margin-right: 72px; }
.mr-7 {
  margin-right: 144px; }
.ml-0 {
  margin-left: 0; }
.ml-1 {
  margin-left: 4px; }
.ml-2 {
  margin-left: 8px; }
.ml-3 {
  margin-left: 12px; }
.ml-4 {
  margin-left: 24px; }
.ml-5 {
  margin-left: 48px; }
.ml-6 {
  margin-left: 72px; }
.ml-7 {
  margin-left: 144px; }
/* Spacings class loop - Responsive */
@media (min-width: 320px) {
  .xxs\:p-0 {
    padding: 0; } }
@media (min-width: 320px) {
  .xxs\:p-1 {
    padding: 4px; } }
@media (min-width: 320px) {
  .xxs\:p-2 {
    padding: 8px; } }
@media (min-width: 320px) {
  .xxs\:p-3 {
    padding: 12px; } }
@media (min-width: 320px) {
  .xxs\:p-4 {
    padding: 24px; } }
@media (min-width: 320px) {
  .xxs\:p-5 {
    padding: 48px; } }
@media (min-width: 320px) {
  .xxs\:p-6 {
    padding: 72px; } }
@media (min-width: 320px) {
  .xxs\:p-7 {
    padding: 144px; } }
@media (min-width: 320px) {
  .xxs\:pt-0 {
    padding-top: 0; } }
@media (min-width: 320px) {
  .xxs\:pt-1 {
    padding-top: 4px; } }
@media (min-width: 320px) {
  .xxs\:pt-2 {
    padding-top: 8px; } }
@media (min-width: 320px) {
  .xxs\:pt-3 {
    padding-top: 12px; } }
@media (min-width: 320px) {
  .xxs\:pt-4 {
    padding-top: 24px; } }
@media (min-width: 320px) {
  .xxs\:pt-5 {
    padding-top: 48px; } }
@media (min-width: 320px) {
  .xxs\:pt-6 {
    padding-top: 72px; } }
@media (min-width: 320px) {
  .xxs\:pt-7 {
    padding-top: 144px; } }
@media (min-width: 320px) {
  .xxs\:pb-0 {
    padding-bottom: 0; } }
@media (min-width: 320px) {
  .xxs\:pb-1 {
    padding-bottom: 4px; } }
@media (min-width: 320px) {
  .xxs\:pb-2 {
    padding-bottom: 8px; } }
@media (min-width: 320px) {
  .xxs\:pb-3 {
    padding-bottom: 12px; } }
@media (min-width: 320px) {
  .xxs\:pb-4 {
    padding-bottom: 24px; } }
@media (min-width: 320px) {
  .xxs\:pb-5 {
    padding-bottom: 48px; } }
@media (min-width: 320px) {
  .xxs\:pb-6 {
    padding-bottom: 72px; } }
@media (min-width: 320px) {
  .xxs\:pb-7 {
    padding-bottom: 144px; } }
@media (min-width: 320px) {
  .xxs\:pr-0 {
    padding-right: 0; } }
@media (min-width: 320px) {
  .xxs\:pr-1 {
    padding-right: 4px; } }
@media (min-width: 320px) {
  .xxs\:pr-2 {
    padding-right: 8px; } }
@media (min-width: 320px) {
  .xxs\:pr-3 {
    padding-right: 12px; } }
@media (min-width: 320px) {
  .xxs\:pr-4 {
    padding-right: 24px; } }
@media (min-width: 320px) {
  .xxs\:pr-5 {
    padding-right: 48px; } }
@media (min-width: 320px) {
  .xxs\:pr-6 {
    padding-right: 72px; } }
@media (min-width: 320px) {
  .xxs\:pr-7 {
    padding-right: 144px; } }
@media (min-width: 320px) {
  .xxs\:pl-0 {
    padding-left: 0; } }
@media (min-width: 320px) {
  .xxs\:pl-1 {
    padding-left: 4px; } }
@media (min-width: 320px) {
  .xxs\:pl-2 {
    padding-left: 8px; } }
@media (min-width: 320px) {
  .xxs\:pl-3 {
    padding-left: 12px; } }
@media (min-width: 320px) {
  .xxs\:pl-4 {
    padding-left: 24px; } }
@media (min-width: 320px) {
  .xxs\:pl-5 {
    padding-left: 48px; } }
@media (min-width: 320px) {
  .xxs\:pl-6 {
    padding-left: 72px; } }
@media (min-width: 320px) {
  .xxs\:pl-7 {
    padding-left: 144px; } }
@media (min-width: 320px) {
  .xxs\:m-0 {
    margin: 0; } }
@media (min-width: 320px) {
  .xxs\:m-1 {
    margin: 4px; } }
@media (min-width: 320px) {
  .xxs\:m-2 {
    margin: 8px; } }
@media (min-width: 320px) {
  .xxs\:m-3 {
    margin: 12px; } }
@media (min-width: 320px) {
  .xxs\:m-4 {
    margin: 24px; } }
@media (min-width: 320px) {
  .xxs\:m-5 {
    margin: 48px; } }
@media (min-width: 320px) {
  .xxs\:m-6 {
    margin: 72px; } }
@media (min-width: 320px) {
  .xxs\:m-7 {
    margin: 144px; } }
@media (min-width: 320px) {
  .xxs\:mt-0 {
    margin-top: 0; } }
@media (min-width: 320px) {
  .xxs\:mt-1 {
    margin-top: 4px; } }
@media (min-width: 320px) {
  .xxs\:mt-2 {
    margin-top: 8px; } }
@media (min-width: 320px) {
  .xxs\:mt-3 {
    margin-top: 12px; } }
@media (min-width: 320px) {
  .xxs\:mt-4 {
    margin-top: 24px; } }
@media (min-width: 320px) {
  .xxs\:mt-5 {
    margin-top: 48px; } }
@media (min-width: 320px) {
  .xxs\:mt-6 {
    margin-top: 72px; } }
@media (min-width: 320px) {
  .xxs\:mt-7 {
    margin-top: 144px; } }
@media (min-width: 320px) {
  .xxs\:mb-0 {
    margin-bottom: 0; } }
@media (min-width: 320px) {
  .xxs\:mb-1 {
    margin-bottom: 4px; } }
@media (min-width: 320px) {
  .xxs\:mb-2 {
    margin-bottom: 8px; } }
@media (min-width: 320px) {
  .xxs\:mb-3 {
    margin-bottom: 12px; } }
@media (min-width: 320px) {
  .xxs\:mb-4 {
    margin-bottom: 24px; } }
@media (min-width: 320px) {
  .xxs\:mb-5 {
    margin-bottom: 48px; } }
@media (min-width: 320px) {
  .xxs\:mb-6 {
    margin-bottom: 72px; } }
@media (min-width: 320px) {
  .xxs\:mb-7 {
    margin-bottom: 144px; } }
@media (min-width: 320px) {
  .xxs\:mr-0 {
    margin-right: 0; } }
@media (min-width: 320px) {
  .xxs\:mr-1 {
    margin-right: 4px; } }
@media (min-width: 320px) {
  .xxs\:mr-2 {
    margin-right: 8px; } }
@media (min-width: 320px) {
  .xxs\:mr-3 {
    margin-right: 12px; } }
@media (min-width: 320px) {
  .xxs\:mr-4 {
    margin-right: 24px; } }
@media (min-width: 320px) {
  .xxs\:mr-5 {
    margin-right: 48px; } }
@media (min-width: 320px) {
  .xxs\:mr-6 {
    margin-right: 72px; } }
@media (min-width: 320px) {
  .xxs\:mr-7 {
    margin-right: 144px; } }
@media (min-width: 320px) {
  .xxs\:ml-0 {
    margin-left: 0; } }
@media (min-width: 320px) {
  .xxs\:ml-1 {
    margin-left: 4px; } }
@media (min-width: 320px) {
  .xxs\:ml-2 {
    margin-left: 8px; } }
@media (min-width: 320px) {
  .xxs\:ml-3 {
    margin-left: 12px; } }
@media (min-width: 320px) {
  .xxs\:ml-4 {
    margin-left: 24px; } }
@media (min-width: 320px) {
  .xxs\:ml-5 {
    margin-left: 48px; } }
@media (min-width: 320px) {
  .xxs\:ml-6 {
    margin-left: 72px; } }
@media (min-width: 320px) {
  .xxs\:ml-7 {
    margin-left: 144px; } }
@media (min-width: 480px) {
  .xs\:p-0 {
    padding: 0; } }
@media (min-width: 480px) {
  .xs\:p-1 {
    padding: 4px; } }
@media (min-width: 480px) {
  .xs\:p-2 {
    padding: 8px; } }
@media (min-width: 480px) {
  .xs\:p-3 {
    padding: 12px; } }
@media (min-width: 480px) {
  .xs\:p-4 {
    padding: 24px; } }
@media (min-width: 480px) {
  .xs\:p-5 {
    padding: 48px; } }
@media (min-width: 480px) {
  .xs\:p-6 {
    padding: 72px; } }
@media (min-width: 480px) {
  .xs\:p-7 {
    padding: 144px; } }
@media (min-width: 480px) {
  .xs\:pt-0 {
    padding-top: 0; } }
@media (min-width: 480px) {
  .xs\:pt-1 {
    padding-top: 4px; } }
@media (min-width: 480px) {
  .xs\:pt-2 {
    padding-top: 8px; } }
@media (min-width: 480px) {
  .xs\:pt-3 {
    padding-top: 12px; } }
@media (min-width: 480px) {
  .xs\:pt-4 {
    padding-top: 24px; } }
@media (min-width: 480px) {
  .xs\:pt-5 {
    padding-top: 48px; } }
@media (min-width: 480px) {
  .xs\:pt-6 {
    padding-top: 72px; } }
@media (min-width: 480px) {
  .xs\:pt-7 {
    padding-top: 144px; } }
@media (min-width: 480px) {
  .xs\:pb-0 {
    padding-bottom: 0; } }
@media (min-width: 480px) {
  .xs\:pb-1 {
    padding-bottom: 4px; } }
@media (min-width: 480px) {
  .xs\:pb-2 {
    padding-bottom: 8px; } }
@media (min-width: 480px) {
  .xs\:pb-3 {
    padding-bottom: 12px; } }
@media (min-width: 480px) {
  .xs\:pb-4 {
    padding-bottom: 24px; } }
@media (min-width: 480px) {
  .xs\:pb-5 {
    padding-bottom: 48px; } }
@media (min-width: 480px) {
  .xs\:pb-6 {
    padding-bottom: 72px; } }
@media (min-width: 480px) {
  .xs\:pb-7 {
    padding-bottom: 144px; } }
@media (min-width: 480px) {
  .xs\:pr-0 {
    padding-right: 0; } }
@media (min-width: 480px) {
  .xs\:pr-1 {
    padding-right: 4px; } }
@media (min-width: 480px) {
  .xs\:pr-2 {
    padding-right: 8px; } }
@media (min-width: 480px) {
  .xs\:pr-3 {
    padding-right: 12px; } }
@media (min-width: 480px) {
  .xs\:pr-4 {
    padding-right: 24px; } }
@media (min-width: 480px) {
  .xs\:pr-5 {
    padding-right: 48px; } }
@media (min-width: 480px) {
  .xs\:pr-6 {
    padding-right: 72px; } }
@media (min-width: 480px) {
  .xs\:pr-7 {
    padding-right: 144px; } }
@media (min-width: 480px) {
  .xs\:pl-0 {
    padding-left: 0; } }
@media (min-width: 480px) {
  .xs\:pl-1 {
    padding-left: 4px; } }
@media (min-width: 480px) {
  .xs\:pl-2 {
    padding-left: 8px; } }
@media (min-width: 480px) {
  .xs\:pl-3 {
    padding-left: 12px; } }
@media (min-width: 480px) {
  .xs\:pl-4 {
    padding-left: 24px; } }
@media (min-width: 480px) {
  .xs\:pl-5 {
    padding-left: 48px; } }
@media (min-width: 480px) {
  .xs\:pl-6 {
    padding-left: 72px; } }
@media (min-width: 480px) {
  .xs\:pl-7 {
    padding-left: 144px; } }
@media (min-width: 480px) {
  .xs\:m-0 {
    margin: 0; } }
@media (min-width: 480px) {
  .xs\:m-1 {
    margin: 4px; } }
@media (min-width: 480px) {
  .xs\:m-2 {
    margin: 8px; } }
@media (min-width: 480px) {
  .xs\:m-3 {
    margin: 12px; } }
@media (min-width: 480px) {
  .xs\:m-4 {
    margin: 24px; } }
@media (min-width: 480px) {
  .xs\:m-5 {
    margin: 48px; } }
@media (min-width: 480px) {
  .xs\:m-6 {
    margin: 72px; } }
@media (min-width: 480px) {
  .xs\:m-7 {
    margin: 144px; } }
@media (min-width: 480px) {
  .xs\:mt-0 {
    margin-top: 0; } }
@media (min-width: 480px) {
  .xs\:mt-1 {
    margin-top: 4px; } }
@media (min-width: 480px) {
  .xs\:mt-2 {
    margin-top: 8px; } }
@media (min-width: 480px) {
  .xs\:mt-3 {
    margin-top: 12px; } }
@media (min-width: 480px) {
  .xs\:mt-4 {
    margin-top: 24px; } }
@media (min-width: 480px) {
  .xs\:mt-5 {
    margin-top: 48px; } }
@media (min-width: 480px) {
  .xs\:mt-6 {
    margin-top: 72px; } }
@media (min-width: 480px) {
  .xs\:mt-7 {
    margin-top: 144px; } }
@media (min-width: 480px) {
  .xs\:mb-0 {
    margin-bottom: 0; } }
@media (min-width: 480px) {
  .xs\:mb-1 {
    margin-bottom: 4px; } }
@media (min-width: 480px) {
  .xs\:mb-2 {
    margin-bottom: 8px; } }
@media (min-width: 480px) {
  .xs\:mb-3 {
    margin-bottom: 12px; } }
@media (min-width: 480px) {
  .xs\:mb-4 {
    margin-bottom: 24px; } }
@media (min-width: 480px) {
  .xs\:mb-5 {
    margin-bottom: 48px; } }
@media (min-width: 480px) {
  .xs\:mb-6 {
    margin-bottom: 72px; } }
@media (min-width: 480px) {
  .xs\:mb-7 {
    margin-bottom: 144px; } }
@media (min-width: 480px) {
  .xs\:mr-0 {
    margin-right: 0; } }
@media (min-width: 480px) {
  .xs\:mr-1 {
    margin-right: 4px; } }
@media (min-width: 480px) {
  .xs\:mr-2 {
    margin-right: 8px; } }
@media (min-width: 480px) {
  .xs\:mr-3 {
    margin-right: 12px; } }
@media (min-width: 480px) {
  .xs\:mr-4 {
    margin-right: 24px; } }
@media (min-width: 480px) {
  .xs\:mr-5 {
    margin-right: 48px; } }
@media (min-width: 480px) {
  .xs\:mr-6 {
    margin-right: 72px; } }
@media (min-width: 480px) {
  .xs\:mr-7 {
    margin-right: 144px; } }
@media (min-width: 480px) {
  .xs\:ml-0 {
    margin-left: 0; } }
@media (min-width: 480px) {
  .xs\:ml-1 {
    margin-left: 4px; } }
@media (min-width: 480px) {
  .xs\:ml-2 {
    margin-left: 8px; } }
@media (min-width: 480px) {
  .xs\:ml-3 {
    margin-left: 12px; } }
@media (min-width: 480px) {
  .xs\:ml-4 {
    margin-left: 24px; } }
@media (min-width: 480px) {
  .xs\:ml-5 {
    margin-left: 48px; } }
@media (min-width: 480px) {
  .xs\:ml-6 {
    margin-left: 72px; } }
@media (min-width: 480px) {
  .xs\:ml-7 {
    margin-left: 144px; } }
@media (min-width: 640px) {
  .sm\:p-0 {
    padding: 0; } }
@media (min-width: 640px) {
  .sm\:p-1 {
    padding: 4px; } }
@media (min-width: 640px) {
  .sm\:p-2 {
    padding: 8px; } }
@media (min-width: 640px) {
  .sm\:p-3 {
    padding: 12px; } }
@media (min-width: 640px) {
  .sm\:p-4 {
    padding: 24px; } }
@media (min-width: 640px) {
  .sm\:p-5 {
    padding: 48px; } }
@media (min-width: 640px) {
  .sm\:p-6 {
    padding: 72px; } }
@media (min-width: 640px) {
  .sm\:p-7 {
    padding: 144px; } }
@media (min-width: 640px) {
  .sm\:pt-0 {
    padding-top: 0; } }
@media (min-width: 640px) {
  .sm\:pt-1 {
    padding-top: 4px; } }
@media (min-width: 640px) {
  .sm\:pt-2 {
    padding-top: 8px; } }
@media (min-width: 640px) {
  .sm\:pt-3 {
    padding-top: 12px; } }
@media (min-width: 640px) {
  .sm\:pt-4 {
    padding-top: 24px; } }
@media (min-width: 640px) {
  .sm\:pt-5 {
    padding-top: 48px; } }
@media (min-width: 640px) {
  .sm\:pt-6 {
    padding-top: 72px; } }
@media (min-width: 640px) {
  .sm\:pt-7 {
    padding-top: 144px; } }
@media (min-width: 640px) {
  .sm\:pb-0 {
    padding-bottom: 0; } }
@media (min-width: 640px) {
  .sm\:pb-1 {
    padding-bottom: 4px; } }
@media (min-width: 640px) {
  .sm\:pb-2 {
    padding-bottom: 8px; } }
@media (min-width: 640px) {
  .sm\:pb-3 {
    padding-bottom: 12px; } }
@media (min-width: 640px) {
  .sm\:pb-4 {
    padding-bottom: 24px; } }
@media (min-width: 640px) {
  .sm\:pb-5 {
    padding-bottom: 48px; } }
@media (min-width: 640px) {
  .sm\:pb-6 {
    padding-bottom: 72px; } }
@media (min-width: 640px) {
  .sm\:pb-7 {
    padding-bottom: 144px; } }
@media (min-width: 640px) {
  .sm\:pr-0 {
    padding-right: 0; } }
@media (min-width: 640px) {
  .sm\:pr-1 {
    padding-right: 4px; } }
@media (min-width: 640px) {
  .sm\:pr-2 {
    padding-right: 8px; } }
@media (min-width: 640px) {
  .sm\:pr-3 {
    padding-right: 12px; } }
@media (min-width: 640px) {
  .sm\:pr-4 {
    padding-right: 24px; } }
@media (min-width: 640px) {
  .sm\:pr-5 {
    padding-right: 48px; } }
@media (min-width: 640px) {
  .sm\:pr-6 {
    padding-right: 72px; } }
@media (min-width: 640px) {
  .sm\:pr-7 {
    padding-right: 144px; } }
@media (min-width: 640px) {
  .sm\:pl-0 {
    padding-left: 0; } }
@media (min-width: 640px) {
  .sm\:pl-1 {
    padding-left: 4px; } }
@media (min-width: 640px) {
  .sm\:pl-2 {
    padding-left: 8px; } }
@media (min-width: 640px) {
  .sm\:pl-3 {
    padding-left: 12px; } }
@media (min-width: 640px) {
  .sm\:pl-4 {
    padding-left: 24px; } }
@media (min-width: 640px) {
  .sm\:pl-5 {
    padding-left: 48px; } }
@media (min-width: 640px) {
  .sm\:pl-6 {
    padding-left: 72px; } }
@media (min-width: 640px) {
  .sm\:pl-7 {
    padding-left: 144px; } }
@media (min-width: 640px) {
  .sm\:m-0 {
    margin: 0; } }
@media (min-width: 640px) {
  .sm\:m-1 {
    margin: 4px; } }
@media (min-width: 640px) {
  .sm\:m-2 {
    margin: 8px; } }
@media (min-width: 640px) {
  .sm\:m-3 {
    margin: 12px; } }
@media (min-width: 640px) {
  .sm\:m-4 {
    margin: 24px; } }
@media (min-width: 640px) {
  .sm\:m-5 {
    margin: 48px; } }
@media (min-width: 640px) {
  .sm\:m-6 {
    margin: 72px; } }
@media (min-width: 640px) {
  .sm\:m-7 {
    margin: 144px; } }
@media (min-width: 640px) {
  .sm\:mt-0 {
    margin-top: 0; } }
@media (min-width: 640px) {
  .sm\:mt-1 {
    margin-top: 4px; } }
@media (min-width: 640px) {
  .sm\:mt-2 {
    margin-top: 8px; } }
@media (min-width: 640px) {
  .sm\:mt-3 {
    margin-top: 12px; } }
@media (min-width: 640px) {
  .sm\:mt-4 {
    margin-top: 24px; } }
@media (min-width: 640px) {
  .sm\:mt-5 {
    margin-top: 48px; } }
@media (min-width: 640px) {
  .sm\:mt-6 {
    margin-top: 72px; } }
@media (min-width: 640px) {
  .sm\:mt-7 {
    margin-top: 144px; } }
@media (min-width: 640px) {
  .sm\:mb-0 {
    margin-bottom: 0; } }
@media (min-width: 640px) {
  .sm\:mb-1 {
    margin-bottom: 4px; } }
@media (min-width: 640px) {
  .sm\:mb-2 {
    margin-bottom: 8px; } }
@media (min-width: 640px) {
  .sm\:mb-3 {
    margin-bottom: 12px; } }
@media (min-width: 640px) {
  .sm\:mb-4 {
    margin-bottom: 24px; } }
@media (min-width: 640px) {
  .sm\:mb-5 {
    margin-bottom: 48px; } }
@media (min-width: 640px) {
  .sm\:mb-6 {
    margin-bottom: 72px; } }
@media (min-width: 640px) {
  .sm\:mb-7 {
    margin-bottom: 144px; } }
@media (min-width: 640px) {
  .sm\:mr-0 {
    margin-right: 0; } }
@media (min-width: 640px) {
  .sm\:mr-1 {
    margin-right: 4px; } }
@media (min-width: 640px) {
  .sm\:mr-2 {
    margin-right: 8px; } }
@media (min-width: 640px) {
  .sm\:mr-3 {
    margin-right: 12px; } }
@media (min-width: 640px) {
  .sm\:mr-4 {
    margin-right: 24px; } }
@media (min-width: 640px) {
  .sm\:mr-5 {
    margin-right: 48px; } }
@media (min-width: 640px) {
  .sm\:mr-6 {
    margin-right: 72px; } }
@media (min-width: 640px) {
  .sm\:mr-7 {
    margin-right: 144px; } }
@media (min-width: 640px) {
  .sm\:ml-0 {
    margin-left: 0; } }
@media (min-width: 640px) {
  .sm\:ml-1 {
    margin-left: 4px; } }
@media (min-width: 640px) {
  .sm\:ml-2 {
    margin-left: 8px; } }
@media (min-width: 640px) {
  .sm\:ml-3 {
    margin-left: 12px; } }
@media (min-width: 640px) {
  .sm\:ml-4 {
    margin-left: 24px; } }
@media (min-width: 640px) {
  .sm\:ml-5 {
    margin-left: 48px; } }
@media (min-width: 640px) {
  .sm\:ml-6 {
    margin-left: 72px; } }
@media (min-width: 640px) {
  .sm\:ml-7 {
    margin-left: 144px; } }
@media (min-width: 768px) {
  .md\:p-0 {
    padding: 0; } }
@media (min-width: 768px) {
  .md\:p-1 {
    padding: 4px; } }
@media (min-width: 768px) {
  .md\:p-2 {
    padding: 8px; } }
@media (min-width: 768px) {
  .md\:p-3 {
    padding: 12px; } }
@media (min-width: 768px) {
  .md\:p-4 {
    padding: 24px; } }
@media (min-width: 768px) {
  .md\:p-5 {
    padding: 48px; } }
@media (min-width: 768px) {
  .md\:p-6 {
    padding: 72px; } }
@media (min-width: 768px) {
  .md\:p-7 {
    padding: 144px; } }
@media (min-width: 768px) {
  .md\:pt-0 {
    padding-top: 0; } }
@media (min-width: 768px) {
  .md\:pt-1 {
    padding-top: 4px; } }
@media (min-width: 768px) {
  .md\:pt-2 {
    padding-top: 8px; } }
@media (min-width: 768px) {
  .md\:pt-3 {
    padding-top: 12px; } }
@media (min-width: 768px) {
  .md\:pt-4 {
    padding-top: 24px; } }
@media (min-width: 768px) {
  .md\:pt-5 {
    padding-top: 48px; } }
@media (min-width: 768px) {
  .md\:pt-6 {
    padding-top: 72px; } }
@media (min-width: 768px) {
  .md\:pt-7 {
    padding-top: 144px; } }
@media (min-width: 768px) {
  .md\:pb-0 {
    padding-bottom: 0; } }
@media (min-width: 768px) {
  .md\:pb-1 {
    padding-bottom: 4px; } }
@media (min-width: 768px) {
  .md\:pb-2 {
    padding-bottom: 8px; } }
@media (min-width: 768px) {
  .md\:pb-3 {
    padding-bottom: 12px; } }
@media (min-width: 768px) {
  .md\:pb-4 {
    padding-bottom: 24px; } }
@media (min-width: 768px) {
  .md\:pb-5 {
    padding-bottom: 48px; } }
@media (min-width: 768px) {
  .md\:pb-6 {
    padding-bottom: 72px; } }
@media (min-width: 768px) {
  .md\:pb-7 {
    padding-bottom: 144px; } }
@media (min-width: 768px) {
  .md\:pr-0 {
    padding-right: 0; } }
@media (min-width: 768px) {
  .md\:pr-1 {
    padding-right: 4px; } }
@media (min-width: 768px) {
  .md\:pr-2 {
    padding-right: 8px; } }
@media (min-width: 768px) {
  .md\:pr-3 {
    padding-right: 12px; } }
@media (min-width: 768px) {
  .md\:pr-4 {
    padding-right: 24px; } }
@media (min-width: 768px) {
  .md\:pr-5 {
    padding-right: 48px; } }
@media (min-width: 768px) {
  .md\:pr-6 {
    padding-right: 72px; } }
@media (min-width: 768px) {
  .md\:pr-7 {
    padding-right: 144px; } }
@media (min-width: 768px) {
  .md\:pl-0 {
    padding-left: 0; } }
@media (min-width: 768px) {
  .md\:pl-1 {
    padding-left: 4px; } }
@media (min-width: 768px) {
  .md\:pl-2 {
    padding-left: 8px; } }
@media (min-width: 768px) {
  .md\:pl-3 {
    padding-left: 12px; } }
@media (min-width: 768px) {
  .md\:pl-4 {
    padding-left: 24px; } }
@media (min-width: 768px) {
  .md\:pl-5 {
    padding-left: 48px; } }
@media (min-width: 768px) {
  .md\:pl-6 {
    padding-left: 72px; } }
@media (min-width: 768px) {
  .md\:pl-7 {
    padding-left: 144px; } }
@media (min-width: 768px) {
  .md\:m-0 {
    margin: 0; } }
@media (min-width: 768px) {
  .md\:m-1 {
    margin: 4px; } }
@media (min-width: 768px) {
  .md\:m-2 {
    margin: 8px; } }
@media (min-width: 768px) {
  .md\:m-3 {
    margin: 12px; } }
@media (min-width: 768px) {
  .md\:m-4 {
    margin: 24px; } }
@media (min-width: 768px) {
  .md\:m-5 {
    margin: 48px; } }
@media (min-width: 768px) {
  .md\:m-6 {
    margin: 72px; } }
@media (min-width: 768px) {
  .md\:m-7 {
    margin: 144px; } }
@media (min-width: 768px) {
  .md\:mt-0 {
    margin-top: 0; } }
@media (min-width: 768px) {
  .md\:mt-1 {
    margin-top: 4px; } }
@media (min-width: 768px) {
  .md\:mt-2 {
    margin-top: 8px; } }
@media (min-width: 768px) {
  .md\:mt-3 {
    margin-top: 12px; } }
@media (min-width: 768px) {
  .md\:mt-4 {
    margin-top: 24px; } }
@media (min-width: 768px) {
  .md\:mt-5 {
    margin-top: 48px; } }
@media (min-width: 768px) {
  .md\:mt-6 {
    margin-top: 72px; } }
@media (min-width: 768px) {
  .md\:mt-7 {
    margin-top: 144px; } }
@media (min-width: 768px) {
  .md\:mb-0 {
    margin-bottom: 0; } }
@media (min-width: 768px) {
  .md\:mb-1 {
    margin-bottom: 4px; } }
@media (min-width: 768px) {
  .md\:mb-2 {
    margin-bottom: 8px; } }
@media (min-width: 768px) {
  .md\:mb-3 {
    margin-bottom: 12px; } }
@media (min-width: 768px) {
  .md\:mb-4 {
    margin-bottom: 24px; } }
@media (min-width: 768px) {
  .md\:mb-5 {
    margin-bottom: 48px; } }
@media (min-width: 768px) {
  .md\:mb-6 {
    margin-bottom: 72px; } }
@media (min-width: 768px) {
  .md\:mb-7 {
    margin-bottom: 144px; } }
@media (min-width: 768px) {
  .md\:mr-0 {
    margin-right: 0; } }
@media (min-width: 768px) {
  .md\:mr-1 {
    margin-right: 4px; } }
@media (min-width: 768px) {
  .md\:mr-2 {
    margin-right: 8px; } }
@media (min-width: 768px) {
  .md\:mr-3 {
    margin-right: 12px; } }
@media (min-width: 768px) {
  .md\:mr-4 {
    margin-right: 24px; } }
@media (min-width: 768px) {
  .md\:mr-5 {
    margin-right: 48px; } }
@media (min-width: 768px) {
  .md\:mr-6 {
    margin-right: 72px; } }
@media (min-width: 768px) {
  .md\:mr-7 {
    margin-right: 144px; } }
@media (min-width: 768px) {
  .md\:ml-0 {
    margin-left: 0; } }
@media (min-width: 768px) {
  .md\:ml-1 {
    margin-left: 4px; } }
@media (min-width: 768px) {
  .md\:ml-2 {
    margin-left: 8px; } }
@media (min-width: 768px) {
  .md\:ml-3 {
    margin-left: 12px; } }
@media (min-width: 768px) {
  .md\:ml-4 {
    margin-left: 24px; } }
@media (min-width: 768px) {
  .md\:ml-5 {
    margin-left: 48px; } }
@media (min-width: 768px) {
  .md\:ml-6 {
    margin-left: 72px; } }
@media (min-width: 768px) {
  .md\:ml-7 {
    margin-left: 144px; } }
@media (min-width: 992px) {
  .lg\:p-0 {
    padding: 0; } }
@media (min-width: 992px) {
  .lg\:p-1 {
    padding: 4px; } }
@media (min-width: 992px) {
  .lg\:p-2 {
    padding: 8px; } }
@media (min-width: 992px) {
  .lg\:p-3 {
    padding: 12px; } }
@media (min-width: 992px) {
  .lg\:p-4 {
    padding: 24px; } }
@media (min-width: 992px) {
  .lg\:p-5 {
    padding: 48px; } }
@media (min-width: 992px) {
  .lg\:p-6 {
    padding: 72px; } }
@media (min-width: 992px) {
  .lg\:p-7 {
    padding: 144px; } }
@media (min-width: 992px) {
  .lg\:pt-0 {
    padding-top: 0; } }
@media (min-width: 992px) {
  .lg\:pt-1 {
    padding-top: 4px; } }
@media (min-width: 992px) {
  .lg\:pt-2 {
    padding-top: 8px; } }
@media (min-width: 992px) {
  .lg\:pt-3 {
    padding-top: 12px; } }
@media (min-width: 992px) {
  .lg\:pt-4 {
    padding-top: 24px; } }
@media (min-width: 992px) {
  .lg\:pt-5 {
    padding-top: 48px; } }
@media (min-width: 992px) {
  .lg\:pt-6 {
    padding-top: 72px; } }
@media (min-width: 992px) {
  .lg\:pt-7 {
    padding-top: 144px; } }
@media (min-width: 992px) {
  .lg\:pb-0 {
    padding-bottom: 0; } }
@media (min-width: 992px) {
  .lg\:pb-1 {
    padding-bottom: 4px; } }
@media (min-width: 992px) {
  .lg\:pb-2 {
    padding-bottom: 8px; } }
@media (min-width: 992px) {
  .lg\:pb-3 {
    padding-bottom: 12px; } }
@media (min-width: 992px) {
  .lg\:pb-4 {
    padding-bottom: 24px; } }
@media (min-width: 992px) {
  .lg\:pb-5 {
    padding-bottom: 48px; } }
@media (min-width: 992px) {
  .lg\:pb-6 {
    padding-bottom: 72px; } }
@media (min-width: 992px) {
  .lg\:pb-7 {
    padding-bottom: 144px; } }
@media (min-width: 992px) {
  .lg\:pr-0 {
    padding-right: 0; } }
@media (min-width: 992px) {
  .lg\:pr-1 {
    padding-right: 4px; } }
@media (min-width: 992px) {
  .lg\:pr-2 {
    padding-right: 8px; } }
@media (min-width: 992px) {
  .lg\:pr-3 {
    padding-right: 12px; } }
@media (min-width: 992px) {
  .lg\:pr-4 {
    padding-right: 24px; } }
@media (min-width: 992px) {
  .lg\:pr-5 {
    padding-right: 48px; } }
@media (min-width: 992px) {
  .lg\:pr-6 {
    padding-right: 72px; } }
@media (min-width: 992px) {
  .lg\:pr-7 {
    padding-right: 144px; } }
@media (min-width: 992px) {
  .lg\:pl-0 {
    padding-left: 0; } }
@media (min-width: 992px) {
  .lg\:pl-1 {
    padding-left: 4px; } }
@media (min-width: 992px) {
  .lg\:pl-2 {
    padding-left: 8px; } }
@media (min-width: 992px) {
  .lg\:pl-3 {
    padding-left: 12px; } }
@media (min-width: 992px) {
  .lg\:pl-4 {
    padding-left: 24px; } }
@media (min-width: 992px) {
  .lg\:pl-5 {
    padding-left: 48px; } }
@media (min-width: 992px) {
  .lg\:pl-6 {
    padding-left: 72px; } }
@media (min-width: 992px) {
  .lg\:pl-7 {
    padding-left: 144px; } }
@media (min-width: 992px) {
  .lg\:m-0 {
    margin: 0; } }
@media (min-width: 992px) {
  .lg\:m-1 {
    margin: 4px; } }
@media (min-width: 992px) {
  .lg\:m-2 {
    margin: 8px; } }
@media (min-width: 992px) {
  .lg\:m-3 {
    margin: 12px; } }
@media (min-width: 992px) {
  .lg\:m-4 {
    margin: 24px; } }
@media (min-width: 992px) {
  .lg\:m-5 {
    margin: 48px; } }
@media (min-width: 992px) {
  .lg\:m-6 {
    margin: 72px; } }
@media (min-width: 992px) {
  .lg\:m-7 {
    margin: 144px; } }
@media (min-width: 992px) {
  .lg\:mt-0 {
    margin-top: 0; } }
@media (min-width: 992px) {
  .lg\:mt-1 {
    margin-top: 4px; } }
@media (min-width: 992px) {
  .lg\:mt-2 {
    margin-top: 8px; } }
@media (min-width: 992px) {
  .lg\:mt-3 {
    margin-top: 12px; } }
@media (min-width: 992px) {
  .lg\:mt-4 {
    margin-top: 24px; } }
@media (min-width: 992px) {
  .lg\:mt-5 {
    margin-top: 48px; } }
@media (min-width: 992px) {
  .lg\:mt-6 {
    margin-top: 72px; } }
@media (min-width: 992px) {
  .lg\:mt-7 {
    margin-top: 144px; } }
@media (min-width: 992px) {
  .lg\:mb-0 {
    margin-bottom: 0; } }
@media (min-width: 992px) {
  .lg\:mb-1 {
    margin-bottom: 4px; } }
@media (min-width: 992px) {
  .lg\:mb-2 {
    margin-bottom: 8px; } }
@media (min-width: 992px) {
  .lg\:mb-3 {
    margin-bottom: 12px; } }
@media (min-width: 992px) {
  .lg\:mb-4 {
    margin-bottom: 24px; } }
@media (min-width: 992px) {
  .lg\:mb-5 {
    margin-bottom: 48px; } }
@media (min-width: 992px) {
  .lg\:mb-6 {
    margin-bottom: 72px; } }
@media (min-width: 992px) {
  .lg\:mb-7 {
    margin-bottom: 144px; } }
@media (min-width: 992px) {
  .lg\:mr-0 {
    margin-right: 0; } }
@media (min-width: 992px) {
  .lg\:mr-1 {
    margin-right: 4px; } }
@media (min-width: 992px) {
  .lg\:mr-2 {
    margin-right: 8px; } }
@media (min-width: 992px) {
  .lg\:mr-3 {
    margin-right: 12px; } }
@media (min-width: 992px) {
  .lg\:mr-4 {
    margin-right: 24px; } }
@media (min-width: 992px) {
  .lg\:mr-5 {
    margin-right: 48px; } }
@media (min-width: 992px) {
  .lg\:mr-6 {
    margin-right: 72px; } }
@media (min-width: 992px) {
  .lg\:mr-7 {
    margin-right: 144px; } }
@media (min-width: 992px) {
  .lg\:ml-0 {
    margin-left: 0; } }
@media (min-width: 992px) {
  .lg\:ml-1 {
    margin-left: 4px; } }
@media (min-width: 992px) {
  .lg\:ml-2 {
    margin-left: 8px; } }
@media (min-width: 992px) {
  .lg\:ml-3 {
    margin-left: 12px; } }
@media (min-width: 992px) {
  .lg\:ml-4 {
    margin-left: 24px; } }
@media (min-width: 992px) {
  .lg\:ml-5 {
    margin-left: 48px; } }
@media (min-width: 992px) {
  .lg\:ml-6 {
    margin-left: 72px; } }
@media (min-width: 992px) {
  .lg\:ml-7 {
    margin-left: 144px; } }
@media (min-width: 1200px) {
  .xl\:p-0 {
    padding: 0; } }
@media (min-width: 1200px) {
  .xl\:p-1 {
    padding: 4px; } }
@media (min-width: 1200px) {
  .xl\:p-2 {
    padding: 8px; } }
@media (min-width: 1200px) {
  .xl\:p-3 {
    padding: 12px; } }
@media (min-width: 1200px) {
  .xl\:p-4 {
    padding: 24px; } }
@media (min-width: 1200px) {
  .xl\:p-5 {
    padding: 48px; } }
@media (min-width: 1200px) {
  .xl\:p-6 {
    padding: 72px; } }
@media (min-width: 1200px) {
  .xl\:p-7 {
    padding: 144px; } }
@media (min-width: 1200px) {
  .xl\:pt-0 {
    padding-top: 0; } }
@media (min-width: 1200px) {
  .xl\:pt-1 {
    padding-top: 4px; } }
@media (min-width: 1200px) {
  .xl\:pt-2 {
    padding-top: 8px; } }
@media (min-width: 1200px) {
  .xl\:pt-3 {
    padding-top: 12px; } }
@media (min-width: 1200px) {
  .xl\:pt-4 {
    padding-top: 24px; } }
@media (min-width: 1200px) {
  .xl\:pt-5 {
    padding-top: 48px; } }
@media (min-width: 1200px) {
  .xl\:pt-6 {
    padding-top: 72px; } }
@media (min-width: 1200px) {
  .xl\:pt-7 {
    padding-top: 144px; } }
@media (min-width: 1200px) {
  .xl\:pb-0 {
    padding-bottom: 0; } }
@media (min-width: 1200px) {
  .xl\:pb-1 {
    padding-bottom: 4px; } }
@media (min-width: 1200px) {
  .xl\:pb-2 {
    padding-bottom: 8px; } }
@media (min-width: 1200px) {
  .xl\:pb-3 {
    padding-bottom: 12px; } }
@media (min-width: 1200px) {
  .xl\:pb-4 {
    padding-bottom: 24px; } }
@media (min-width: 1200px) {
  .xl\:pb-5 {
    padding-bottom: 48px; } }
@media (min-width: 1200px) {
  .xl\:pb-6 {
    padding-bottom: 72px; } }
@media (min-width: 1200px) {
  .xl\:pb-7 {
    padding-bottom: 144px; } }
@media (min-width: 1200px) {
  .xl\:pr-0 {
    padding-right: 0; } }
@media (min-width: 1200px) {
  .xl\:pr-1 {
    padding-right: 4px; } }
@media (min-width: 1200px) {
  .xl\:pr-2 {
    padding-right: 8px; } }
@media (min-width: 1200px) {
  .xl\:pr-3 {
    padding-right: 12px; } }
@media (min-width: 1200px) {
  .xl\:pr-4 {
    padding-right: 24px; } }
@media (min-width: 1200px) {
  .xl\:pr-5 {
    padding-right: 48px; } }
@media (min-width: 1200px) {
  .xl\:pr-6 {
    padding-right: 72px; } }
@media (min-width: 1200px) {
  .xl\:pr-7 {
    padding-right: 144px; } }
@media (min-width: 1200px) {
  .xl\:pl-0 {
    padding-left: 0; } }
@media (min-width: 1200px) {
  .xl\:pl-1 {
    padding-left: 4px; } }
@media (min-width: 1200px) {
  .xl\:pl-2 {
    padding-left: 8px; } }
@media (min-width: 1200px) {
  .xl\:pl-3 {
    padding-left: 12px; } }
@media (min-width: 1200px) {
  .xl\:pl-4 {
    padding-left: 24px; } }
@media (min-width: 1200px) {
  .xl\:pl-5 {
    padding-left: 48px; } }
@media (min-width: 1200px) {
  .xl\:pl-6 {
    padding-left: 72px; } }
@media (min-width: 1200px) {
  .xl\:pl-7 {
    padding-left: 144px; } }
@media (min-width: 1200px) {
  .xl\:m-0 {
    margin: 0; } }
@media (min-width: 1200px) {
  .xl\:m-1 {
    margin: 4px; } }
@media (min-width: 1200px) {
  .xl\:m-2 {
    margin: 8px; } }
@media (min-width: 1200px) {
  .xl\:m-3 {
    margin: 12px; } }
@media (min-width: 1200px) {
  .xl\:m-4 {
    margin: 24px; } }
@media (min-width: 1200px) {
  .xl\:m-5 {
    margin: 48px; } }
@media (min-width: 1200px) {
  .xl\:m-6 {
    margin: 72px; } }
@media (min-width: 1200px) {
  .xl\:m-7 {
    margin: 144px; } }
@media (min-width: 1200px) {
  .xl\:mt-0 {
    margin-top: 0; } }
@media (min-width: 1200px) {
  .xl\:mt-1 {
    margin-top: 4px; } }
@media (min-width: 1200px) {
  .xl\:mt-2 {
    margin-top: 8px; } }
@media (min-width: 1200px) {
  .xl\:mt-3 {
    margin-top: 12px; } }
@media (min-width: 1200px) {
  .xl\:mt-4 {
    margin-top: 24px; } }
@media (min-width: 1200px) {
  .xl\:mt-5 {
    margin-top: 48px; } }
@media (min-width: 1200px) {
  .xl\:mt-6 {
    margin-top: 72px; } }
@media (min-width: 1200px) {
  .xl\:mt-7 {
    margin-top: 144px; } }
@media (min-width: 1200px) {
  .xl\:mb-0 {
    margin-bottom: 0; } }
@media (min-width: 1200px) {
  .xl\:mb-1 {
    margin-bottom: 4px; } }
@media (min-width: 1200px) {
  .xl\:mb-2 {
    margin-bottom: 8px; } }
@media (min-width: 1200px) {
  .xl\:mb-3 {
    margin-bottom: 12px; } }
@media (min-width: 1200px) {
  .xl\:mb-4 {
    margin-bottom: 24px; } }
@media (min-width: 1200px) {
  .xl\:mb-5 {
    margin-bottom: 48px; } }
@media (min-width: 1200px) {
  .xl\:mb-6 {
    margin-bottom: 72px; } }
@media (min-width: 1200px) {
  .xl\:mb-7 {
    margin-bottom: 144px; } }
@media (min-width: 1200px) {
  .xl\:mr-0 {
    margin-right: 0; } }
@media (min-width: 1200px) {
  .xl\:mr-1 {
    margin-right: 4px; } }
@media (min-width: 1200px) {
  .xl\:mr-2 {
    margin-right: 8px; } }
@media (min-width: 1200px) {
  .xl\:mr-3 {
    margin-right: 12px; } }
@media (min-width: 1200px) {
  .xl\:mr-4 {
    margin-right: 24px; } }
@media (min-width: 1200px) {
  .xl\:mr-5 {
    margin-right: 48px; } }
@media (min-width: 1200px) {
  .xl\:mr-6 {
    margin-right: 72px; } }
@media (min-width: 1200px) {
  .xl\:mr-7 {
    margin-right: 144px; } }
@media (min-width: 1200px) {
  .xl\:ml-0 {
    margin-left: 0; } }
@media (min-width: 1200px) {
  .xl\:ml-1 {
    margin-left: 4px; } }
@media (min-width: 1200px) {
  .xl\:ml-2 {
    margin-left: 8px; } }
@media (min-width: 1200px) {
  .xl\:ml-3 {
    margin-left: 12px; } }
@media (min-width: 1200px) {
  .xl\:ml-4 {
    margin-left: 24px; } }
@media (min-width: 1200px) {
  .xl\:ml-5 {
    margin-left: 48px; } }
@media (min-width: 1200px) {
  .xl\:ml-6 {
    margin-left: 72px; } }
@media (min-width: 1200px) {
  .xl\:ml-7 {
    margin-left: 144px; } }
@media (min-width: 1440px) {
  .xxl\:p-0 {
    padding: 0; } }
@media (min-width: 1440px) {
  .xxl\:p-1 {
    padding: 4px; } }
@media (min-width: 1440px) {
  .xxl\:p-2 {
    padding: 8px; } }
@media (min-width: 1440px) {
  .xxl\:p-3 {
    padding: 12px; } }
@media (min-width: 1440px) {
  .xxl\:p-4 {
    padding: 24px; } }
@media (min-width: 1440px) {
  .xxl\:p-5 {
    padding: 48px; } }
@media (min-width: 1440px) {
  .xxl\:p-6 {
    padding: 72px; } }
@media (min-width: 1440px) {
  .xxl\:p-7 {
    padding: 144px; } }
@media (min-width: 1440px) {
  .xxl\:pt-0 {
    padding-top: 0; } }
@media (min-width: 1440px) {
  .xxl\:pt-1 {
    padding-top: 4px; } }
@media (min-width: 1440px) {
  .xxl\:pt-2 {
    padding-top: 8px; } }
@media (min-width: 1440px) {
  .xxl\:pt-3 {
    padding-top: 12px; } }
@media (min-width: 1440px) {
  .xxl\:pt-4 {
    padding-top: 24px; } }
@media (min-width: 1440px) {
  .xxl\:pt-5 {
    padding-top: 48px; } }
@media (min-width: 1440px) {
  .xxl\:pt-6 {
    padding-top: 72px; } }
@media (min-width: 1440px) {
  .xxl\:pt-7 {
    padding-top: 144px; } }
@media (min-width: 1440px) {
  .xxl\:pb-0 {
    padding-bottom: 0; } }
@media (min-width: 1440px) {
  .xxl\:pb-1 {
    padding-bottom: 4px; } }
@media (min-width: 1440px) {
  .xxl\:pb-2 {
    padding-bottom: 8px; } }
@media (min-width: 1440px) {
  .xxl\:pb-3 {
    padding-bottom: 12px; } }
@media (min-width: 1440px) {
  .xxl\:pb-4 {
    padding-bottom: 24px; } }
@media (min-width: 1440px) {
  .xxl\:pb-5 {
    padding-bottom: 48px; } }
@media (min-width: 1440px) {
  .xxl\:pb-6 {
    padding-bottom: 72px; } }
@media (min-width: 1440px) {
  .xxl\:pb-7 {
    padding-bottom: 144px; } }
@media (min-width: 1440px) {
  .xxl\:pr-0 {
    padding-right: 0; } }
@media (min-width: 1440px) {
  .xxl\:pr-1 {
    padding-right: 4px; } }
@media (min-width: 1440px) {
  .xxl\:pr-2 {
    padding-right: 8px; } }
@media (min-width: 1440px) {
  .xxl\:pr-3 {
    padding-right: 12px; } }
@media (min-width: 1440px) {
  .xxl\:pr-4 {
    padding-right: 24px; } }
@media (min-width: 1440px) {
  .xxl\:pr-5 {
    padding-right: 48px; } }
@media (min-width: 1440px) {
  .xxl\:pr-6 {
    padding-right: 72px; } }
@media (min-width: 1440px) {
  .xxl\:pr-7 {
    padding-right: 144px; } }
@media (min-width: 1440px) {
  .xxl\:pl-0 {
    padding-left: 0; } }
@media (min-width: 1440px) {
  .xxl\:pl-1 {
    padding-left: 4px; } }
@media (min-width: 1440px) {
  .xxl\:pl-2 {
    padding-left: 8px; } }
@media (min-width: 1440px) {
  .xxl\:pl-3 {
    padding-left: 12px; } }
@media (min-width: 1440px) {
  .xxl\:pl-4 {
    padding-left: 24px; } }
@media (min-width: 1440px) {
  .xxl\:pl-5 {
    padding-left: 48px; } }
@media (min-width: 1440px) {
  .xxl\:pl-6 {
    padding-left: 72px; } }
@media (min-width: 1440px) {
  .xxl\:pl-7 {
    padding-left: 144px; } }
@media (min-width: 1440px) {
  .xxl\:m-0 {
    margin: 0; } }
@media (min-width: 1440px) {
  .xxl\:m-1 {
    margin: 4px; } }
@media (min-width: 1440px) {
  .xxl\:m-2 {
    margin: 8px; } }
@media (min-width: 1440px) {
  .xxl\:m-3 {
    margin: 12px; } }
@media (min-width: 1440px) {
  .xxl\:m-4 {
    margin: 24px; } }
@media (min-width: 1440px) {
  .xxl\:m-5 {
    margin: 48px; } }
@media (min-width: 1440px) {
  .xxl\:m-6 {
    margin: 72px; } }
@media (min-width: 1440px) {
  .xxl\:m-7 {
    margin: 144px; } }
@media (min-width: 1440px) {
  .xxl\:mt-0 {
    margin-top: 0; } }
@media (min-width: 1440px) {
  .xxl\:mt-1 {
    margin-top: 4px; } }
@media (min-width: 1440px) {
  .xxl\:mt-2 {
    margin-top: 8px; } }
@media (min-width: 1440px) {
  .xxl\:mt-3 {
    margin-top: 12px; } }
@media (min-width: 1440px) {
  .xxl\:mt-4 {
    margin-top: 24px; } }
@media (min-width: 1440px) {
  .xxl\:mt-5 {
    margin-top: 48px; } }
@media (min-width: 1440px) {
  .xxl\:mt-6 {
    margin-top: 72px; } }
@media (min-width: 1440px) {
  .xxl\:mt-7 {
    margin-top: 144px; } }
@media (min-width: 1440px) {
  .xxl\:mb-0 {
    margin-bottom: 0; } }
@media (min-width: 1440px) {
  .xxl\:mb-1 {
    margin-bottom: 4px; } }
@media (min-width: 1440px) {
  .xxl\:mb-2 {
    margin-bottom: 8px; } }
@media (min-width: 1440px) {
  .xxl\:mb-3 {
    margin-bottom: 12px; } }
@media (min-width: 1440px) {
  .xxl\:mb-4 {
    margin-bottom: 24px; } }
@media (min-width: 1440px) {
  .xxl\:mb-5 {
    margin-bottom: 48px; } }
@media (min-width: 1440px) {
  .xxl\:mb-6 {
    margin-bottom: 72px; } }
@media (min-width: 1440px) {
  .xxl\:mb-7 {
    margin-bottom: 144px; } }
@media (min-width: 1440px) {
  .xxl\:mr-0 {
    margin-right: 0; } }
@media (min-width: 1440px) {
  .xxl\:mr-1 {
    margin-right: 4px; } }
@media (min-width: 1440px) {
  .xxl\:mr-2 {
    margin-right: 8px; } }
@media (min-width: 1440px) {
  .xxl\:mr-3 {
    margin-right: 12px; } }
@media (min-width: 1440px) {
  .xxl\:mr-4 {
    margin-right: 24px; } }
@media (min-width: 1440px) {
  .xxl\:mr-5 {
    margin-right: 48px; } }
@media (min-width: 1440px) {
  .xxl\:mr-6 {
    margin-right: 72px; } }
@media (min-width: 1440px) {
  .xxl\:mr-7 {
    margin-right: 144px; } }
@media (min-width: 1440px) {
  .xxl\:ml-0 {
    margin-left: 0; } }
@media (min-width: 1440px) {
  .xxl\:ml-1 {
    margin-left: 4px; } }
@media (min-width: 1440px) {
  .xxl\:ml-2 {
    margin-left: 8px; } }
@media (min-width: 1440px) {
  .xxl\:ml-3 {
    margin-left: 12px; } }
@media (min-width: 1440px) {
  .xxl\:ml-4 {
    margin-left: 24px; } }
@media (min-width: 1440px) {
  .xxl\:ml-5 {
    margin-left: 48px; } }
@media (min-width: 1440px) {
  .xxl\:ml-6 {
    margin-left: 72px; } }
@media (min-width: 1440px) {
  .xxl\:ml-7 {
    margin-left: 144px; } }
/**
 * Colors
 */
.color-primary {
  color: #ffa941; }
.color-primary-dark {
  color: #da7700; }
.color-primary-light {
  color: #ffd7a7; }
.color-secondary {
  color: #4648d2; }
.color-secondary-dark {
  color: #1113a1; }
.color-secondary-light {
  color: #8b8df3; }
.color-red {
  color: #FA3D49; }
.color-red-dark {
  color: #d1000d; }
.color-red-light {
  color: #ff9ea4; }
.color-orange {
  color: #ffa941; }
.color-orange-dark {
  color: #da7700; }
.color-orange-light {
  color: #ffd7a7; }
.color-yellow {
  color: #ffe433; }
.color-yellow-dark {
  color: #ccb100; }
.color-yellow-light {
  color: #fff299; }
.color-green {
  color: #4BC45F; }
.color-green-dark {
  color: #19902d; }
.color-green-light {
  color: #8aeb9a; }
.color-blue {
  color: #3333f3; }
.color-blue-dark {
  color: #0000c0; }
.color-blue-light {
  color: #8d8dff; }
.color-indigo {
  color: #178cd6; }
.color-indigo-dark {
  color: #005387; }
.color-indigo-light {
  color: #54bdff; }
.color-violet {
  color: #8b26f1; }
.color-violet-dark {
  color: #5800b1; }
.color-violet-light {
  color: #be7eff; }
.color-black {
  color: black; }
.color-gray-darkest {
  color: #333333; }
.color-gray-dark {
  color: #6b6b6b; }
.color-gray {
  color: #999999; }
.color-gray-light {
  color: #cccccc; }
.color-gray-lightest {
  color: #ebebeb; }
.color-white {
  color: white; }
.bg-primary {
  background-color: #ffa941; }
.bg-primary-dark {
  background-color: #da7700; }
.bg-primary-light {
  background-color: #ffd7a7; }
.bg-secondary {
  background-color: #4648d2; }
.bg-secondary-dark {
  background-color: #1113a1; }
.bg-secondary-light {
  background-color: #8b8df3; }
.bg-red {
  background-color: #FA3D49; }
.bg-red-dark {
  background-color: #d1000d; }
.bg-red-light {
  background-color: #ff9ea4; }
.bg-orange {
  background-color: #ffa941; }
.bg-orange-dark {
  background-color: #da7700; }
.bg-orange-light {
  background-color: #ffd7a7; }
.bg-yellow {
  background-color: #ffe433; }
.bg-yellow-dark {
  background-color: #ccb100; }
.bg-yellow-light {
  background-color: #fff299; }
.bg-green {
  background-color: #4BC45F; }
.bg-green-dark {
  background-color: #19902d; }
.bg-green-light {
  background-color: #8aeb9a; }
.bg-blue {
  background-color: #3333f3; }
.bg-blue-dark {
  background-color: #0000c0; }
.bg-blue-light {
  background-color: #8d8dff; }
.bg-indigo {
  background-color: #178cd6; }
.bg-indigo-dark {
  background-color: #005387; }
.bg-indigo-light {
  background-color: #54bdff; }
.bg-violet {
  background-color: #8b26f1; }
.bg-violet-dark {
  background-color: #5800b1; }
.bg-violet-light {
  background-color: #be7eff; }
.bg-black {
  background-color: black; }
.bg-gray-darkest {
  background-color: #333333; }
.bg-gray-dark {
  background-color: #6b6b6b; }
.bg-gray {
  background-color: #999999; }
.bg-gray-light {
  background-color: #cccccc; }
.bg-gray-lightest {
  background-color: #ebebeb; }
.bg-white {
  background-color: white; }
/**
 * Shadows
 */
.shadow-primary {
  box-shadow: 8px 14px 38px rgba(0, 0, 0, 0.04), 0px 3px 5px rgba(0, 0, 0, 0.04); }
.shadow-secondary {
  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2); }
.shadow-input {
  box-shadow: 0 0 12px 6px rgba(70, 72, 210, 0.07); }
/**
 * Text
 */
/** Align
--------------------------------------------------*/
.text-left {
  text-align: left; }
.text-center {
  text-align: center; }
.text-right {
  text-align: right; }
.text-justify {
  text-align: justify; }
/** Responsive */
@media (min-width: 320px) {
  .xxs\:text-left {
    text-align: left; } }
@media (min-width: 320px) {
  .xxs\:text-center {
    text-align: center; } }
@media (min-width: 320px) {
  .xxs\:text-right {
    text-align: right; } }
@media (min-width: 320px) {
  .xxs\:text-justify {
    text-align: justify; } }
@media (min-width: 480px) {
  .xs\:text-left {
    text-align: left; } }
@media (min-width: 480px) {
  .xs\:text-center {
    text-align: center; } }
@media (min-width: 480px) {
  .xs\:text-right {
    text-align: right; } }
@media (min-width: 480px) {
  .xs\:text-justify {
    text-align: justify; } }
@media (min-width: 640px) {
  .sm\:text-left {
    text-align: left; } }
@media (min-width: 640px) {
  .sm\:text-center {
    text-align: center; } }
@media (min-width: 640px) {
  .sm\:text-right {
    text-align: right; } }
@media (min-width: 640px) {
  .sm\:text-justify {
    text-align: justify; } }
@media (min-width: 768px) {
  .md\:text-left {
    text-align: left; } }
@media (min-width: 768px) {
  .md\:text-center {
    text-align: center; } }
@media (min-width: 768px) {
  .md\:text-right {
    text-align: right; } }
@media (min-width: 768px) {
  .md\:text-justify {
    text-align: justify; } }
@media (min-width: 992px) {
  .lg\:text-left {
    text-align: left; } }
@media (min-width: 992px) {
  .lg\:text-center {
    text-align: center; } }
@media (min-width: 992px) {
  .lg\:text-right {
    text-align: right; } }
@media (min-width: 992px) {
  .lg\:text-justify {
    text-align: justify; } }
@media (min-width: 1200px) {
  .xl\:text-left {
    text-align: left; } }
@media (min-width: 1200px) {
  .xl\:text-center {
    text-align: center; } }
@media (min-width: 1200px) {
  .xl\:text-right {
    text-align: right; } }
@media (min-width: 1200px) {
  .xl\:text-justify {
    text-align: justify; } }
@media (min-width: 1440px) {
  .xxl\:text-left {
    text-align: left; } }
@media (min-width: 1440px) {
  .xxl\:text-center {
    text-align: center; } }
@media (min-width: 1440px) {
  .xxl\:text-right {
    text-align: right; } }
@media (min-width: 1440px) {
  .xxl\:text-justify {
    text-align: justify; } }
/** Transform
--------------------------------------------------*/
.text-uppercase {
  text-transform: uppercase; }
.text-lowercase {
  text-transform: lowercase; }
/** Style
--------------------------------------------------*/
.text-italic {
  font-style: italic; }
.text-style-normal {
  font-style: normal; }
/** Sizes
--------------------------------------------------*/
.fs-giga {
  font-size: 76px; }
.fs-mega {
  font-size: 54px; }
.fs-alpha {
  font-size: 36px; }
.fs-beta {
  font-size: 28px; }
.fs-gamma {
  font-size: 21px; }
.fs-delta {
  font-size: 18px; }
.fs-epsilon {
  font-size: 16px; }
.fs-zeta {
  font-size: 14px; }
.fs-omega {
  font-size: 12px; }
/** Responsive */
@media (min-width: 320px) {
  .xxs\:fs-giga {
    font-size: 76px; } }
@media (min-width: 320px) {
  .xxs\:fs-mega {
    font-size: 54px; } }
@media (min-width: 320px) {
  .xxs\:fs-alpha {
    font-size: 36px; } }
@media (min-width: 320px) {
  .xxs\:fs-beta {
    font-size: 28px; } }
@media (min-width: 320px) {
  .xxs\:fs-gamma {
    font-size: 21px; } }
@media (min-width: 320px) {
  .xxs\:fs-delta {
    font-size: 18px; } }
@media (min-width: 320px) {
  .xxs\:fs-epsilon {
    font-size: 16px; } }
@media (min-width: 320px) {
  .xxs\:fs-zeta {
    font-size: 14px; } }
@media (min-width: 320px) {
  .xxs\:fs-omega {
    font-size: 12px; } }
@media (min-width: 480px) {
  .xs\:fs-giga {
    font-size: 76px; } }
@media (min-width: 480px) {
  .xs\:fs-mega {
    font-size: 54px; } }
@media (min-width: 480px) {
  .xs\:fs-alpha {
    font-size: 36px; } }
@media (min-width: 480px) {
  .xs\:fs-beta {
    font-size: 28px; } }
@media (min-width: 480px) {
  .xs\:fs-gamma {
    font-size: 21px; } }
@media (min-width: 480px) {
  .xs\:fs-delta {
    font-size: 18px; } }
@media (min-width: 480px) {
  .xs\:fs-epsilon {
    font-size: 16px; } }
@media (min-width: 480px) {
  .xs\:fs-zeta {
    font-size: 14px; } }
@media (min-width: 480px) {
  .xs\:fs-omega {
    font-size: 12px; } }
@media (min-width: 640px) {
  .sm\:fs-giga {
    font-size: 76px; } }
@media (min-width: 640px) {
  .sm\:fs-mega {
    font-size: 54px; } }
@media (min-width: 640px) {
  .sm\:fs-alpha {
    font-size: 36px; } }
@media (min-width: 640px) {
  .sm\:fs-beta {
    font-size: 28px; } }
@media (min-width: 640px) {
  .sm\:fs-gamma {
    font-size: 21px; } }
@media (min-width: 640px) {
  .sm\:fs-delta {
    font-size: 18px; } }
@media (min-width: 640px) {
  .sm\:fs-epsilon {
    font-size: 16px; } }
@media (min-width: 640px) {
  .sm\:fs-zeta {
    font-size: 14px; } }
@media (min-width: 640px) {
  .sm\:fs-omega {
    font-size: 12px; } }
@media (min-width: 768px) {
  .md\:fs-giga {
    font-size: 76px; } }
@media (min-width: 768px) {
  .md\:fs-mega {
    font-size: 54px; } }
@media (min-width: 768px) {
  .md\:fs-alpha {
    font-size: 36px; } }
@media (min-width: 768px) {
  .md\:fs-beta {
    font-size: 28px; } }
@media (min-width: 768px) {
  .md\:fs-gamma {
    font-size: 21px; } }
@media (min-width: 768px) {
  .md\:fs-delta {
    font-size: 18px; } }
@media (min-width: 768px) {
  .md\:fs-epsilon {
    font-size: 16px; } }
@media (min-width: 768px) {
  .md\:fs-zeta {
    font-size: 14px; } }
@media (min-width: 768px) {
  .md\:fs-omega {
    font-size: 12px; } }
@media (min-width: 992px) {
  .lg\:fs-giga {
    font-size: 76px; } }
@media (min-width: 992px) {
  .lg\:fs-mega {
    font-size: 54px; } }
@media (min-width: 992px) {
  .lg\:fs-alpha {
    font-size: 36px; } }
@media (min-width: 992px) {
  .lg\:fs-beta {
    font-size: 28px; } }
@media (min-width: 992px) {
  .lg\:fs-gamma {
    font-size: 21px; } }
@media (min-width: 992px) {
  .lg\:fs-delta {
    font-size: 18px; } }
@media (min-width: 992px) {
  .lg\:fs-epsilon {
    font-size: 16px; } }
@media (min-width: 992px) {
  .lg\:fs-zeta {
    font-size: 14px; } }
@media (min-width: 992px) {
  .lg\:fs-omega {
    font-size: 12px; } }
@media (min-width: 1200px) {
  .xl\:fs-giga {
    font-size: 76px; } }
@media (min-width: 1200px) {
  .xl\:fs-mega {
    font-size: 54px; } }
@media (min-width: 1200px) {
  .xl\:fs-alpha {
    font-size: 36px; } }
@media (min-width: 1200px) {
  .xl\:fs-beta {
    font-size: 28px; } }
@media (min-width: 1200px) {
  .xl\:fs-gamma {
    font-size: 21px; } }
@media (min-width: 1200px) {
  .xl\:fs-delta {
    font-size: 18px; } }
@media (min-width: 1200px) {
  .xl\:fs-epsilon {
    font-size: 16px; } }
@media (min-width: 1200px) {
  .xl\:fs-zeta {
    font-size: 14px; } }
@media (min-width: 1200px) {
  .xl\:fs-omega {
    font-size: 12px; } }
@media (min-width: 1440px) {
  .xxl\:fs-giga {
    font-size: 76px; } }
@media (min-width: 1440px) {
  .xxl\:fs-mega {
    font-size: 54px; } }
@media (min-width: 1440px) {
  .xxl\:fs-alpha {
    font-size: 36px; } }
@media (min-width: 1440px) {
  .xxl\:fs-beta {
    font-size: 28px; } }
@media (min-width: 1440px) {
  .xxl\:fs-gamma {
    font-size: 21px; } }
@media (min-width: 1440px) {
  .xxl\:fs-delta {
    font-size: 18px; } }
@media (min-width: 1440px) {
  .xxl\:fs-epsilon {
    font-size: 16px; } }
@media (min-width: 1440px) {
  .xxl\:fs-zeta {
    font-size: 14px; } }
@media (min-width: 1440px) {
  .xxl\:fs-omega {
    font-size: 12px; } }
/** Decoration
--------------------------------------------------*/
.text-underline {
  text-decoration: underline; }
.hover\:text-underline:hover {
  text-decoration: underline; }
.text-line-through {
  text-decoration: line-through; }
.hover\:text-line-through:hover {
  text-decoration: line-through; }
.text-no-underline {
  text-decoration: none; }
.hover\:text-no-underline:hover {
  text-decoration: none; }
/** Font Weights
--------------------------------------------------*/
.font-thin {
  font-weight: 100; }
.font-extralight {
  font-weight: 200; }
.font-light {
  font-weight: 300; }
.font-normal {
  font-weight: 400; }
.font-medium {
  font-weight: 500; }
.font-bold {
  font-weight: 600; }
.font-extrabold {
  font-weight: 700; }
.font-black {
  font-weight: 800; }
/** Ellipsis
--------------------------------------------------*/
.text-ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden; }
/**
 * Rounded
 */
.rounded-0 {
  border-radius: 0; }
.rounded {
  border-radius: 3px; }
.rounded-1 {
  border-radius: 6px; }
.rounded-full {
  border-radius: 50%; }
/**
 * Display
 */
.d-block {
  display: block; }
.d-inline-block {
  display: inline-block; }
.d-inline {
  display: inline; }
.d-flex {
  display: flex; }
.d-inline-flex {
  display: inline-flex; }
.d-table {
  display: table; }
.d-table-row {
  display: table-row; }
.d-table-cell {
  display: table-cell; }
.d-grid {
  display: grid; }
.d-none {
  display: none; }
/* Display class loop - Responsive */
@media (min-width: 320px) {
  .xxs\:d-block {
    display: block; } }
@media (min-width: 320px) {
  .xxs\:d-inline-block {
    display: inline-block; } }
@media (min-width: 320px) {
  .xxs\:d-inline {
    display: inline; } }
@media (min-width: 320px) {
  .xxs\:d-flex {
    display: flex; } }
@media (min-width: 320px) {
  .xxs\:d-inline-flex {
    display: inline-flex; } }
@media (min-width: 320px) {
  .xxs\:d-table {
    display: table; } }
@media (min-width: 320px) {
  .xxs\:d-table-row {
    display: table-row; } }
@media (min-width: 320px) {
  .xxs\:d-table-cell {
    display: table-cell; } }
@media (min-width: 320px) {
  .xxs\:d-grid {
    display: grid; } }
@media (min-width: 320px) {
  .xxs\:d-none {
    display: none; } }
@media (min-width: 480px) {
  .xs\:d-block {
    display: block; } }
@media (min-width: 480px) {
  .xs\:d-inline-block {
    display: inline-block; } }
@media (min-width: 480px) {
  .xs\:d-inline {
    display: inline; } }
@media (min-width: 480px) {
  .xs\:d-flex {
    display: flex; } }
@media (min-width: 480px) {
  .xs\:d-inline-flex {
    display: inline-flex; } }
@media (min-width: 480px) {
  .xs\:d-table {
    display: table; } }
@media (min-width: 480px) {
  .xs\:d-table-row {
    display: table-row; } }
@media (min-width: 480px) {
  .xs\:d-table-cell {
    display: table-cell; } }
@media (min-width: 480px) {
  .xs\:d-grid {
    display: grid; } }
@media (min-width: 480px) {
  .xs\:d-none {
    display: none; } }
@media (min-width: 640px) {
  .sm\:d-block {
    display: block; } }
@media (min-width: 640px) {
  .sm\:d-inline-block {
    display: inline-block; } }
@media (min-width: 640px) {
  .sm\:d-inline {
    display: inline; } }
@media (min-width: 640px) {
  .sm\:d-flex {
    display: flex; } }
@media (min-width: 640px) {
  .sm\:d-inline-flex {
    display: inline-flex; } }
@media (min-width: 640px) {
  .sm\:d-table {
    display: table; } }
@media (min-width: 640px) {
  .sm\:d-table-row {
    display: table-row; } }
@media (min-width: 640px) {
  .sm\:d-table-cell {
    display: table-cell; } }
@media (min-width: 640px) {
  .sm\:d-grid {
    display: grid; } }
@media (min-width: 640px) {
  .sm\:d-none {
    display: none; } }
@media (min-width: 768px) {
  .md\:d-block {
    display: block; } }
@media (min-width: 768px) {
  .md\:d-inline-block {
    display: inline-block; } }
@media (min-width: 768px) {
  .md\:d-inline {
    display: inline; } }
@media (min-width: 768px) {
  .md\:d-flex {
    display: flex; } }
@media (min-width: 768px) {
  .md\:d-inline-flex {
    display: inline-flex; } }
@media (min-width: 768px) {
  .md\:d-table {
    display: table; } }
@media (min-width: 768px) {
  .md\:d-table-row {
    display: table-row; } }
@media (min-width: 768px) {
  .md\:d-table-cell {
    display: table-cell; } }
@media (min-width: 768px) {
  .md\:d-grid {
    display: grid; } }
@media (min-width: 768px) {
  .md\:d-none {
    display: none; } }
@media (min-width: 992px) {
  .lg\:d-block {
    display: block; } }
@media (min-width: 992px) {
  .lg\:d-inline-block {
    display: inline-block; } }
@media (min-width: 992px) {
  .lg\:d-inline {
    display: inline; } }
@media (min-width: 992px) {
  .lg\:d-flex {
    display: flex; } }
@media (min-width: 992px) {
  .lg\:d-inline-flex {
    display: inline-flex; } }
@media (min-width: 992px) {
  .lg\:d-table {
    display: table; } }
@media (min-width: 992px) {
  .lg\:d-table-row {
    display: table-row; } }
@media (min-width: 992px) {
  .lg\:d-table-cell {
    display: table-cell; } }
@media (min-width: 992px) {
  .lg\:d-grid {
    display: grid; } }
@media (min-width: 992px) {
  .lg\:d-none {
    display: none; } }
@media (min-width: 1200px) {
  .xl\:d-block {
    display: block; } }
@media (min-width: 1200px) {
  .xl\:d-inline-block {
    display: inline-block; } }
@media (min-width: 1200px) {
  .xl\:d-inline {
    display: inline; } }
@media (min-width: 1200px) {
  .xl\:d-flex {
    display: flex; } }
@media (min-width: 1200px) {
  .xl\:d-inline-flex {
    display: inline-flex; } }
@media (min-width: 1200px) {
  .xl\:d-table {
    display: table; } }
@media (min-width: 1200px) {
  .xl\:d-table-row {
    display: table-row; } }
@media (min-width: 1200px) {
  .xl\:d-table-cell {
    display: table-cell; } }
@media (min-width: 1200px) {
  .xl\:d-grid {
    display: grid; } }
@media (min-width: 1200px) {
  .xl\:d-none {
    display: none; } }
@media (min-width: 1440px) {
  .xxl\:d-block {
    display: block; } }
@media (min-width: 1440px) {
  .xxl\:d-inline-block {
    display: inline-block; } }
@media (min-width: 1440px) {
  .xxl\:d-inline {
    display: inline; } }
@media (min-width: 1440px) {
  .xxl\:d-flex {
    display: flex; } }
@media (min-width: 1440px) {
  .xxl\:d-inline-flex {
    display: inline-flex; } }
@media (min-width: 1440px) {
  .xxl\:d-table {
    display: table; } }
@media (min-width: 1440px) {
  .xxl\:d-table-row {
    display: table-row; } }
@media (min-width: 1440px) {
  .xxl\:d-table-cell {
    display: table-cell; } }
@media (min-width: 1440px) {
  .xxl\:d-grid {
    display: grid; } }
@media (min-width: 1440px) {
  .xxl\:d-none {
    display: none; } }


/*# sourceMappingURL=orange.css.map*/