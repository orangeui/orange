{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/src/dom/polyfills.js","webpack:///./src/js/src/dropdown.js","webpack:///./src/js/src/toggle.js","webpack:///./src/js/src/input.js","webpack:///./src/js/src/textarea.js","webpack:///./src/js/src/progress-bar.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Element","matches","msMatchesSelector","webkitMatchesSelector","closest","el","this","parentElement","parentNode","nodeType","Dropdown","Classes","_value_class","_open_class","_search_class","Selectors","dropdown","dropdown_search","_input","_option","_text","dropdowns","_selectDropdownOption","event","stopPropagation","option","target","option_value","innerText","current_dropdown","querySelector","classList","add","remove","getDropdowns","document","querySelectorAll","closeDropdowns","undefined","length","activateDropdowns","current_value","options","ii","dropdown_option","dropdown_option_text","textContent","contains","addEventListener","filter_value","toUpperCase","indexOf","style","display","once","toggleDropdown","Toggle","State","_enabled_default","_disabled_default","_active_class","_toggle","_value","_enabled_data_setting","_disabled_data_setting","all_toggles","_assignValue","toggle","value_element","parent_toggle","checked","_getDataSetting","getAttribute","toggleValue","current_wrapper","activateToggles","toggle_wrapper","toggle_input","Input","_focus_class","text_inputs","activateTextInputs","text_input","toggleFocusClass","input","type","toggleValueClass","input_has_text","Textarea","textareas","activateTextareas","textarea","textarea_readonly","onInput","textarea_has_text","auto_expand_enabled","hasAttribute","auto_expand","offset","offsetHeight","clientHeight","height","scrollHeight","autoExpandTextarea","ProgressBar","_line_inner_text_below","_progress_bar","_progress_bar_line","_progress_bar_circle","_progress_bar_line_text","_progress_bar_line_color_wrapper","_progress_bar_circle_inner","_progress_bar_circle_path","_progress_bar_text","all_line_progress_bars","all_circle_progress_bars","_setLineTextClass","progress_bar","ariaValueNow","text_wrapper","_setLineHeight","dataset","strokeWidth","_setProgressBarWidthHeight","width","circle_element","assign","_relative_stroke_width","toFixed","_track_path","progress_bar_relative_stroke_width","radius","parseInt","parseFloat","_circle_path_style","perimeter","Math","PI","_perimeter","strokeDasharray","strokeDashoffset","transition","_set_custom_text_font_size","custom_text","stroke_width","text_style","fontSize","padding","checkLineProgressBars","checkCircleProgressBars","relative_stroke_width","circle_path","paths","paths_i","path","setAttribute"],"mappings":"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","file":"js/orange.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","if (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || \n                              Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function(s) {\n    var el = this;\n\n    do {\n      if (el.matches(s)) { return el }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  }\n}","/**\n * --------------------------------------------------------------------------\n * Orange (v1.2.0): js//src/dropdown.js\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n\nconst Dropdown = (function() {\n\n  /**\n  * ------------------------------------------------------------------------\n  * Constants\n  * ------------------------------------------------------------------------\n  */\n\n  const Classes = {\n    _value_class: 'has-value',\n    _open_class: 'is-open',\n    _search_class: 'o-form-dropdown--search'\n  }\n\n  const Selectors = {\n    dropdown: '.o-form-dropdown',\n    dropdown_search: 'o-form-dropdown--search',\n    _input: '.o-form-dropdown__input',\n    _option: '.o-form-dropdown__menu li',\n    _text: '.o-form-dropdown__text'\n  }\n\n  let dropdowns;\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Functions\n  * ------------------------------------------------------------------------\n  */\n\n  /**\n  * Private\n  */\n\n  // Function to check if dropdown is opened\n  function _isOpen (dropdown_el) {\n    return dropdown_el.classList.contains(Classes._open_class);\n  }\n\n  // Function to select option\n  function _selectDropdownOption (event) {\n    event.stopPropagation();\n\n    let option = event.target;\n    let option_value = option.innerText;\n    let current_dropdown = option.closest(Selectors.dropdown);\n    current_dropdown.querySelector(Selectors._input).value = option_value;\n    current_dropdown.querySelector(Selectors._text).innerText = option_value;\n\n    current_dropdown.classList.add(Classes._value_class);\n    current_dropdown.classList.remove(Classes._open_class);\n  }\n\n  // Function to check if dropdown is search\n  function _isSearch (dropdown_el) {\n    return dropdown_el.classList.contains(Classes._search_class);\n  }\n\n  /**\n  * Public\n  */\n\n  // Function to get all dropdowns\n  function getDropdowns () {\n    dropdowns = document.querySelectorAll(Selectors.dropdown);\n  }\n\n  // Function to activate all dropdowns\n  function activateDropdowns () {\n    getDropdowns();\n\n    for (let i = 0; i < dropdowns.length; i++) {\n      let dropdown = dropdowns[i]\n      let current_value = dropdown.querySelector(Selectors._input).value;\n\n      if (typeof current_value === 'string' && current_value !== ''){\n        dropdown.querySelector(Selectors._text).innerText = current_value;\n        dropdown.classList.add(Classes._value_class);\n      }\n\n      // List items\n      let options = dropdown.querySelectorAll(Selectors._option);\n\n      for (let ii = 0; ii < options.length; ii++) {\n        let dropdown_option = options[ii];\n        let dropdown_option_text = dropdown_option.textContent || dropdown_option.innerText;\n\n        // Add event listener to search trough the list\n        if(_isSearch(dropdown)) {\n          dropdown.addEventListener('keyup', function () {\n            let repeat_current_value = dropdown.querySelector(Selectors._input).value;\n            let filter_value =  repeat_current_value.toUpperCase();\n\n            if (dropdown_option_text.toUpperCase().indexOf(filter_value) > -1) {\n              dropdown_option.style.display = \"\";\n            } else {\n              dropdown_option.style.display = \"none\";\n            }\n          })\n        }\n\n        dropdown_option.addEventListener('click', _selectDropdownOption, { once: true });\n      }\n    }\n\n    document.addEventListener('click', function(event){\n      if (!event.target.closest(Selectors.dropdown)){\n        event.stopPropagation();\n        closeDropdowns();\n      }\n    }, { once:true } );\n  }\n\n  // Function to toggle dropdown active class\n  function toggleDropdown (event) {\n    let dropdown = event.target;\n    let current_dropdown = dropdown.closest(Selectors.dropdown);\n    if (_isOpen(current_dropdown)) {\n      current_dropdown.classList.remove(Classes._open_class);\n    } else {\n      current_dropdown.classList.add(Classes._open_class);\n    }\n  }\n\n  // Function to close dropdowns\n  function closeDropdowns() {\n    if (dropdowns === undefined || dropdowns.length === 0) {\n      getDropdowns();\n    }\n\n    for (let i = 0; i < dropdowns.length; i++) {\n      let dropdown = dropdowns[i];\n      dropdown.classList.remove(Classes._open_class);\n    }\n  }\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Expose public variables and functions\n  * ------------------------------------------------------------------------\n  */\n  return {\n    dropdowns: dropdowns,\n    getDropdowns: getDropdowns,\n    activateDropdowns: activateDropdowns,\n    toggleDropdown: toggleDropdown,\n    closeDropdowns: closeDropdowns,\n    dropdown: Selectors.dropdown\n  }\n\n})()\n\n// On init run getDropdowns\nDropdown.getDropdowns();\n\n// On init run activateToggles if they exist\nDropdown.activateDropdowns()\n\n// Add click event\ndocument.addEventListener('click', function (event) {\n  if (!Dropdown.dropdowns){\n    Dropdown.activateDropdowns()\n  }\n\n  const isDropdownLabel = event.target.classList.contains('o-form-dropdown__label') ||\n                          event.target.classList.contains('o-form-dropdown__text') ||\n                          event.target.classList.contains('o-form-dropdown__input')\n\n  if (isDropdownLabel) {\n    Dropdown.closeDropdowns()\n    Dropdown.toggleDropdown(event)\n  }\n\n  if (!event.target.closest(Dropdown.dropdown)) {\n    event.stopPropagation()\n    Dropdown.closeDropdowns()\n  }\n})\n\nexport default Dropdown\n","/**\n * --------------------------------------------------------------------------\n * Orange (v1.2.0): js//src/toggle.js\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n\nconst Toggle = (function() {\n\n  /**\n  * ------------------------------------------------------------------------\n  * Constants\n  * ------------------------------------------------------------------------\n  */\n\n  const State = {\n    _enabled_default: \"On\",\n    _disabled_default: \"Off\"\n  }\n\n  const Classes = {\n    _active_class: \"is-checked\"\n  }\n\n  const Selectors = {\n    _toggle: \".o-toggle\",\n    _input: \"input[type='checkbox']\",\n    _value: \".o-toggle__value\",\n    _enabled_data_setting: \"data-enabled\",\n    _disabled_data_setting: \"data-disabled\"\n  }\n\n  const all_toggles = document.querySelectorAll(Selectors._toggle)\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Functions\n  * ------------------------------------------------------------------------\n  */\n\n  /**\n  * Private\n  */\n\n  // Function to assign value to toggle\n  function _assignValue(toggle, value_element) {\n    let parent_toggle = toggle.closest(Selectors._toggle)\n\n    if (toggle.checked) {\n      _getDataSetting(value_element, '_enabled')\n\n      parent_toggle.classList.add(Classes._active_class)\n\n    } else {\n      _getDataSetting(value_element, '_disabled')\n      \n      parent_toggle.classList.remove(Classes._active_class)\n    }\n  }\n\n  function _getDataSetting (value_element, property) {\n    if (value_element) {\n      value_element.innerText = value_element.getAttribute(Selectors[`${property}_data_setting`]) || State[`${property}_default`]\n    }\n  }\n\n\n  /**\n  * Public\n  */\n\n  // Function to activate all toggles\n  function activateToggles() {\n    for (let i = 0; all_toggles.length > i; i++) {\n      let toggle_wrapper = all_toggles[i]\n      let toggle_input = toggle_wrapper.querySelector(Selectors._input)\n      let value_element = toggle_wrapper.querySelector(Selectors._value)\n\n      _assignValue(toggle_input, value_element)\n\n      toggle_input.addEventListener(\"change\", toggleValue, false)\n    }\n  }\n\n  // Function to change value\n  function toggleValue(event) {\n    const toggle = event.target\n    const current_wrapper = toggle.closest(Selectors._toggle)\n    const value_element = current_wrapper.querySelector(Selectors._value)\n\n    _assignValue(toggle, value_element)\n  }\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Expose public variables and functions\n  * ------------------------------------------------------------------------\n  */\n  return {\n    all_toggles: all_toggles,\n    activateToggles: activateToggles,\n    toggleValue: toggleValue\n  }\n\n})()\n\n// On init run activateToggles if they exist\nif (Toggle.all_toggles.length) {\n  Toggle.activateToggles()\n}\n\n// Add click event\ndocument.addEventListener('click', function (event) {\n  const isToggleInput = event.target.classList.contains('o-toggle__input')\n\n  if (isToggleInput) {\n    Toggle.toggleValue(event)\n  }\n})\n\nexport default Toggle\n","/**\n * --------------------------------------------------------------------------\n * Orange (v1.2.0): js//src/input.js\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n\nconst Input = (function() {\n\n  /**\n  * ------------------------------------------------------------------------\n  * Constants\n  * ------------------------------------------------------------------------\n  */\n\n  const Classes = {\n    _focus_class: 'has-focus',\n    _value_class: 'has-value'\n  }\n\n  const Selectors = {\n    _input: '.o-form .o-form__input',\n  }\n\n  const text_inputs = document.querySelectorAll(Selectors._input);\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Functions\n  * ------------------------------------------------------------------------\n  */\n\n  /**\n  * Public\n  */\n\n  // Function to activate all inputs\n  function activateTextInputs() {\n    for (var i = 0; i < text_inputs.length; i++) {\n      let text_input = text_inputs[i];\n\n      if (typeof text_input.value === 'string' && text_input.value !== ''){\n        text_input.classList.add(Classes._value_class);\n      }\n    }\n  }\n\n  // Function to toggle active class\n  function toggleFocusClass (event) {\n    let input = event.target;\n\n    if (input.classList.contains('o-form__input')) {\n      return event.type === 'focusin' && input.getAttribute('readonly') === null ? input.classList.add(Classes._focus_class) : input.classList.remove(Classes._focus_class)\n    }\n  }\n\n  function toggleValueClass (event) {\n    let input = event.target\n    let input_has_text = input.value !== '' && input.value !== null;\n\n    if (input.classList.contains('o-form__input')) {\n      return input_has_text ? input.classList.add(Classes._value_class) : input.classList.remove(Classes._value_class)\n    }\n  }\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Expose public variables and functions\n  * ------------------------------------------------------------------------\n  */\n  return {\n    text_inputs: text_inputs,\n    activateTextInputs: activateTextInputs,\n    toggleFocusClass: toggleFocusClass,\n    toggleValueClass: toggleValueClass\n  }\n\n})();\n\n// On init run activateTextInputs if they exist\nif (Input.text_inputs.length){\n  Input.activateTextInputs();\n}\n\n// Add input event (check if typing inside input)\ndocument.addEventListener('input', Input.toggleValueClass, false)\n\n// Add focusin event\ndocument.addEventListener('focusin', Input.toggleFocusClass, false)\n\n// Add focusout event\ndocument.addEventListener('focusout', Input.toggleFocusClass, false)\n\nexport default Input\n","/**\n * --------------------------------------------------------------------------\n * Orange (v1.2.0): js//src/textarea.js\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n\nconst Textarea = (function() {\n\n  /**\n  * ------------------------------------------------------------------------\n  * Constants\n  * ------------------------------------------------------------------------\n  */\n\n  const Classes = {\n    _focus_class: 'has-focus',\n    _value_class: 'has-value'\n  }\n\n  const Selectors = {\n    _textarea: '.o-form .o-form__textarea',\n    _read_only: 'readonly',\n    auto_expand: 'data-auto-expand'\n  }\n\n  const textareas = document.querySelectorAll(Selectors._textarea);\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Functions\n  * ------------------------------------------------------------------------\n  */\n\n  /**\n  * Public\n  */\n\n  // Function to activate all textareas\n  function activateTextareas () {\n    for (let i = 0; i < textareas.length; i++) {\n      let textarea = textareas[i];\n\n      if (typeof textarea.value === 'string' && textarea.value !== ''){\n        textarea.classList.add(Classes._value_class);\n      }\n    }\n  }\n\n  // Function to toggle active class\n  function toggleFocusClass (event) {\n    let textarea = event.target;\n    let textarea_readonly = textarea.getAttribute('readonly') === 'readonly' || textarea.getAttribute('readonly') === '';\n\n    if (textarea.classList.contains('o-form__textarea')) {\n      return event.type === 'focusin' && !textarea_readonly ? textarea.classList.add(Classes._focus_class) : textarea.classList.remove(Classes._focus_class)\n    }\n  }\n\n  // Function to add posibility for auto expanding textarea\n  function autoExpandTextarea (event) {\n    const el = event.target;\n    const offset = el.offsetHeight - el.clientHeight;\n\n    if (el.value) {\n      el.style.height = 'auto';\n      el.style.height = el.scrollHeight + offset + 'px';\n    } else {\n      el.style.height = 'auto';\n    }\n  }\n\n  function onInput (event) {\n    let textarea = event.target\n    let textarea_has_text = textarea.value !== '' && textarea.value !== null;\n    let auto_expand_enabled = event.target.hasAttribute(Textarea.auto_expand)\n\n    if (textarea.classList.contains('o-form__textarea')) {\n      if (auto_expand_enabled) {\n        autoExpandTextarea(event)\n      }\n\n      return textarea_has_text ? textarea.classList.add(Classes._value_class) : textarea.classList.remove(Classes._value_class)\n    }\n  }\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Expose public variables and functions\n  * ------------------------------------------------------------------------\n  */\n  return {\n    textareas: textareas,\n    activateTextareas: activateTextareas,\n    toggleFocusClass: toggleFocusClass,\n    onInput: onInput,\n    auto_expand: Selectors.auto_expand\n  }\n\n})();\n\n// On init run activateTextareas if they exist\nif (Textarea.textareas.length) {\n  Textarea.activateTextareas();\n}\n\n// Add focusin event\ndocument.addEventListener('focusin', Textarea.toggleFocusClass, false)\n\n// Add focusout event\ndocument.addEventListener('focusout', Textarea.toggleFocusClass, false)\n\n// Add input event (check if typing inside textarea)\ndocument.addEventListener('input', Textarea.onInput, false)\n\nexport default Textarea\n","/**\n * --------------------------------------------------------------------------\n * Orange (v1.2.0): js//src/progress-bar.js\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n\nconst ProgressBar = (function() {\n\n  /**\n  * ------------------------------------------------------------------------\n  * Constants\n  * ------------------------------------------------------------------------\n  */\n\n  const Classes = {\n    _line_inner_text_below: \"o-progress-bar__line-innerText--below\"\n  }\n\n  const Selectors = {\n    _progress_bar: \".o-progress-bar\",\n    _progress_bar_line: \".o-progress-bar--line\",\n    _progress_bar_circle: \".o-progress-bar--circle\",\n    _progress_bar_line_text: \".o-progress-bar__line-innerText\",\n    _progress_bar_line_color_wrapper: \".o-progress-bar__line-outer\",\n    _progress_bar_circle_inner: \".o-progress-bar__circle\",\n    _progress_bar_circle_path: \".o-progress-bar__circle-path\",\n    _progress_bar_text: \".o-progress-bar__text\"\n  }\n\n  const all_line_progress_bars = document.querySelectorAll(Selectors._progress_bar_line)\n  const all_circle_progress_bars = document.querySelectorAll(Selectors._progress_bar_circle) \n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Functions\n  * ------------------------------------------------------------------------\n  */\n\n  /**\n  * Private\n  */\n\n  function _setLineTextClass (progress_bar) {\n    const current_value = progress_bar.ariaValueNow\n    const text_wrapper = progress_bar.querySelector(Selectors._progress_bar_line_text)\n\n    if (text_wrapper) {\n      current_value > 49 ? text_wrapper.classList.remove(Classes._line_inner_text_below) : text_wrapper.classList.add(Classes._line_inner_text_below)\n    }\n  }\n\n  function _setLineHeight (progress_bar) {\n    const height = progress_bar.dataset.strokeWidth\n    const color_wrapper = progress_bar.querySelector(Selectors._progress_bar_line_color_wrapper)\n    \n    color_wrapper.style.height = height + 'px';\n  }\n\n  /** Circle private functions\n  --------------------------------------------------*/\n  function _setProgressBarWidthHeight (progress_bar) {\n    const width = progress_bar.dataset.width\n    const circle_element = progress_bar.querySelector(Selectors._progress_bar_circle_inner)\n\n    Object.assign(circle_element.style, { width: width + 'px', height: width + 'px' })\n  }\n  \n  function _relative_stroke_width (progress_bar) {\n    const width = progress_bar.dataset.width\n    const stroke_width = progress_bar.dataset.strokeWidth\n\n    return (stroke_width / width * 100).toFixed(1)\n  }\n\n  function _track_path (progress_bar_relative_stroke_width) {\n    const radius = parseInt(50 - parseFloat(progress_bar_relative_stroke_width) / 2, 10)\n\n    return `M 50 50 m 0 -${radius} a ${radius} ${radius} 0 1 1 0 ${radius * 2} a ${radius} ${radius} 0 1 1 0 -${radius * 2}`\n  }\n\n  function _perimeter (progress_bar_relative_stroke_width) {\n    const radius = 50 - parseFloat(progress_bar_relative_stroke_width) / 2\n    return 2 * Math.PI * radius\n  }\n\n  function _circle_path_style (progress_bar) {\n    const current_value = progress_bar.ariaValueNow\n    const perimeter = _perimeter(_relative_stroke_width(progress_bar))\n\n    return {\n      strokeDasharray: `${perimeter}px,${perimeter}px`,\n      strokeDashoffset: (1 - current_value / 100) * perimeter + 'px',\n      transition: 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease'\n    }\n  }\n\n  function _set_custom_text_font_size (progress_bar) {\n    const width = progress_bar.dataset.width\n    const custom_text = progress_bar.querySelector(Selectors._progress_bar_text)\n    const stroke_width = parseInt(_relative_stroke_width(progress_bar)) + 5\n\n    if (custom_text) {\n      const text_size = (width * 0.111111 + 2) + 'px';\n      const text_style = {\n        fontSize: text_size,\n        padding: `0px ${stroke_width}px`,\n      }\n\n      Object.assign(custom_text.style, text_style);\n    }\n  }\n\n  // Function to assign value to toggle\n  // function _assignValue(toggle, value_element) {\n  //   let parent_toggle = toggle.closest(Selectors._toggle)\n\n  //   if (toggle.checked) {\n  //     _getDataSetting(value_element, '_enabled')\n\n  //     parent_toggle.classList.add(Classes._active_class)\n\n  //   } else {\n  //     _getDataSetting(value_element, '_disabled')\n      \n  //     parent_toggle.classList.remove(Classes._active_class)\n  //   }\n  // }\n\n  // function _getDataSetting (value_element, property) {\n  //   if (value_element) {\n  //     value_element.innerText = value_element.getAttribute(Selectors[`${property}_data_setting`]) || State[`${property}_default`]\n  //   }\n  // }\n\n\n  /**\n  * Public\n  */\n\n  function checkLineProgressBars () {\n    for (let i = all_line_progress_bars.length - 1; i >= 0; i--) {\n      let progress_bar = all_line_progress_bars[i]\n\n      _setLineTextClass(progress_bar)\n      _setLineHeight(progress_bar)\n    }\n  }\n\n  function checkCircleProgressBars () {\n    for (let i = all_circle_progress_bars.length - 1; i >= 0; i--) {\n      let progress_bar = all_circle_progress_bars[i]\n      let relative_stroke_width = _relative_stroke_width(progress_bar)\n      let circle_path = progress_bar.querySelector(Selectors._progress_bar_circle_path)\n      let paths = progress_bar.querySelectorAll('path')\n      \n      _setProgressBarWidthHeight(progress_bar)\n\n      // Set styles to Main path (percentage path) \n      Object.assign(circle_path.style, _circle_path_style(progress_bar));\n\n      // Set d and stroke-width to paths\n      for (var paths_i = paths.length - 1; paths_i >= 0; paths_i--) {\n        let path = paths[paths_i]\n\n        path.setAttribute('d', _track_path(relative_stroke_width))\n        path.setAttribute('stroke-width', relative_stroke_width)\n      }\n\n      _set_custom_text_font_size(progress_bar)\n    }\n  }\n\n  // Function to activate all toggles\n  // function activateToggles() {\n  //   for (let i = 0; all_toggles.length > i; i++) {\n  //     let toggle_wrapper = all_toggles[i]\n  //     let toggle_input = toggle_wrapper.querySelector(Selectors._input)\n  //     let value_element = toggle_wrapper.querySelector(Selectors._value)\n\n  //     _assignValue(toggle_input, value_element)\n\n  //     toggle_input.addEventListener(\"change\", toggleValue, false)\n  //   }\n  // }\n\n  // Function to change value\n  // function toggleValue(event) {\n  //   const toggle = event.target\n  //   const current_wrapper = toggle.closest(Selectors._toggle)\n  //   const value_element = current_wrapper.querySelector(Selectors._value)\n\n  //   _assignValue(toggle, value_element)\n  // }\n\n\n\n  /**\n  * ------------------------------------------------------------------------\n  * Expose public variables and functions\n  * ------------------------------------------------------------------------\n  */\n  return {\n    all_line_progress_bars: all_line_progress_bars,\n    checkLineProgressBars: checkLineProgressBars,\n    all_circle_progress_bars: all_circle_progress_bars,\n    checkCircleProgressBars: checkCircleProgressBars\n  }\n\n})()\n\n// On init run activateToggles if they exist\n// if (Toggle.all_toggles.length) {\n//   Toggle.activateToggles()\n// }\n\nif (ProgressBar.all_line_progress_bars.length) {\n  ProgressBar.checkLineProgressBars();\n}\n\nProgressBar.checkCircleProgressBars();\n\n\n// Add click event\n// document.addEventListener('click', function (event) {\n//   const isToggleInput = event.target.classList.contains('o-toggle__input')\n\n//   if (isToggleInput) {\n//     Toggle.toggleValue(event)\n//   }\n// })\n\nexport default ProgressBar\n"],"sourceRoot":""}