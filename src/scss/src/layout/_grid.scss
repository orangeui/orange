/**
 * Grid
 */

/**
  Container
*/
.container {
  max-width: $container-max-width;

  /*
   Responsive media query
   On Extra-Small screens and down, container is full width
 */
  /* Width 768px on small devices (768px and more) */
  @media #{$tablet-and-up} {
    width: 768px;
  }

  /* Width 936px on medium devices (960px and more) */
  @media #{$small-desktop-and-up} {
    width: 960px;
  }

  /* Width 1140px on large devices (1160px and more) */
  @media #{$desktop-and-up} {
    width: 1140px;
  }

  /* Width 1440px on large devices (1440px and more) */
  @media #{$large-desktop-and-up} {
    width: 1440px;
  }
}

.container, .container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $container-gap;
  padding-left: $container-gap;
}

/**
  Grid
*/
@mixin grid-column-auto-fill ($min-width) {
  grid-template-columns: repeat(auto-fill, minmax($min-width, $grid-column-max-width));
}

/* Grid (usually it was called row) */
.grid {
  display: grid;
  grid-gap: $grid-gap;
  grid-template-columns: repeat($grid-column-number, 1fr);
}

/* Auto Layout */
.grid--columns-auto {
  @include grid-column-auto-fill($grid-column-min-width-regular);

  &-narrow {
    @include grid-column-auto-fill($grid-column-min-width-narrow);
  }

  &-wide {
    @include grid-column-auto-fill($grid-column-min-width-wide);
  }
}

@mixin grid-span ($end, $property, $class, $span) {
  @for $i from 1 through $end {
    @if ($span == false) {
      .#{$class}-#{$i} {
        grid-#{$property}: span $i;
      }
    } @else {
      .#{$class}-pos-#{$i} {
        grid-#{$property}: $i;
      }
    }
  }
}

/* Column span */
@include grid-span($grid-column-number, 'column', 'col', false);

/* Column exact positions */
@include grid-span($grid-column-number, 'column', 'col', true);

/* Row span */
@include grid-span($grid-row-number, 'row', 'row', false);

/* Row exact positions */
@include grid-span($grid-row-number, 'row', 'row', true);

/* Column from - to position */
@for $column from 1 through $grid-column-number {
  @for $i from 1 through $column {
    @if $i < $column {
      .col-#{$i}\/#{$column} {
        grid-column: #{$i}/#{$column + 1}; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
      }
    }
  }
}

/* Row from - to position */
@for $row from 1 through $grid-row-number {
  @for $i from 1 through $row {
    @if $i < $row {
      .row-#{$i}\/#{$row} {
        grid-row: #{$i}/#{$row + 1}; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
      }
    }
  }
}
