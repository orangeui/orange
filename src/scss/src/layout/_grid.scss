/**
 * Grid
 */

/**
  Container
*/
.container {
  width: 100%;

  @each $breakpointKey, $breakpointValue in $breakpoints {
    @include breakpoint-and-up($breakpointKey) {
      max-width: map-get($container-max-widths, $breakpointKey);
    }
  }
}

.container, .container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $container-gap;
  padding-left: $container-gap;
}

/**
  Grid
*/
@mixin grid-column-auto-fill ($min-width) {
  grid-template-columns: repeat(auto-fill, minmax($min-width, $grid-column-max-width));
}

/* Grid (usually it was called row) */
.grid {
  display: grid;
  grid-gap: $grid-gap;
  grid-template-columns: repeat($grid-column-number, 1fr);
}

/* Auto Layout */
@if $include-grid-column-auto-fill {
  .grid--columns-auto {
    @include grid-column-auto-fill($grid-column-regular-min-width);

    &-narrow {
      @include grid-column-auto-fill($grid-column-narrow-min-width);
    }

    &-wide {
      @include grid-column-auto-fill($grid-column-wide-min-width);
    }
  }
}

@mixin grid-span ($end, $property, $class, $span) {
  @for $i from 1 through $end {
    @if ($span == false) {
      .#{$class}-#{$i} {
        grid-#{$property}: span $i;
      }
    } @else {
      .#{$class}-pos-#{$i} {
        grid-#{$property}: $i;
      }
    }
  }
}

/* Column span */
@if $include-grid-column-span {
  @include grid-span($grid-column-number, 'column', 'col', false);
}

/* Column exact positions */
@if $include-grid-column-exact {
  @include grid-span($grid-column-number, 'column', 'col', true);
}

/* Row span */
@if $include-grid-row-span {
  @include grid-span($grid-row-number, 'row', 'row', false);
}

/* Row exact positions */
@if $include-grid-row-exact {
  @include grid-span($grid-row-number, 'row', 'row', true);
}

/* Column from - to position */
@if $include-grid-column-from-to {
  @for $column from 1 through $grid-column-number {
    @for $i from 1 through $column {
      @if $i < $column {
        .col-#{$i}\/#{$column} {
          grid-column: #{$i}/#{$column + 1}; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }
    }
  }
}

/* Row from - to position */
@if $include-grid-row-from-to {
  @for $row from 1 through $grid-row-number {
    @for $i from 1 through $row {
      @if $i < $row {
        .row-#{$i}\/#{$row} {
          grid-row: #{$i}/#{$row + 1}; // Add +1 because the "grid-column-end" ends before the actual number of column and not with it
        }
      }
    }
  }
}


/** RESPONSIVE COLUMN SIZING */
@each $breakpointKey, $breakpointValue in $breakpoints {
  @for $col from 1 through $grid-column-number {
    @debug "col number: #{$col}";

    @include breakpoint-and-up(breakpointKey) {
      @debug "#{$col}, #{breakpointKey}";
      .#{breakpointKey}\:col-#{$col} {
        grid-column: span $col;
      }
    }
  }
}

