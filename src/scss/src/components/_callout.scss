/**
 * Callout
 */

.callout {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;

  padding: $spacing-small;
  border-radius: $border-radius-main;
  margin-bottom: $spacing-base / 2;
  transition: 0.2s ease-in-out;

  background-color: color('gray', 'lightest');
  color: color('black');
  text-align: center;
  font-size: fontSize('zeta');
  cursor: default;

  p {
    margin-bottom: $spacing-base / 2;

    &:last-of-type {
      margin-bottom: auto;
    }
  }

  a {
    color: color('black');
    font-weight: fontWeight('bold');
    text-decoration: underline;

    &:hover {
      text-decoration: none;
    }
  }
}


/** Colors
--------------------------------------------------*/

@each $name, $value in $colors {
  @if $name == 'white' {
    .callout--color-#{$name} {
      color: color('gray', 'dark');
      background-color: color('white');

      &.callout--action:hover {
        background-color: color('gray', 'lightest');
      }

      a {
        color: color('gray', 'dark');
      }
    }
  } @else {
    @each $colorKey, $colorValue in $value {
      @if ($colorKey == 'base') {
        .callout--color-#{$name} {
          background-color: color(#{$name});
          color: color('white');
          border-width: 0;

          a {
            color: color(#{$name});
          }

          &.callout--action:hover {
            background-color: lighten(color(#{$name}), 5);
          }
        }
      } @else {
        .callout--color-#{$name}-#{$colorKey} {
          background-color: #{$colorValue};
          color: color('white');
          border-width: 0;

          a {
            color: #{$colorValue};
          }

          &.callout--action:hover {
            background-color: adjust-color($colorValue, $lightness: 5%);
          }
        }
      }
    }
  }
}


/** Styles
--------------------------------------------------*/

/** With a shadow */
.callout--shadow {
  box-shadow: shadow('primary');
}

/** With an image */
.callout__image {
  padding: ($spacing-base / 2) 0;
}

/* Hover action */
.callout--action {
  &:hover {
    cursor: pointer;
    background-color: lighten(color('gray', 'light'), 2);
  }
}
