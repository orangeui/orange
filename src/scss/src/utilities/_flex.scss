/**
 * Flex
 */
.flex,
.d-flex,
.row {
  display: flex;
}

/* Flex alignment */
$flex-directions: row, row-reverse, column, column-reverse;
$flex-wrap-items: wrap, nowrap;
$flex-justify-contents: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'between': space-between,
  'around': space-around
);
$flex-align-items: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'stretch': stretch,
  'baseline': baseline
);
$flex-align-contents: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'stretch': stretch,
  'between': space-between,
  'around': space-around
);
$flex-align-selfs: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'stretch': stretch,
  'baseline': baseline
);

.row {
  margin-left: -$o-grid-gap / 2;
  margin-right: -$o-grid-gap / 2;
  flex-wrap: wrap;

  /** COLUMNS
  --------------------------------------------------*/
  @for $column from 1 through $o-grid-column-number {
    .col-#{$column} {
      width: (100% / $o-grid-column-number * $column);
      flex-basis: (100% / $o-grid-column-number * $column);
      padding-left: $o-grid-gap / 2;
      padding-right: $o-grid-gap / 2;
      flex: 0 0 auto;
    }
  }

  /** Responsive */
  @each $breakpoint-key, $breakpoint-value in $o-breakpoints {
    @for $column from 1 through $o-grid-column-number {
      @include breakpoint-and-up($breakpoint-key) {
        .#{$breakpoint-key}\:col-#{$column} {
          width: (100% / $o-grid-column-number * $column);
          flex-basis: (100% / $o-grid-column-number * $column);
          padding-left: $o-grid-gap / 2;
          padding-right: $o-grid-gap / 2;
          flex: 0 0 auto;
        }
      }
    }
  }

  /* Create offsets from sizes 1-12 */
  @for $column from 1 through $o-grid-column-number {
    .offset-#{$column} {
      margin-left: (100% / $o-grid-column-number * $column);
    }
  }

  @each $breakpoint-key, $breakpoint-value in $o-breakpoints {
    @for $column from 1 through $o-grid-column-number {
      @include breakpoint-and-up($breakpoint-key) {
        .#{$breakpoint-key}\:offset-#{$column} {
          margin-left: (100% / $o-grid-column-number * $column);
        }
      }
    }
  }
}

.flex,
.d-flex,
.row {
  /**
   * Properties for parents - containers
   * Direction of displayed flex items
  */
  @each $direction in $flex-directions {
    &--#{$direction} {
      flex-direction: $direction;
    }
  }

  /*
    Flex wrapping items
  */
  @each $wrap in $flex-wrap-items {
    &--#{$wrap} {
      flex-wrap: $wrap;
    }
  }

  /*
    Content alignment on main axis - X axis
  */
  @each $prefix, $meaning in $flex-justify-contents {
    &--justify-#{$prefix} {
      justify-content: $meaning;
    }
  }

  /*
    Content alignment on cross axis - Y axis
  */
  @each $prefix, $meaning in $flex-align-items {
    &--align-#{$prefix} {
      align-items: $meaning;
    }
  }

  /*
    Content alignment on cross axis - Y axis, but only when there are multiple lines and extra space in container - Y axis
  */
  @each $prefix, $meaning in $flex-align-contents {
    &--#{$prefix} {
      align-content: $meaning;
    }
  }

  /*
    Properties for children - flex items
  */
  /* Align Self */
  @each $prefix, $meaning in $flex-align-selfs {
    &__item-#{$prefix} {
      align-self: $meaning;
    }
  }

  @each $class, $point in $o-breakpoints-up {
    @media #{$point} {
      @each $prefix, $meaning in $flex-align-selfs {
        &__item-#{$prefix}-#{$class} {
          align-self: $meaning;
        }
      }
    }
  }

  /* Fill Gap */
  &__fill-gap {
    flex: 1;
  }
}

/**
 * Properties for parents - containers
 * Direction of displayed flex items
 */
@each $breakpoint-key, $breakpoint-value in $o-breakpoints {
  @each $direction in $flex-directions {
    @include breakpoint-and-up($breakpoint-key) {
      .#{$breakpoint-key}\:flex--#{$direction},
      .#{$breakpoint-key}\:row--#{$direction} {
        flex-direction: $direction;
      }
    }
  }
}

/*
  Flex wrapping items
 */
@each $breakpoint-key, $breakpoint-value in $o-breakpoints {
  @each $wrap in $flex-wrap-items {
    @include breakpoint-and-up($breakpoint-key) {
      .#{$breakpoint-key}\:flex--#{$wrap},
      .#{$breakpoint-key}\:row--#{$wrap} {
        flex-wrap: $wrap;
      }
    }
  }
}

/*
  Content alignment on main axis - X axis
 */
@each $breakpoint-key, $breakpoint-value in $o-breakpoints {
  @each $prefix, $meaning in $flex-justify-contents {
    @include breakpoint-and-up($breakpoint-key) {
      .#{$breakpoint-key}\:flex--justify-#{$prefix},
      .#{$breakpoint-key}\:row--justify-#{$prefix} {
        justify-content: $meaning;
      }
    }
  }
}

/*
  Content alignment on cross axis - Y axis
 */
@each $breakpoint-key, $breakpoint-value in $o-breakpoints {
  @each $prefix, $meaning in $flex-align-items {
    @include breakpoint-and-up($breakpoint-key) {
      .#{$breakpoint-key}\:flex--align-#{$prefix},
      .#{$breakpoint-key}\:row--align-#{$prefix} {
        align-items: $meaning;
      }
    }
  }
}

/*
  Content alignment on cross axis - Y axis, but only when there are multiple lines and extra space in container - Y axis
 */
@each $breakpoint-key, $breakpoint-value in $o-breakpoints {
  @each $prefix, $meaning in $flex-align-contents {
    @include breakpoint-and-up($breakpoint-key) {
      .#{$breakpoint-key}\:flex--#{$prefix},
      .#{$breakpoint-key}\:row--#{$prefix} {
        align-content: $meaning;
      }
    }
  }
}

/*
  Properties for children - flex items
 */
/* Align Self */
@each $breakpoint-key, $breakpoint-value in $o-breakpoints {
  @each $prefix, $meaning in $flex-align-selfs {
    @include breakpoint-and-up($breakpoint-key) {
      .#{$breakpoint-key}\:flex__item--#{$prefix},
      .#{$breakpoint-key}\:row__item--#{$prefix} {
        align-self: $meaning;
      }
    }
  }
}
